{"version":3,"file":"zenkai-components.min.js","sources":["../src/datatype/type-manip.js","../src/datatype/type-string.js","../src/dom/dom-manip.js","../src/dom/dom-effects.js","../src/dom/dom-create.js","../src/components/form/global.js","../src/components/form/utils.js","../src/components/form/selector.js","../src/components/form/switch.js","../src/components/collapsible.js","../src/components/form/floating-label.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n    \r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean}  A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) { \r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) { return (Array.isArray(val) || isString(val)) && val.length === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }","import { isString } from \"./type-manip.js\";\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.replace(/\\b\\w/g, function (s) { return s.toUpperCase(); });\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {*} str string\r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    \r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","﻿import { valOrDefault, isNullOrUndefined, isFunction } from '@datatype/type-manip.js';\r\nimport { isNullOrWhitespace } from '@datatype/type-string.js';\r\n\r\nconst isClassName = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n */\r\nconst cleanClass = (cn) => cn.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof Element;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isHTMLElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelector(selector);\r\n    }\r\n\r\n    if (/^#[a-zA-Z0-9_-]+$/.test(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => !isNullOrUndefined(el);\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && !pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { return getElementSibling(el, \"previousElementSibling\", predCb); }\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { return getElementSibling(el, \"nextElementSibling\", predCb); }\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {*} callback \r\n * @param {number} max Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, el) { target.insertAdjacentElement('beforebegin', el); }\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, el) { target.insertAdjacentElement('afterend', el); }\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, el) { target.insertAdjacentElement('afterbegin', el); }\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(e, c) {\r\n    return e.className.split(\" \").indexOf(c) !== -1;\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} el element\r\n * @param {string|Array} c class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(el, c) {\r\n    if (Array.isArray(c)) {\r\n        c.forEach((val) => _removeClass(el, val));\r\n    }\r\n\r\n    _removeClass(el, c);\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\nfunction _removeClass(e, c) {\r\n    if (hasClass(e, c)) {\r\n        e.className = e.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} el Element\r\n * @param {string} c classes\r\n * @memberof DOM\r\n */\r\nexport function addClass(el, c) {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.map(function (c) { return valOrDefault(c.class, c); }).join(' ');\r\n    }\r\n\r\n    var strClass = valOrDefault(c.class, c);\r\n    if (isNullOrWhitespace(el.className)) {\r\n        el.className = strClass;\r\n    }\r\n    else if (!hasClass(el, c)) {\r\n        el.className += \" \" + strClass;\r\n    }\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} el \r\n * @param {string} c ClassName\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        removeClass(el, c);\r\n    } else {\r\n        addClass(el, c);\r\n    }\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {Node} node \r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n */\r\nexport function copytoClipboard(value) {\r\n    var el = document.createElement('textarea');\r\n    el.value = isHTMLElement(value) ? value.textContent : value;\r\n    el.readOnly = true;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    el.remove();\r\n\r\n    return true;\r\n}\r\n\r\nfunction stickyHeader(header, target) {\r\n    const css_sticky = 'sticky';\r\n    var sticky = target.offsetTop + target.clientHeight;\r\n    var timeout;\r\n    window.addEventListener('scroll', function (e) {\r\n        if (timeout) window.cancelAnimationFrame(timeout);\r\n        timeout = window.requestAnimationFrame(function () {\r\n            if (window.pageYOffset >= sticky)\r\n                addClass(header, css_sticky);\r\n            else\r\n                removeClass(header, css_sticky);\r\n        });\r\n    }, false);\r\n}","import { removeClass, addClass } from './dom-manip.js';\r\n\r\nconst Elements = ['BUTTON', 'COMMAND', 'FIELDSET', 'INPUT', 'KEYGEN', 'OPTGROUP', 'OPTION', 'SELECT', 'TEXTAREA'];\r\n\r\n/** \r\n * @enum \r\n * @ignore\r\n * @memberof DOM\r\n */\r\nconst UI = {\r\n    COLLAPSE: 'collapse',\r\n    CHECKED: 'checked',\r\n    DISABLED: 'disabled',\r\n    EMPTY: 'empty',\r\n    HIDDEN: 'hidden',\r\n    SELECTED: 'selected',\r\n};\r\n\r\n/**\r\n * Shows an element\r\n * @param {Element} el Element\r\n * @memberof DOM\r\n */\r\nexport function show(el) { removeClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Hides an element\r\n * @param {Element} el element\r\n * @memberof DOM\r\n */\r\nexport function hide(el) { addClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(el) { return Object.assign(el, { position: 'absolute', top: '-9999px', left: '-9999px' }); }\r\n\r\n/**\r\n * Applies highlighting style to an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function highlight(el) { addClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Removes highlighting style of an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function unhighlight(el) { removeClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Enable an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function enable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val === false;\r\n    }\r\n\r\n    el.dataset.disabled = val === false;\r\n}\r\n\r\n/**\r\n * Disable an element\r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function disable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val !== false;\r\n    }\r\n\r\n    el.dataset.disabled = val !== false;\r\n}","import { disable } from './dom-effects.js';\r\nimport { isString } from '@datatype/type-manip.js';\r\n\r\nconst create = (tagName) => document.createElement(tagName);\r\n\r\nconst addClass = (el, c) => {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.join(' ');\r\n    }\r\n    if (isString(c)) {\r\n        el.className = c;\r\n    }\r\n};\r\n\r\n/**\r\n * Creates the element for the specified tagName\r\n * @param {string} tagName element\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function createElement(tagName, eId, eClass) {\r\n    var el = document.createElement(tagName);\r\n    if (eId) {\r\n        el.id = eId;\r\n    }\r\n    if (eClass) {\r\n        addClass(el, eClass);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment() { return document.createDocumentFragment(); }\r\n\r\nexport function createTextNode(str) { return document.createTextNode(str); }\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} rel \r\n * @param {string} href \r\n * @param {object} attr \r\n * @memberof DOM\r\n */\r\nexport function createLink(rel, href, attr) {\r\n    var link = create(\"link\");\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (attr) {\r\n        addAttributes(link, attr);\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @param {object} attr \r\n * @memberof DOM\r\n */\r\nexport function createHeader(attr) {\r\n    var header = create('header');\r\n\r\n    if (attr) {\r\n        addAttributes(header, attr);\r\n    }\r\n\r\n    return header;\r\n}\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport function createDiv(attr, children) {\r\n    var div = create(\"div\");\r\n\r\n    if (attr) {\r\n        addAttributes(div, attr);\r\n    }\r\n    if (children) {\r\n        addChildren(div, children);\r\n    }\r\n\r\n    return div;\r\n}\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function createAside(attr) {\r\n    var aside = create('aside');\r\n\r\n    if (attr) {\r\n        addAttributes(aside, attr);\r\n    }\r\n\r\n    return aside;\r\n}\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n */\r\nexport function createLineBreak() {\r\n    return create('br');\r\n}\r\n\r\n/**\r\n * Creates a `<h[1..6]>` (heading) element with some attributes\r\n * @param {string} level Level\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nfunction createHeading(level, attr) {\r\n    if (level > 6) {\r\n        return null;\r\n    }\r\n    var heading = create(`h${level}`);\r\n\r\n    if (attr) {\r\n        addAttributes(heading, attr);\r\n    }\r\n\r\n    return heading;\r\n}\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n */\r\nexport const createH1 = createHeading.bind(null, 1);\r\nexport const createH2 = createHeading.bind(null, 2);\r\nexport const createH3 = createHeading.bind(null, 3);\r\nexport const createH4 = createHeading.bind(null, 4);\r\nexport const createH5 = createHeading.bind(null, 5);\r\nexport const createH6 = createHeading.bind(null, 6);\r\n\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport function createP(attr) {\r\n    var p = create(\"p\");\r\n\r\n    if (attr) {\r\n        addAttributes(p, attr);\r\n    }\r\n\r\n    return p;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport function createUl(attr) {\r\n    var ul = create(\"ul\");\r\n\r\n    if (attr) {\r\n        addAttributes(ul, attr);\r\n    }\r\n\r\n    return ul;\r\n}\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createLi(attr, el) {\r\n    var li = create('li');\r\n\r\n    if (attr) {\r\n        addAttributes(li, attr);\r\n    }\r\n\r\n    if (el) {\r\n        addChildren(li, el);\r\n    }\r\n\r\n    return li;\r\n}\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, attr) {\r\n    var a = create('a');\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n    if (attr) {\r\n        addAttributes(a, attr);\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, attr) {\r\n    var img = create('img');\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n    if (attr) {\r\n        addAttributes(img, attr);\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createSpan(attr) {\r\n    var span = create(\"span\");\r\n\r\n    if (attr) {\r\n        addAttributes(span, attr);\r\n    }\r\n\r\n    return span;\r\n}\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createStrong(attr) {\r\n    var strong = create(\"strong\");\r\n\r\n    if (attr) {\r\n        addAttributes(strong, attr);\r\n    }\r\n\r\n    return strong;\r\n}\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createEm(attr) {\r\n    var em = create(\"em\");\r\n\r\n    if (attr) {\r\n        addAttributes(em, attr);\r\n    }\r\n\r\n    return em;\r\n}\r\n\r\n// Form Element\r\n\r\n/**\r\n * Creates a `<input>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport function createInput(attr) {\r\n    var input = create('input');\r\n\r\n    if (attr) {\r\n        addAttributes(input, attr);\r\n    }\r\n\r\n    return input;\r\n}\r\n\r\n[\"checkbox\", \"hidden\", \"file\"].forEach(function (type) {\r\n    createInput[type] = function (attr) {\r\n        var input = createInput(attr);\r\n        input.type = type;\r\n        return input;\r\n    };\r\n});\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport function createLabel(attr) {\r\n    var label = create('label');\r\n\r\n    if (attr) {\r\n        addAttributes(label, attr);\r\n    }\r\n\r\n    return label;\r\n}\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport function createTextArea(attr) {\r\n    var textArea = create('textarea');\r\n\r\n    if (attr) {\r\n        addAttributes(textArea, attr);\r\n    }\r\n\r\n    return textArea;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createButton(attr) {\r\n    var btn = create(\"button\");\r\n    btn.type = \"button\";\r\n\r\n    if (attr) {\r\n        addAttributes(btn, attr);\r\n    }\r\n\r\n    return btn;\r\n}\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTable(attr) {\r\n    var table = create(\"table\");\r\n\r\n    if (attr) {\r\n        addAttributes(table, attr);\r\n    }\r\n\r\n    return table;\r\n}\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableHeader(attr) {\r\n    var thead = create(\"thead\");\r\n\r\n    if (attr) {\r\n        addAttributes(thead, attr);\r\n    }\r\n\r\n    return thead;\r\n}\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableBody(attr) {\r\n    var tbody = create(\"tbody\");\r\n\r\n    if (attr) {\r\n        addAttributes(tbody, attr);\r\n    }\r\n\r\n    return tbody;\r\n}\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableFooter(attr) {\r\n    var tfoot = create(\"tfoot\");\r\n\r\n    if (attr) {\r\n        addAttributes(tfoot, attr);\r\n    }\r\n\r\n    return tfoot;\r\n}\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableRow(attr) {\r\n    var tr = create(\"tr\");\r\n\r\n    if (attr) {\r\n        addAttributes(tr, attr);\r\n    }\r\n\r\n    return tr;\r\n}\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableHeaderCell(attr) {\r\n    var th = create(\"th\");\r\n\r\n    if (attr) {\r\n        addAttributes(th, attr);\r\n    }\r\n\r\n    return th;\r\n}\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableCell(attr) {\r\n    var td = create(\"td\");\r\n\r\n    if (attr) {\r\n        addAttributes(td, attr);\r\n    }\r\n\r\n    return td;\r\n}\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} el element\r\n * @param {Object} attr attribute\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(el, attr) {\r\n    const ATTR_MAP = {\r\n        id: [assign],\r\n        text: [assign, 'textContent'],\r\n        html: [assign, 'innerHTML'],\r\n        accept: [assign],\r\n        disabled: [disable, el],\r\n        class: [addClass, el],\r\n        value: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        data: [Object.assign, el.dataset]\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attr)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attr[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        el[key] = val;\r\n    }\r\n}\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} el element\r\n * @param {HTMLCollection} children children elements\r\n * @memberof DOM\r\n */\r\nfunction addChildren(el, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(el, children);\r\n    } else if (children instanceof Element) {\r\n        el.appendChild(children);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {HTMLElement} parent\r\n * @param {HTMLElement[]} children\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    var fragment = createDocFragment();\r\n    children.forEach(element => {\r\n        fragment.appendChild(element);\r\n    });\r\n    parent.appendChild(fragment);\r\n    fragment = null;\r\n\r\n    return parent;\r\n}\r\n\r\nfunction echo(o) { o; }","import { valOrDefault } from \"@datatype/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));","import { getElement } from '@dom/index.js';\r\nimport { valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, isNull, valOrDefault, isUndefined } from '@datatype/index.js';\r\nimport { check, uncheck, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SelectorFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('SelectorFactory>>Container must be an HTML Element');\r\n            return ERROR;\r\n        }\r\n\r\n        var selector = null;\r\n        switch (getType(container)) {\r\n            case 'selector':\r\n                selector = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                selector = Object.create(FormSelector);\r\n                break;\r\n        }\r\n        Object.assign(selector, {\r\n            container: container,\r\n            querySelector: createDomQuery(selector),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return selector;\r\n    }\r\n};\r\n\r\nconst BaseSelector = {\r\n    name: 'selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item) {\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(item.dataset.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n\r\n            if (getState(item) === Status.ON) {\r\n                this.setCurrentItem(item);\r\n            }\r\n            if (!isUndefined(value) && item.dataset.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            item.addEventListener('click', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst FormSelector = {\r\n    name: 'form-selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item, _input) {\r\n        var input = valOrDefault(_input, getInput('radio', item));\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(input.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n            let input = getInput('radio', item);\r\n            setState(item, input.checked ? Status.ON : Status.OFF);\r\n            if (input.checked) {\r\n                this.setCurrentItem(item, input);\r\n            }\r\n            if (input.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            input.addEventListener('change', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item, input);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSelector), createDomQuery(FormSelector)].join(',');\r\n\r\nfunction getSelectors(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSelector(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSelectors(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Selector(container, _callback) {\r\n    const selectors = getSelectors(container);\r\n\r\n    if (selectors === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < selectors.length; i++) {\r\n        let selector = SelectorFactory.create(selectors[i], _callback);\r\n        selector.activate();\r\n    }\r\n\r\n    return selectors;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty } from '@datatype/index.js';\r\nimport { setState } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst ATTRIBUTE = 'switch';\r\n\r\nconst NONE = -1;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst toData = (name) => `[data-type=${name}]`;\r\n\r\nconst isSwitch = (element) => element.dataset['type'] === ATTRIBUTE;\r\n\r\nconst SwitchFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    activate() {\r\n        var input = getInput('checkbox', this.container);\r\n        setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n\r\n        // Bind events\r\n        input.addEventListener('change', (e) => {\r\n            setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n            this.callback(input.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nexport function Switch(container, _callback) {\r\n    const switches = getSliders(container);\r\n\r\n    if (switches === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < switches.length; i++) {\r\n        SwitchFactory.create({ container: switches[i], callback: _callback }).activate();\r\n    }\r\n\r\n    return switches;\r\n}\r\n\r\nfunction getSliders(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSwitch(container) ? [container] : getElements(toData(ATTRIBUTE), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSliders(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData(ATTRIBUTE));\r\n    }\r\n\r\n    return NONE;\r\n}\r\n","import { getElement, getElements, addClass, removeClass, isHTMLElement, findAncestor, show, hide } from '@dom/index.js';\r\nimport { isString, isNullOrUndefined, isEmpty, isFunction } from '@datatype/index.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst NONE = -1;\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst toData = (name) => `[data-boost=${name}]`;\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    callback: null,\r\n    header: null,\r\n    content: null,\r\n    name: 'collapsible',\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    open() { this.toggle(show, State.OPEN, addClass); },\r\n    close() { this.toggle(hide, State.CLOSED, removeClass); },\r\n    toggle(displayCb, state, classCb) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        classCb(this.container, 'expanded');\r\n    },\r\n    init() {\r\n        const container = this.container;\r\n        this.header = getElement(`[data-${this.name}-header]`, container);\r\n        this.content = getElement(`[data-${this.name}-content]`, container);\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.getState() === State.CLOSED) {\r\n                    this.open();\r\n                    this.callback(this);\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    items: null,\r\n    callback: null,\r\n    init() {\r\n        this.items = [];\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let accordionElement = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create({\r\n                container: accordionElement,\r\n                name: 'accordion',\r\n                callback: (selectedItem) => {\r\n                    this.items.filter((item) => item !== selectedItem && item.isExpanded())\r\n                        .forEach((other) => other.close());\r\n                }\r\n            });\r\n            this.items.push(collapsible);\r\n            collapsible.activate();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Collapsible\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Collapsible(container, _callback) {\r\n    var collapsibles = getCollapsibles(container);\r\n\r\n    if (collapsibles === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < collapsibles.length; i++) {\r\n        CollapsibleFactory.create({\r\n            container: collapsibles[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Accordion\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Accordion(container, _callback) {\r\n    var accordions = getAccordions(container);\r\n\r\n    if (accordions === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < accordions.length; i++) {\r\n        AccordionFactory.create({\r\n            container: accordions[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return accordions;\r\n}\r\n\r\nfunction getCollapsibles(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isCollapsible(container) ? [container] : getElements('[data-collapsible]', container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getCollapsibles(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements('[data-collapsible]');\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nfunction getAccordions(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isAccordion(container) ? [container] : getElements(toData('accordion'), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getAccordions(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData('accordion'));\r\n    }\r\n\r\n    return NONE;\r\n}","import { getElement, getElements,  removeClass, addClass } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isUndefined } from '@datatype/index.js';\r\n\r\n// Label as placeholder\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let lbl = labels[i];\r\n        if (lbl.dataset['type'] == 'placeholder' && !isNullOrWhitespace(lbl.htmlFor)) {\r\n            let input = getElement(`#${lbl.htmlFor}`);\r\n\r\n            if (isUndefined(input)) {\r\n                throw new Error(`Missing input for label: ${lbl.htmlFor}`);\r\n            }\r\n            \r\n            if (isNullOrWhitespace(input.placeholder)) {\r\n                bindEvents(input, lbl);\r\n                if (input.value.length === 0) {\r\n                    addClass(lbl, 'down');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // add counters\r\n    var counters = getElements('[data-counter]', form);\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let input = getElement(`#${counter.dataset['counter']}`);\r\n        counter.dataset['counterMax'] = input.maxLength;\r\n        if (input) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            input.addEventListener('input', function (e) {\r\n                counter.dataset['counterVal'] = input.value.length;\r\n            });\r\n        }\r\n    }\r\n\r\n    function bindEvents(input, lbl) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                removeClass(lbl, 'down');\r\n                addClass(lbl.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                if (input.value.length === 0) {\r\n                    addClass(lbl, 'down');\r\n                }\r\n                removeClass(lbl.parentElement, 'focused');\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","val","Array","isArray","isString","length","str","String","isFunction","isNull","isNullOrWhitespace","test","isClassName","selector","cleanClass","cn","replace","trim","isHTMLElement","obj","nodeType","HTMLElement","getElement","_container","container","document","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","findAncestor","target","callback","max","Element","parent","parentElement","findAncestorIter","findAncestorInf","hasClass","e","c","className","split","indexOf","removeClass","el","forEach","_removeClass","addClass","map","class","join","strClass","Elements","UI","show","hide","disable","tagName","disabled","dataset","createHeading","level","attr","heading","createElement","ATTR_MAP","id","assign","text","html","accept","placeholder","readonly","data","Object","DEFAULT_MAP","echo","keys","key","addAttributes","bind","o","STATE","setState","element","check","uncheck","getInput","type","label","htmlFor","NONE","Status","SelectorFactory","console","error","create","BaseSelector","FormSelector","createDomQuery","name","current","setCurrentItem","item","this","activate","defaultItem","selectorItems","i","len","_this","addEventListener","_input","input","checked","_this2","isSelector","RegExp","domQuery","ATTRIBUTE","toData","isSwitch","SwitchFactory","args","instance","State","isCollapsible","isAccordion","CollapsibleFactory","header","content","getState","isCollapsed","isExpanded","open","toggle","close","displayCb","state","classCb","init","bindEvents","targetCollapsible","parentNode","AccordionFactory","items","accordionElements","accordionElement","collapsible","selectedItem","filter","other","push","_callback","accordions","getAccordions","collapsibles","getCollapsibles","selectors","getSelectors","switches","getSliders","form","labels","lbl","Error","counters","counter","maxLength"],"mappings":"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"}