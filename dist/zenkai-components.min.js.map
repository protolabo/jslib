{"version":3,"file":"zenkai-components.min.js","sources":["../src/datatype/type-manip.js","../src/datatype/type-string.js","../src/dom/dom-manip.js","../src/dom/dom-create.js","../src/dom/dom-effects.js","../src/components/form/global.js","../src/components/form/utils.js","../src/components/form/selector.js","../src/components/form/switch.js","../src/components/collapsible.js","../src/components/form/floating-label.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean}  A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) {\r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) { return (Array.isArray(val) || isString(val)) && val.length === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }\r\n\r\n[isNull, isUndefined, isNullOrUndefined, isObject, isFunction, isString, isDate, isEmpty, isInt].forEach((fn)=>{\r\n    fn['some'] = function (values, min = 1) {\r\n        if(min === 1) {\r\n            for (let i = 0; i < values.length; i++) {\r\n                if (fn(values[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter >= min;\r\n    };\r\n    fn['all'] = function (values) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (!fn(values[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    fn['one'] = function (values) {\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter === 1;\r\n    };\r\n});","import { isString } from \"./type-manip.js\";\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.replace(/\\b\\w/g, function (s) { return s.toUpperCase(); });\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {*} str string\r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    \r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","﻿import { valOrDefault, isNullOrUndefined, isFunction } from '@datatype/type-manip.js';\r\nimport { isNullOrWhitespace } from '@datatype/type-string.js';\r\n\r\nconst isClassName = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @private\r\n */\r\nconst cleanClass = (cn) => cn.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof Element;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isHTMLElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelector(selector);\r\n    }\r\n\r\n    if (/^#[a-zA-Z0-9_-]+$/.test(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => !isNullOrUndefined(el);\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && !pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { return getElementSibling(el, \"previousElementSibling\", predCb); }\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { return getElementSibling(el, \"nextElementSibling\", predCb); }\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {*} callback \r\n * @param {number} max Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, el) { target.insertAdjacentElement('beforebegin', el); }\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, el) { target.insertAdjacentElement('afterend', el); }\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, el) { target.insertAdjacentElement('afterbegin', el); }\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(e, c) {\r\n    return e.className.split(\" \").indexOf(c) !== -1;\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} el element\r\n * @param {string|Array} c class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(el, c) {\r\n    if (Array.isArray(c)) {\r\n        c.forEach((val) => _removeClass(el, val));\r\n    }\r\n\r\n    _removeClass(el, c);\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\nfunction _removeClass(e, c) {\r\n    if (hasClass(e, c)) {\r\n        e.className = e.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} el Element\r\n * @param {string} c classes\r\n * @memberof DOM\r\n */\r\nexport function addClass(el, c) {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.map(function (c) { return valOrDefault(c.class, c); }).join(' ');\r\n    }\r\n\r\n    var strClass = valOrDefault(c.class, c);\r\n    if (isNullOrWhitespace(el.className)) {\r\n        el.className = strClass;\r\n    }\r\n    else if (!hasClass(el, c)) {\r\n        el.className += \" \" + strClass;\r\n    }\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} el \r\n * @param {string} c ClassName\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        removeClass(el, c);\r\n    } else {\r\n        addClass(el, c);\r\n    }\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {Node} node \r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    var el = document.createElement('textarea');\r\n    el.value = isHTMLElement(value) ? value.textContent : value;\r\n    el.readOnly = true;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    el.remove();\r\n\r\n    return true;\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction stickyHeader(header, target) {\r\n    const css_sticky = 'sticky';\r\n    var sticky = target.offsetTop + target.clientHeight;\r\n    var timeout;\r\n    window.addEventListener('scroll', function (e) {\r\n        if (timeout) window.cancelAnimationFrame(timeout);\r\n        timeout = window.requestAnimationFrame(function () {\r\n            if (window.pageYOffset >= sticky)\r\n                addClass(header, css_sticky);\r\n            else\r\n                removeClass(header, css_sticky);\r\n        });\r\n    }, false);\r\n}","import { isString, valOrDefault } from '@datatype/type-manip.js';\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} _attribute \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute) {\r\n    var element = document.createElement(tagName);\r\n    if (_attribute) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates the element for the specified tagName\r\n * @param {string} tagName element\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function createElement(tagName, eId, eClass) {\r\n    var el = create(tagName);\r\n\r\n    if (eId) {\r\n        el.id = eId;\r\n    }\r\n    if (eClass) {\r\n        setClass(el, eClass);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport const createDocFragment = () => document.createDocumentFragment();\r\n\r\n/**\r\n * Creates a text node\r\n * @function\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} rel \r\n * @param {string} href \r\n * @param {object} attr \r\n * @memberof DOM\r\n */\r\nexport function createLink(rel, href, attr) {\r\n    var link = create(\"link\");\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (attr) {\r\n        addAttributes(link, attr);\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n//#region Content sectionning\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function\r\n * @param {object} [attribute] \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n//#endregion\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createBlockQuotation(cite, attr) {\r\n    var element = create('blockquote', attr);\r\n\r\n    if (cite) {\r\n        element.cite = cite;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, attr) {\r\n    var a = create('a', attr);\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, attr) {\r\n    var img = create('img', attr);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, alt, attr) {\r\n    var img = create('audio', attr);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, alt, attr) {\r\n    var img = create('video', attr);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, attr) {\r\n    var quote = create('q', attr);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, attr) {\r\n    var element = create('time', attr);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n//#region Form-associated Element\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\n\r\n\r\nfunction createInputAs(type, attr) {\r\n    var input = create('input', attr);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<input>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n\r\n[\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"].forEach(function (type) {\r\n    createInput[type] = createInputAs.bind(null, type);\r\n});\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\nfunction createButtonAs(type, attr) {\r\n    var btn = create(\"button\", attr);\r\n    btn.type = type;\r\n\r\n    return btn;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n[\"submit\", \"reset\", \"button\"].forEach(function (type) {\r\n    createButton[type] = createButtonAs.bind(null, type);\r\n});\r\n\r\n//#endregion\r\n\r\n//#region Table Element\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableHeaderCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableDataCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n//#endregion\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { o; }\r\n\r\n/* istanbul ignore next */\r\nconst setClass = (el, c) => {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.join(' ');\r\n    }\r\n    if (isString(c)) {\r\n        el.className = c;\r\n    }\r\n};\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    const ATTR_MAP = {\r\n        accept: [assign],\r\n        children: [addChildren, element],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        disabled: [assign],\r\n        draggable: [assign],\r\n        editable: [assign, 'contenteditable'],\r\n        html: [assign, 'innerHTML'],\r\n        id: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        style: [assign],\r\n        text: [assign, 'textContent'],\r\n        title: [assign],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n}\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} el element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addChildren(el, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(el, children);\r\n    } else if (children instanceof Element) {\r\n        el.appendChild(children);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {HTMLElement} parent\r\n * @param {HTMLElement[]} children\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    var fragment = createDocFragment();\r\n\r\n    children.forEach(element => {\r\n        fragment.appendChild(element);\r\n    });\r\n    parent.appendChild(fragment);\r\n    fragment = null;\r\n\r\n    return parent;\r\n}","import { removeClass, addClass } from './dom-manip.js';\r\n\r\nconst Elements = ['BUTTON', 'COMMAND', 'FIELDSET', 'INPUT', 'KEYGEN', 'OPTGROUP', 'OPTION', 'SELECT', 'TEXTAREA'];\r\n\r\n/** \r\n * @enum \r\n * @ignore\r\n * @memberof DOM\r\n */\r\nconst UI = {\r\n    COLLAPSE: 'collapse',\r\n    CHECKED: 'checked',\r\n    DISABLED: 'disabled',\r\n    EMPTY: 'empty',\r\n    HIDDEN: 'hidden',\r\n    SELECTED: 'selected',\r\n};\r\n\r\n/**\r\n * Shows an element\r\n * @param {Element} el Element\r\n * @memberof DOM\r\n */\r\nexport function show(el) { removeClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Hides an element\r\n * @param {Element} el element\r\n * @memberof DOM\r\n */\r\nexport function hide(el) { addClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(el) { return Object.assign(el, { position: 'absolute', top: '-9999px', left: '-9999px' }); }\r\n\r\n/**\r\n * Applies highlighting style to an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function highlight(el) { addClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Removes highlighting style of an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function unhighlight(el) { removeClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Enable an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function enable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val === false;\r\n    }\r\n\r\n    el.dataset.disabled = val === false;\r\n}\r\n\r\n/**\r\n * Disable an element\r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function disable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val !== false;\r\n    }\r\n\r\n    el.dataset.disabled = val !== false;\r\n}","import { valOrDefault } from \"@datatype/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));","import { getElement } from '@dom/index.js';\r\nimport { valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, isNull, valOrDefault, isUndefined } from '@datatype/index.js';\r\nimport { check, uncheck, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SelectorFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('SelectorFactory>>Container must be an HTML Element');\r\n            return ERROR;\r\n        }\r\n\r\n        var selector = null;\r\n        switch (getType(container)) {\r\n            case 'selector':\r\n                selector = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                selector = Object.create(FormSelector);\r\n                break;\r\n        }\r\n        Object.assign(selector, {\r\n            container: container,\r\n            querySelector: createDomQuery(selector),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return selector;\r\n    }\r\n};\r\n\r\nconst BaseSelector = {\r\n    name: 'selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item) {\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(item.dataset.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n\r\n            if (getState(item) === Status.ON) {\r\n                this.setCurrentItem(item);\r\n            }\r\n            if (!isUndefined(value) && item.dataset.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            item.addEventListener('click', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst FormSelector = {\r\n    name: 'form-selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item, _input) {\r\n        var input = valOrDefault(_input, getInput('radio', item));\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(input.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n            let input = getInput('radio', item);\r\n            setState(item, input.checked ? Status.ON : Status.OFF);\r\n            if (input.checked) {\r\n                this.setCurrentItem(item, input);\r\n            }\r\n            if (input.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            input.addEventListener('change', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item, input);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSelector), createDomQuery(FormSelector)].join(',');\r\n\r\nfunction getSelectors(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSelector(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSelectors(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Selector(container, _callback) {\r\n    const selectors = getSelectors(container);\r\n\r\n    if (selectors === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < selectors.length; i++) {\r\n        let selector = SelectorFactory.create(selectors[i], _callback);\r\n        selector.activate();\r\n    }\r\n\r\n    return selectors;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty } from '@datatype/index.js';\r\nimport { check, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SwitchFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('SwitchFactory>>Container must be an HTML Element');\r\n            return ERROR;\r\n        }\r\n\r\n        var widget = null;\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n        Object.assign(widget, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        if (getState(this.container) === Status.ON) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        // Bind events\r\n        this.container.addEventListener('click', () => {\r\n            setState(this.container, getState(this.container) === Status.ON ? Status.OFF : Status.ON);\r\n            this.callback(this.container.dataset.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        var input = getInput('checkbox', this.container);\r\n        setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n\r\n        // Bind events\r\n        input.addEventListener('change', (e) => {\r\n            setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n            this.callback(input.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nfunction getSliders(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSwitch(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSliders(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Switch(container, _callback) {\r\n    const switches = getSliders(container);\r\n\r\n    if (switches === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < switches.length; i++) {\r\n        let switchWidget = SwitchFactory.create(switches[i], _callback);\r\n        switchWidget.activate();\r\n    }\r\n\r\n    return switches;\r\n}","import { getElement, getElements, addClass, removeClass, isHTMLElement, findAncestor, show, hide } from '@dom/index.js';\r\nimport { isString, isNullOrUndefined, isEmpty, isFunction } from '@datatype/index.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst NONE = -1;\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst toData = (name) => `[data-boost=${name}]`;\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    callback: null,\r\n    header: null,\r\n    content: null,\r\n    name: 'collapsible',\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    open() { this.toggle(show, State.OPEN, addClass); },\r\n    close() { this.toggle(hide, State.CLOSED, removeClass); },\r\n    toggle(displayCb, state, classCb) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        classCb(this.container, 'expanded');\r\n    },\r\n    init() {\r\n        const container = this.container;\r\n        this.header = getElement(`[data-${this.name}-header]`, container);\r\n        this.content = getElement(`[data-${this.name}-content]`, container);\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.getState() === State.CLOSED) {\r\n                    this.open();\r\n                    this.callback(this);\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    items: null,\r\n    callback: null,\r\n    init() {\r\n        this.items = [];\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let accordionElement = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create({\r\n                container: accordionElement,\r\n                name: 'accordion',\r\n                callback: (selectedItem) => {\r\n                    this.items.filter((item) => item !== selectedItem && item.isExpanded())\r\n                        .forEach((other) => other.close());\r\n                }\r\n            });\r\n            this.items.push(collapsible);\r\n            collapsible.activate();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Collapsible\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Collapsible(container, _callback) {\r\n    var collapsibles = getCollapsibles(container);\r\n\r\n    if (collapsibles === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < collapsibles.length; i++) {\r\n        CollapsibleFactory.create({\r\n            container: collapsibles[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Accordion\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Accordion(container, _callback) {\r\n    var accordions = getAccordions(container);\r\n\r\n    if (accordions === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < accordions.length; i++) {\r\n        AccordionFactory.create({\r\n            container: accordions[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return accordions;\r\n}\r\n\r\nfunction getCollapsibles(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isCollapsible(container) ? [container] : getElements('[data-collapsible]', container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getCollapsibles(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements('[data-collapsible]');\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nfunction getAccordions(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isAccordion(container) ? [container] : getElements(toData('accordion'), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getAccordions(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData('accordion'));\r\n    }\r\n\r\n    return NONE;\r\n}","import { getElement, getElements, removeClass, addClass } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isUndefined, isEmpty } from '@datatype/index.js';\r\n\r\n// Label as placeholder\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isUndefined(input)) {\r\n                throw new Error(`Missing input for label: ${label.htmlFor}`);\r\n            }\r\n\r\n            if (isNullOrWhitespace(input.placeholder)) {\r\n                bindEvents(input, label);\r\n                if (input.value.length === 0) {\r\n                    addClass(label, 'down');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // add counters\r\n    var counters = getElements('[data-counter]', form);\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let input = getElement(`#${counter.dataset['counter']}`);\r\n        counter.dataset['counterMax'] = input.maxLength;\r\n        if (input) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            input.addEventListener('input', function (e) {\r\n                counter.dataset['counterVal'] = input.value.length;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        var value = input.value;\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                removeClass(label, 'down');\r\n                addClass(label.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                if (isEmpty(value)) {\r\n                    addClass(label, 'down');\r\n                }\r\n                removeClass(label.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('input', function (e) {\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(value)) {\r\n                        addClass(label, 'down');\r\n                    } else {\r\n                        removeClass(label, 'down');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","val","Array","isArray","isString","length","str","String","isFunction","isNull","isNullOrWhitespace","test","_typeof","Date","Object","prototype","toString","call","Number","isInteger","forEach","fn","values","min","i","counter","isClassName","selector","cleanClass","cn","replace","trim","isHTMLElement","obj","nodeType","HTMLElement","getElement","_container","container","document","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","findAncestor","target","callback","max","Element","parent","parentElement","findAncestorIter","findAncestorInf","hasClass","e","c","className","split","indexOf","removeClass","el","_removeClass","addClass","map","class","join","strClass","create","tagName","_attribute","element","createElement","attribute","ATTR_MAP","accept","assign","children","addChildren","setClass","data","dataset","disabled","draggable","editable","html","id","placeholder","readonly","style","text","title","DEFAULT_MAP","echo","keys","key","addAttributes","createDocFragment","createDocumentFragment","bind","createInputAs","type","attr","input","createInput","createButtonAs","btn","createButton","o","fragment","appendChild","UI","show","hide","getType","getState","setState","check","uncheck","getInput","label","htmlFor","NONE","Status","SelectorFactory","console","error","BaseSelector","FormSelector","createDomQuery","name","current","setCurrentItem","item","this","activate","defaultItem","selectorItems","len","_this","addEventListener","_input","checked","_this2","isSelector","RegExp","domQuery","SwitchFactory","widget","BaseSwitch","FormSwitch","isSwitch","State","toData","isCollapsible","isAccordion","CollapsibleFactory","args","instance","header","content","isCollapsed","isExpanded","open","toggle","close","displayCb","state","classCb","init","bindEvents","targetCollapsible","parentNode","AccordionFactory","items","accordionElements","accordionElement","collapsible","selectedItem","filter","other","push","_callback","accordions","getAccordions","collapsibles","getCollapsibles","selectors","getSelectors","switches","getSliders","form","labels","Error","counters","maxLength","activeElement"],"mappings":"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"}