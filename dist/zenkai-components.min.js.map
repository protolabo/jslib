{"version":3,"file":"zenkai-components.min.js","sources":["../src/datatype/type-manip.js","../src/datatype/type-string.js","../src/dom/checker.js","../src/dom/dom-create.js","../src/dom/element-class-manip.js","../src/dom/element-getter.js","../src/components/form/global.js","../src/components/form/utils.js","../src/components/form/selector.js","../src/components/form/switch.js","../src/components/utils.js","../src/components/collapsible.js","../src/components/form/floating-label.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean}  A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) {\r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) { return (Array.isArray(val) || isString(val)) && val.length === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }\r\n\r\n[isNull, isUndefined, isNullOrUndefined, isObject, isFunction, isString, isDate, isEmpty, isInt].forEach((fn)=>{\r\n    fn['some'] = function (values, min = 1) {\r\n        if(min === 1) {\r\n            for (let i = 0; i < values.length; i++) {\r\n                if (fn(values[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter >= min;\r\n    };\r\n    fn['all'] = function (values) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (!fn(values[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    fn['one'] = function (values) {\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter === 1;\r\n    };\r\n});","import { isString } from \"./type-manip.js\";\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.replace(/\\b\\w/g, function (s) { return s.toUpperCase(); });\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {*} str string\r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    \r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { isNullOrUndefined } from '@datatype/index.js';\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof Element;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isHTMLElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof HTMLElement;\r\n}","import { isNullOrUndefined, isString } from \"@datatype/index.js\";\r\nimport { isElement } from \"./checker.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} _attribute \r\n * @param {HTMLElement|HTMLElement[]} _elements \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute, _elements) {\r\n    var element = document.createElement(tagName);\r\n    if (_attribute) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n    if (_elements) {\r\n        addChildren(element, _elements);\r\n    }\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates the element for the specified tagName\r\n * @param {string} tagName element\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function createElement(tagName, eId, eClass) {\r\n    var el = create(tagName);\r\n\r\n    if (eId) {\r\n        el.id = eId;\r\n    }\r\n    if (eClass) {\r\n        setClass(el, eClass);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport const createDocFragment = () => document.createDocumentFragment();\r\n\r\n/**\r\n * Creates a text node\r\n * @function\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} rel \r\n * @param {string} href \r\n * @param {object} attr \r\n * @memberof DOM\r\n */\r\nexport function createLink(rel, href, attr) {\r\n    var link = create(\"link\");\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (attr) {\r\n        addAttributes(link, attr);\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function\r\n * @param {object} [attribute] \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createBlockQuotation(cite, attr) {\r\n    var element = create('blockquote', attr);\r\n\r\n    if (cite) {\r\n        element.cite = cite;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, attr) {\r\n    var a = create('a', attr);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, attr) {\r\n    var img = create('img', attr);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attr) {\r\n    var audio = create('audio', attr);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attr) {\r\n    var video = create('video', attr);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, attr) {\r\n    var quote = create('q', attr);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, attr) {\r\n    var element = create('time', attr);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\n\r\n/* istanbul ignore next */\r\nfunction createInputAs(type, attr) {\r\n    var input = create('input', attr);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<input>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n\r\n[\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"].forEach(function (type) {\r\n    createInput[type] = createInputAs.bind(null, type);\r\n});\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\n/* istanbul ignore next */\r\nfunction createButtonAs(type, attr) {\r\n    var btn = create(\"button\", attr);\r\n    btn.type = type;\r\n\r\n    return btn;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n[\"submit\", \"reset\", \"button\"].forEach(function (type) {\r\n    createButton[type] = createButtonAs.bind(null, type);\r\n});\r\n\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableHeaderCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableDataCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n/**\r\n * \r\n * @param {HTMLElement} element \r\n * @param {string|string[]} c classes \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nconst setClass = (element, c) => {\r\n    if (!isNullOrUndefined(c)) {\r\n        // If c is an Array => Format c as a space-separated string\r\n        if (Array.isArray(c)) {\r\n            c = c.join(' ');\r\n        }\r\n\r\n        element.className = String(c);\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    const ATTR_MAP = {\r\n        accept: [assign],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        disabled: [assign],\r\n        draggable: [assign],\r\n        editable: [assign, 'contenteditable'],\r\n        html: [assign, 'innerHTML'],\r\n        id: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        style: [assign],\r\n        title: [assign],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n}\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} element element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addChildren(element, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(element, children);\r\n    } else if (isElement(children)) {\r\n        element.appendChild(children);\r\n    } else if (isString(children)) {\r\n        element.textContent = children;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {HTMLElement} parent\r\n * @param {HTMLElement[]} children\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    var fragment = createDocFragment();\r\n\r\n    children.forEach(element => {\r\n        fragment.appendChild(isString(element) ? createTextNode(element) : element);\r\n    });\r\n    parent.appendChild(fragment);\r\n    fragment = null;\r\n\r\n    return parent;\r\n}\r\n\r\n\r\nexport const EL = {\r\n    'article': createArticle,\r\n    'aside': createAside,\r\n    'br': createLineBreak,\r\n    'div': createDiv,\r\n    'dl': createDescriptionList,\r\n    'footer': createFooter,\r\n    'h1': createH1,\r\n    'h2': createH2,\r\n    'h3': createH3,\r\n    'h4': createH4,\r\n    'h5': createH5,\r\n    'h6': createH6,\r\n    'header': createHeader,\r\n    'hr': createThematicBreak,\r\n    'i': createI,\r\n    'input': createInput,\r\n    'inbutton': createInput['button'],\r\n    'incheckbox': createInput['checkbox'],\r\n    'incolor': createInput['color'],\r\n    'indate': createInput['date'],\r\n    'indatetime': createInput['datetime-local'],\r\n    'inemail': createInput['email'],\r\n    'infile': createInput['file'],\r\n    'inhidden': createInput['hidden'],\r\n    'inimage': createInput['image'],\r\n    'inmonth': createInput['month'],\r\n    'innumber': createInput['number'],\r\n    'inpassword': createInput['password'],\r\n    'inradio': createInput['radio'],\r\n    'inrange': createInput['range'],\r\n    'inreset': createInput['reset'],\r\n    'insearch': createInput['search'],\r\n    'insubmit': createInput['submit'],\r\n    'intel': createInput['tel'],\r\n    'intext': createInput['text'],\r\n    'intime': createInput['time'],\r\n    'inurl': createInput['url'],\r\n    'inweek': createInput['week'],\r\n    'li': createListItem,\r\n    'main': createMain,\r\n    'nav': createNav,\r\n    'ol': createOrderedList,\r\n    'p': createParagraph,\r\n    'section': createSection,\r\n    'ul': createUnorderedList,\r\n    'dt': createDescriptionTerm,\r\n    'dd': createDescriptionDetails,\r\n    'source': createSource,\r\n    'picture': createPicture,\r\n    'figure': createFigure,\r\n    'figcaption': createFigureCaption,\r\n    'span': createSpan,\r\n    'strong': createStrong,\r\n    'em': createEmphasis,\r\n    'mark': createMark,\r\n    'samp': createSample,\r\n    'sub': createSubscript,\r\n    'sup': createSuperscript,\r\n    'abbr': createAbbreviation,\r\n    'b': createB,\r\n    's': createS,\r\n    'u': createU,\r\n    'cite': createCite,\r\n    'code': createCode,\r\n    'form': createForm,\r\n    'label': createLabel,\r\n    'fieldset': createFieldset,\r\n    'legend': createLegend,\r\n    'datalist': createDataList,\r\n    'select': createSelect,\r\n    'option': createOption,\r\n    'optgroup': createOptionGroup,\r\n    'textarea': createTextArea,\r\n    'meter': createMeter,\r\n    'progress': createProgress,\r\n    'output': createOutput,\r\n    'button': createButton,\r\n    'btnbutton': createButton['button'],\r\n    'btnreset': createButton['reset'],\r\n    'btnsubmit': createButton['submit'],\r\n    'table': createTable,\r\n    'caption': createCaption,\r\n    'thead': createTableHeader,\r\n    'tbody': createTableBody,\r\n    'tfoot': createTableFooter,\r\n    'col': createTableColumn,\r\n    'colgroup': createTableColumnGroup,\r\n    'tr': createTableRow,\r\n    'th': createTableHeaderCell,\r\n    'td': createTableCell,\r\n};\r\n\r\nconst ElementBuilder = {\r\n    result: null,\r\n    create(element) {\r\n        this.result = element;\r\n    },\r\n    validate() { },\r\n    build() {\r\n        return this.result;\r\n    }\r\n};","import { valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @private\r\n */\r\nconst cleanClass = (cn) => cn.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(e, c) {\r\n    return e.className.split(\" \").indexOf(c) !== -1;\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} el element\r\n * @param {string|Array} c class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(el, c) {\r\n    if (Array.isArray(c)) {\r\n        c.forEach((val) => _removeClass(el, val));\r\n    }\r\n\r\n    _removeClass(el, c);\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\nfunction _removeClass(e, c) {\r\n    if (hasClass(e, c)) {\r\n        e.className = e.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} element Element\r\n * @param {string} c classes\r\n * @memberof DOM\r\n */\r\nexport function addClass(element, c) {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.map(function (c) { return valOrDefault(c.class, c); }).join(' ');\r\n    }\r\n\r\n    var strClass = valOrDefault(c.class, c);\r\n    if (isNullOrWhitespace(element.className)) {\r\n        element.className = strClass;\r\n    }\r\n    else if (!hasClass(element, c)) {\r\n        element.className += \" \" + strClass;\r\n    }\r\n\r\n    element.className = cleanClass(element.className);\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} el \r\n * @param {string} c ClassName\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        removeClass(el, c);\r\n    } else {\r\n        addClass(el, c);\r\n    }\r\n}","import { valOrDefault, isNullOrUndefined, isFunction } from '@datatype/index.js';\r\nimport { isElement } from './checker.js';\r\n\r\n/**\r\n * Checks whether the selector is a class\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassName = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelector(selector);\r\n    }\r\n\r\n    if (/^#[a-zA-Z0-9_-]+$/.test(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => !isNullOrUndefined(el);\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && !pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { return getElementSibling(el, \"previousElementSibling\", predCb); }\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { return getElementSibling(el, \"nextElementSibling\", predCb); }\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {*} callback \r\n * @param {number} max Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}","import { valOrDefault } from \"@datatype/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));","import { getElement } from '@dom/index.js';\r\nimport { valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, isNull, valOrDefault, isUndefined } from '@datatype/index.js';\r\nimport { check, uncheck, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SelectorFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Selector>%cSelectorFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var selector = null;\r\n        switch (getType(container)) {\r\n            case 'selector':\r\n                selector = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                selector = Object.create(FormSelector);\r\n                break;\r\n        }\r\n        Object.assign(selector, {\r\n            container: container,\r\n            querySelector: createDomQuery(selector),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return selector;\r\n    }\r\n};\r\n\r\nconst BaseSelector = {\r\n    name: 'selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item) {\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(item.dataset.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n\r\n            if (getState(item) === Status.ON) {\r\n                this.setCurrentItem(item);\r\n            }\r\n            if (!isUndefined(value) && item.dataset.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            item.addEventListener('click', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst FormSelector = {\r\n    name: 'form-selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item, _input) {\r\n        var input = valOrDefault(_input, getInput('radio', item));\r\n        input.checked = true;\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(input.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n            let input = getInput('radio', item);\r\n            setState(item, input.checked ? Status.ON : Status.OFF);\r\n            if (input.checked) {\r\n                this.setCurrentItem(item, input);\r\n            }\r\n            if (input.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            input.addEventListener('change', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item, input);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSelector), createDomQuery(FormSelector)].join(',');\r\n\r\nfunction getSelectors(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSelector(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSelectors(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Selector(container, _callback) {\r\n    const selectors = getSelectors(container);\r\n\r\n    if (selectors === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < selectors.length; i++) {\r\n        let selector = SelectorFactory.create(selectors[i], _callback);\r\n        selector.activate();\r\n    }\r\n\r\n    return selectors;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty } from '@datatype/index.js';\r\nimport { check, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SwitchFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Switch>%SwitchFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var widget = null;\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n        Object.assign(widget, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        if (getState(this.container) === Status.ON) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        // Bind events\r\n        this.container.addEventListener('click', () => {\r\n            setState(this.container, getState(this.container) === Status.ON ? Status.OFF : Status.ON);\r\n            this.callback(this.container.dataset.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        var input = getInput('checkbox', this.container);\r\n        setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n\r\n        // Bind events\r\n        input.addEventListener('change', (e) => {\r\n            setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n            this.callback(input.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nfunction getSliders(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSwitch(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSliders(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Switch(container, _callback) {\r\n    const switches = getSliders(container);\r\n\r\n    if (switches === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < switches.length; i++) {\r\n        let switchWidget = SwitchFactory.create(switches[i], _callback);\r\n        switchWidget.activate();\r\n    }\r\n\r\n    return switches;\r\n}","/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) { element.style.display = \"block\"; }\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) { element.style.display = \"none\"; }","import { getElement, getElements, addClass, removeClass, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isString, isNullOrUndefined, isEmpty, isFunction } from '@datatype/index.js';\r\nimport { show, hide } from './utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst NONE = -1;\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst toData = (name) => `[data-boost=${name}]`;\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    callback: null,\r\n    header: null,\r\n    content: null,\r\n    name: 'collapsible',\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    open() { this.toggle(show, State.OPEN, addClass); },\r\n    close() { this.toggle(hide, State.CLOSED, removeClass); },\r\n    toggle(displayCb, state, classCb) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        classCb(this.container, 'expanded');\r\n    },\r\n    init() {\r\n        const container = this.container;\r\n        this.header = getElement(`[data-${this.name}-header]`, container);\r\n        this.content = getElement(`[data-${this.name}-content]`, container);\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.getState() === State.CLOSED) {\r\n                    this.open();\r\n                    this.callback(this);\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    items: null,\r\n    callback: null,\r\n    init() {\r\n        this.items = [];\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let accordionElement = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create({\r\n                container: accordionElement,\r\n                name: 'accordion',\r\n                callback: (selectedItem) => {\r\n                    this.items.filter((item) => item !== selectedItem && item.isExpanded())\r\n                        .forEach((other) => other.close());\r\n                }\r\n            });\r\n            this.items.push(collapsible);\r\n            collapsible.activate();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Collapsible\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Collapsible(container, _callback) {\r\n    var collapsibles = getCollapsibles(container);\r\n\r\n    if (collapsibles === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < collapsibles.length; i++) {\r\n        CollapsibleFactory.create({\r\n            container: collapsibles[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Accordion\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Accordion(container, _callback) {\r\n    var accordions = getAccordions(container);\r\n\r\n    if (accordions === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < accordions.length; i++) {\r\n        AccordionFactory.create({\r\n            container: accordions[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return accordions;\r\n}\r\n\r\nfunction getCollapsibles(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isCollapsible(container) ? [container] : getElements('[data-collapsible]', container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getCollapsibles(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements('[data-collapsible]');\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nfunction getAccordions(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isAccordion(container) ? [container] : getElements(toData('accordion'), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getAccordions(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData('accordion'));\r\n    }\r\n\r\n    return NONE;\r\n}","import { getElement, getElements, removeClass, addClass } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isUndefined, isEmpty } from '@datatype/index.js';\r\n\r\n// Label as placeholder\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isUndefined(input)) {\r\n                throw new Error(`Missing input for label: ${label.htmlFor}`);\r\n            }\r\n\r\n            if (isNullOrWhitespace(input.placeholder)) {\r\n                bindEvents(input, label);\r\n                if (input.value.length === 0) {\r\n                    addClass(label, 'down');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // add counters\r\n    var counters = getElements('[data-counter]', form);\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let input = getElement(`#${counter.dataset['counter']}`);\r\n        counter.dataset['counterMax'] = input.maxLength;\r\n        if (input) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            input.addEventListener('input', function (e) {\r\n                counter.dataset['counterVal'] = input.value.length;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                removeClass(label, 'down');\r\n                addClass(label.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                if (isEmpty(this.value)) {\r\n                    addClass(label, 'down');\r\n                }\r\n                removeClass(label.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('input', function (e) {\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        addClass(label, 'down');\r\n                    } else {\r\n                        removeClass(label, 'down');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","val","Array","isArray","isString","length","str","String","isFunction","isNull","isNullOrWhitespace","test","isElement","obj","nodeType","Element","isHTMLElement","HTMLElement","create","tagName","_attribute","_elements","element","children","parent","fragment","document","createElement","attribute","ATTR_MAP","accept","assign","setClass","data","Object","dataset","disabled","draggable","editable","html","id","placeholder","readonly","style","title","DEFAULT_MAP","echo","keys","key","addAttributes","createDocFragment","forEach","appendChild","createTextNode","textContent","_typeof","Date","prototype","toString","call","Number","isInteger","fn","values","min","i","counter","createDocumentFragment","text","createHeader","bind","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createParagraph","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createSource","createPicture","createFigure","createFigureCaption","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createAbbreviation","createB","createI","createS","createU","createCite","createCode","createForm","createInputAs","type","attr","input","createInput","createLabel","createFieldset","createLegend","createDataList","createSelect","createOption","createOptionGroup","createTextArea","createMeter","createProgress","createOutput","createButtonAs","btn","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","o","c","join","className","cleanClass","cn","replace","trim","hasClass","e","split","indexOf","removeClass","el","_removeClass","addClass","map","strClass","isClassName","selector","getElement","_container","container","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","findAncestor","target","callback","max","parentElement","findAncestorIter","findAncestorInf","getType","getState","setState","check","uncheck","getInput","label","htmlFor","NONE","Status","SelectorFactory","console","error","BaseSelector","FormSelector","createDomQuery","name","current","setCurrentItem","item","this","activate","defaultItem","selectorItems","len","_this","addEventListener","_input","checked","_this2","isSelector","RegExp","domQuery","SwitchFactory","widget","BaseSwitch","FormSwitch","isSwitch","show","display","hide","State","toData","isCollapsible","isAccordion","CollapsibleFactory","args","instance","header","content","isCollapsed","isExpanded","open","toggle","close","displayCb","state","classCb","init","bindEvents","targetCollapsible","parentNode","AccordionFactory","items","accordionElements","accordionElement","collapsible","selectedItem","filter","other","push","_callback","accordions","getAccordions","collapsibles","getCollapsibles","selectors","getSelectors","switches","getSliders","form","labels","Error","counters","maxLength","activeElement"],"mappings":"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"}