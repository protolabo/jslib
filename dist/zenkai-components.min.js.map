{"version":3,"file":"zenkai-components.min.js","sources":["../src/utils/datatype/type-manip.js","../src/utils/datatype/type-string.js","../src/utils/dom/dom-manip.js","../src/utils/dom/dom-effects.js","../src/components/form/global.js","../src/components/form/utils.js","../src/components/form/selector.js","../src/components/form/switch.js","../src/components/form/floating-label.js","../src/components/collapsible.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n    \r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean}  A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) { \r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) { return (Array.isArray(val) || isString(val)) && val.length === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }","import { isString } from \"./type-manip.js\";\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.replace(/\\b\\w/g, function (s) { return s.toUpperCase(); });\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {*} str string\r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    \r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","﻿import { valOrDefault, isNullOrUndefined } from './../datatype/type-manip.js';\r\nimport { isNullOrWhitespace } from './../datatype/type-string.js';\r\n\r\nconst isClassName = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [el] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, el) {\r\n    el = valOrDefault(el, document);\r\n\r\n    if (el instanceof DocumentFragment) {\r\n        el.querySelector(selector);\r\n    }\r\n\r\n    if (/^#[a-zA-Z0-9_-]+$/.test(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n    if (isClassName(selector)) {\r\n        return el.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return el.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [el] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, el) {\r\n    el = valOrDefault(el, document);\r\n\r\n    if (el instanceof DocumentFragment) {\r\n        el.querySelectorAll(selector);\r\n    }\r\n\r\n    return isClassName(selector) ?\r\n        el.getElementsByClassName(selector.substring(1)) :\r\n        el.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [el] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, el) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, el) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el) { return getElementSibling(el, \"previousElementSibling\"); }\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el) { return getElementSibling(el, \"nextElementSibling\"); }\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, el) { target.insertAdjacentElement('beforebegin', el); }\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, el) { target.insertAdjacentElement('afterend', el); }\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, el) { target.insertAdjacentElement('afterbegin', el); }\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(e, c) {\r\n    return e.className.split(\" \").indexOf(c) !== -1;\r\n}\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} cn class names\r\n */\r\nfunction cleanClass(cn) { return cn.replace(/\\s+/g, ' ').trim(); }\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} el element\r\n * @param {string|Array} c class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(el, c) {\r\n    if (Array.isArray(c)) {\r\n        c.forEach((val) => _removeClass(el, val));\r\n    }\r\n\r\n    _removeClass(el, c);\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\nfunction _removeClass(e, c) {\r\n    if (hasClass(e, c)) {\r\n        e.className = e.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} el Element\r\n * @param {string} c classes\r\n * @memberof DOM\r\n */\r\nexport function addClass(el, c) {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.map(function (c) { return valOrDefault(c.class, c); }).join(' ');\r\n    }\r\n\r\n    var strClass = valOrDefault(c.class, c);\r\n    if (isNullOrWhitespace(el.className)) {\r\n        el.className = strClass;\r\n    }\r\n    else if (!hasClass(el, c)) {\r\n        el.className += \" \" + strClass;\r\n    }\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} el \r\n * @param {string} c ClassName\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        removeClass(el, c);\r\n    } else {\r\n        addClass(el, c);\r\n    }\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {Node} node \r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @memberof DOM\r\n */\r\nexport function getElementSibling(el, dir) {\r\n    var sibling = el[dir];\r\n\r\n    while (sibling && hasClass(sibling, \"autocomplete\")) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof Element;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isHTMLElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n */\r\nexport function copytoClipboard(value) {\r\n    var el = document.createElement('textarea');\r\n    el.value = isHTMLElement(value) ? value.textContent : value;\r\n    el.readOnly = true;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    el.remove();\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {*} callback \r\n * @param {number} max \r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}\r\n\r\nfunction stickyHeader(header, target) {\r\n    const css_sticky = 'sticky';\r\n    var sticky = target.offsetTop + target.clientHeight;\r\n    var timeout;\r\n    window.addEventListener('scroll', function (e) {\r\n        if (timeout) window.cancelAnimationFrame(timeout);\r\n        timeout = window.requestAnimationFrame(function () {\r\n            if (window.pageYOffset >= sticky)\r\n                addClass(header, css_sticky);\r\n            else\r\n                removeClass(header, css_sticky);\r\n        });\r\n    }, false);\r\n}","import { removeClass, addClass } from './dom-manip.js';\r\n\r\nconst Elements = ['BUTTON', 'COMMAND', 'FIELDSET', 'INPUT', 'KEYGEN', 'OPTGROUP', 'OPTION', 'SELECT', 'TEXTAREA'];\r\n\r\n/** \r\n * @enum \r\n * @ignore\r\n * @memberof DOM\r\n */\r\nconst UI = {\r\n    COLLAPSE: 'collapse',\r\n    CHECKED: 'checked',\r\n    DISABLED: 'disabled',\r\n    EMPTY: 'empty',\r\n    HIDDEN: 'hidden',\r\n    SELECTED: 'selected',\r\n};\r\n\r\n/**\r\n * Shows an element\r\n * @param {Element} el Element\r\n * @memberof DOM\r\n */\r\nexport function show(el) { removeClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Hides an element\r\n * @param {Element} el element\r\n * @memberof DOM\r\n */\r\nexport function hide(el) { addClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(el) { return Object.assign(el, { position: 'absolute', top: '-9999px', left: '-9999px' }); }\r\n\r\n/**\r\n * Applies highlighting style to an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function highlight(el) { addClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Removes highlighting style of an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function unhighlight(el) { removeClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Enable an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function enable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val === false;\r\n    }\r\n\r\n    el.dataset.disabled = val === false;\r\n}\r\n\r\n/**\r\n * Disable an element\r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function disable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val !== false;\r\n    }\r\n\r\n    el.dataset.disabled = val !== false;\r\n}","export const HTMLAttribute  =  {\r\n    CHECKED : 'checked'\r\n};","import { getElement } from '@utils/dom/index.js';\r\nimport { valOrDefault, isNullOrWhitespace } from '@utils/datatype/index.js';\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElement, getElements, isHTMLElement } from '@utils/dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, isNull, valOrDefault } from '@utils/datatype/index.js';\r\nimport { HTMLAttribute } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst ATTRIBUTE = 'selector';\r\n\r\nconst NONE = -1;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst toData = (name) => `[data-type=${name}]`;\r\n\r\nconst isSelector = (element) => element.dataset['type'] === ATTRIBUTE;\r\n\r\nconst SelectorFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item, _input) {\r\n        var input = valOrDefault(_input, getInput('radio', item));\r\n        this.current = item;\r\n        this.current.dataset[HTMLAttribute.CHECKED] = Status.ON;\r\n        this.callback(input.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n            let input = getInput('radio', item);\r\n            item.dataset[HTMLAttribute.CHECKED] = input.checked ? Status.ON : Status.OFF;\r\n            if (input.checked) {\r\n                this.setCurrentItem(item, input);\r\n            }\r\n            if (input.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            input.addEventListener('change', () => {\r\n                if (this.current) {\r\n                    this.current.dataset[HTMLAttribute.CHECKED] = Status.OFF;\r\n                }\r\n                this.setCurrentItem(item, input);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nexport function Selector(container, _callback) {\r\n    const selectors = getSelectors(container);\r\n\r\n    if (selectors === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < selectors.length; i++) {\r\n        SelectorFactory.create({ container: selectors[i], callback: _callback }).activate();\r\n    }\r\n\r\n    return selectors;\r\n}\r\n\r\nfunction getSelectors(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSelector(container) ? [container] : getElements(toData(ATTRIBUTE), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSelectors(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData(ATTRIBUTE));\r\n    }\r\n\r\n    return NONE;\r\n}\r\n","import { getElement, getElements, isHTMLElement } from '@utils/dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty } from '@utils/datatype/index.js';\r\nimport { HTMLAttribute } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst ATTRIBUTE = 'switch';\r\n\r\nconst NONE = -1;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst toData = (name) => `[data-type=${name}]`;\r\n\r\nconst isSwitch = (element) => element.dataset['type'] === ATTRIBUTE;\r\n\r\nconst SwitchFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    activate() {\r\n        var input = getInput('checkbox', this.container);\r\n        this.container.dataset[HTMLAttribute.CHECKED] = input.checked ? Status.ON : Status.OFF;\r\n\r\n        // Bind events\r\n        input.addEventListener('change', (e) => {\r\n            this.container.dataset[HTMLAttribute.CHECKED] = input.checked ? Status.ON : Status.OFF;\r\n            this.callback(input.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nexport function Switch(container, _callback) {\r\n    const switches = getSliders(container);\r\n\r\n    if (switches === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < switches.length; i++) {\r\n        SwitchFactory.create({ container: switches[i], callback: _callback }).activate();\r\n    }\r\n\r\n    return switches;\r\n}\r\n\r\nfunction getSliders(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSwitch(container) ? [container] : getElements(toData(ATTRIBUTE), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSliders(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData(ATTRIBUTE));\r\n    }\r\n\r\n    return NONE;\r\n}\r\n","import { getElement, getElements,  removeClass, addClass } from '@utils/dom/index.js';\r\nimport { isNullOrWhitespace, isUndefined } from '@utils/datatype/index.js';\r\n\r\n// Label as placeholder\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0, len = labels.length; i < len; i++) {\r\n        let lbl = labels[i];\r\n        if (lbl.dataset['type'] == 'placeholder' && !isNullOrWhitespace(lbl.htmlFor)) {\r\n            let input = getElement(`#${lbl.htmlFor}`);\r\n\r\n            if (isUndefined(input)) {\r\n                throw new Error(`Missing input for label: ${lbl.htmlFor}`);\r\n            }\r\n            \r\n            if (isNullOrWhitespace(input.placeholder)) {\r\n                bindEvents(input, lbl);\r\n                if (input.value.length === 0) {\r\n                    addClass(lbl, 'down');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // add counters\r\n    var counters = getElements('[data-counter]', form);\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let input = getElement(`#${counter.dataset['counter']}`);\r\n        counter.dataset['counterMax'] = input.maxLength;\r\n        if (input) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            input.addEventListener('input', function (e) {\r\n                counter.dataset['counterVal'] = input.value.length;\r\n            });\r\n        }\r\n    }\r\n\r\n    function bindEvents(input, lbl) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                removeClass(lbl, 'down');\r\n                addClass(lbl.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                if (input.value.length === 0) {\r\n                    addClass(lbl, 'down');\r\n                }\r\n                removeClass(lbl.parentElement, 'focused');\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { getElement, getElements, addClass, removeClass, isHTMLElement, findAncestor, show, hide } from '@utils/dom/index.js';\r\nimport { isString, isNullOrUndefined, isEmpty, isFunction, isNull } from '@utils/datatype/index.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst NONE = -1;\r\n\r\nconst State = {\r\n    OPEN: 'open',\r\n    COLLAPSED: 'collapsed'\r\n};\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst CollapsibleFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    header: null,\r\n    content: null,\r\n    isAccordion: false,\r\n    getState() { return this.container.dataset[ATTRIBUTE]; },\r\n    setState(val) { this.container.dataset[ATTRIBUTE] = val; },\r\n    open() { this.toggle(show, State.OPEN, addClass); },\r\n    collapse() { this.toggle(hide, State.COLLAPSED, removeClass); },\r\n    toggle(displayCb, state, classCb) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        classCb(this.container, 'expanded');\r\n    },\r\n    init() {\r\n        const container = this.container;\r\n        this.header = getElement('[data-collapsible-header]', container);\r\n        this.content = getElement('[data-collapsible-content]', container);\r\n    },\r\n    activate() {\r\n        this.init();\r\n        if (this.container.dataset[ATTRIBUTE] === State.COLLAPSED) {\r\n            hide(this.content);\r\n        }\r\n        this.bindEvents();\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        container.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => ATTRIBUTE in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.getState() === State.COLLAPSED) {\r\n                    this.open();\r\n                    if (this.isAccordion) {\r\n                        let collapsibles = getElements('[data-accordion]');\r\n                        collapsibles.filter((coll) => coll !== container)\r\n                            .forEach((other) => this.collapse(other));\r\n                    }\r\n                } else if (header && header.parentNode === container) {\r\n                    this.collapse();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Collapsible\r\n * @param {HTMLElement} container \r\n * @param {boolean} _isAccordion\r\n */\r\nexport function Collapsible(container, _isAccordion, _callback) {\r\n    var collapsibles = getCollapsibles(container);\r\n\r\n    if (collapsibles === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < collapsibles.length; i++) {\r\n        CollapsibleFactory.create({\r\n            container: collapsibles[i],\r\n            isAccordion: _isAccordion,\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n\r\nfunction getCollapsibles(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isCollapsible(container) ? [container] : getElements('[data-collapsible]', container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getCollapsibles(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements('[data-collapsible]');\r\n    }\r\n\r\n    return NONE;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","val","Array","isArray","isString","length","str","String","isFunction","isNull","isNullOrWhitespace","test","isClassName","selector","getElement","el","document","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","hasClass","e","c","className","split","indexOf","cleanClass","cn","replace","trim","removeClass","forEach","_removeClass","addClass","map","class","join","strClass","isHTMLElement","obj","nodeType","HTMLElement","findAncestor","target","callback","max","Element","parent","parentElement","findAncestorIter","findAncestorInf","UI","show","hide","HTMLAttribute","getInput","type","label","htmlFor","ATTRIBUTE","NONE","Status","toData","name","isSelector","element","dataset","SelectorFactory","create","args","instance","Object","this","assign","container","current","setCurrentItem","item","_input","input","activate","defaultItem","selectorItems","i","len","checked","_this","addEventListener","isSwitch","SwitchFactory","form","labels","lbl","Error","placeholder","bindEvents","counters","counter","maxLength","_callback","selectors","getSelectors","_container","switches","getSliders","State","isCollapsible","CollapsibleFactory","header","content","isAccordion","getState","setState","open","toggle","collapse","displayCb","state","classCb","init","targetCollapsible","filter","coll","other","parentNode","_isAccordion","collapsibles","getCollapsibles"],"mappings":"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"}