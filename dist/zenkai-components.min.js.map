{"version":3,"file":"zenkai-components.min.js","sources":["../src/datatype/type-manip.js","../src/dom/dom-create.js","../src/dom/dom-manip.js","../src/datatype/type-string.js","../src/dom/element-class-manip.js","../src/dom/element-getter.js","../src/components/form/global.js","../src/components/form/utils.js","../src/components/form/selector.js","../src/components/form/switch.js","../src/components/utils.js","../src/components/collapsible.js","../src/components/form/floating-label.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean}  A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) {\r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) { return (Array.isArray(val) || isString(val)) && val.length === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }\r\n\r\n[isNull, isUndefined, isNullOrUndefined, isObject, isFunction, isString, isDate, isEmpty, isInt].forEach((fn)=>{\r\n    fn['some'] = function (values, min = 1) {\r\n        if(min === 1) {\r\n            for (let i = 0; i < values.length; i++) {\r\n                if (fn(values[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter >= min;\r\n    };\r\n    fn['all'] = function (values) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (!fn(values[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    fn['one'] = function (values) {\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter === 1;\r\n    };\r\n});","import { isNullOrUndefined } from \"@datatype/type-manip.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} _attribute \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute) {\r\n    var element = document.createElement(tagName);\r\n    if (_attribute) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates the element for the specified tagName\r\n * @param {string} tagName element\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function createElement(tagName, eId, eClass) {\r\n    var el = create(tagName);\r\n\r\n    if (eId) {\r\n        el.id = eId;\r\n    }\r\n    if (eClass) {\r\n        setClass(el, eClass);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport const createDocFragment = () => document.createDocumentFragment();\r\n\r\n/**\r\n * Creates a text node\r\n * @function\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} rel \r\n * @param {string} href \r\n * @param {object} attr \r\n * @memberof DOM\r\n */\r\nexport function createLink(rel, href, attr) {\r\n    var link = create(\"link\");\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (attr) {\r\n        addAttributes(link, attr);\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function\r\n * @param {object} [attribute] \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function\r\n * @param {Object} [attribute] attributes\r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createBlockQuotation(cite, attr) {\r\n    var element = create('blockquote', attr);\r\n\r\n    if (cite) {\r\n        element.cite = cite;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, attr) {\r\n    var a = create('a', attr);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, attr) {\r\n    var img = create('img', attr);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attr) {\r\n    var audio = create('audio', attr);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attr) {\r\n    var video = create('video', attr);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, attr) {\r\n    var quote = create('q', attr);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, attr) {\r\n    var element = create('time', attr);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\n\r\n\r\nfunction createInputAs(type, attr) {\r\n    var input = create('input', attr);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<input>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n\r\n[\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"].forEach(function (type) {\r\n    createInput[type] = createInputAs.bind(null, type);\r\n});\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\nfunction createButtonAs(type, attr) {\r\n    var btn = create(\"button\", attr);\r\n    btn.type = type;\r\n\r\n    return btn;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n[\"submit\", \"reset\", \"button\"].forEach(function (type) {\r\n    createButton[type] = createButtonAs.bind(null, type);\r\n});\r\n\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableHeaderCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTableDataCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n/**\r\n * \r\n * @param {HTMLElement} element \r\n * @param {string|string[]} c classes \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nconst setClass = (element, c) => {\r\n    if (!isNullOrUndefined(c)) {\r\n        // If c is an Array => Format c as a space-separated string\r\n        if (Array.isArray(c)) {\r\n            c = c.join(' ');\r\n        }\r\n\r\n        element.className = String(c);\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    const ATTR_MAP = {\r\n        accept: [assign],\r\n        children: [addChildren, element],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        disabled: [assign],\r\n        draggable: [assign],\r\n        editable: [assign, 'contenteditable'],\r\n        html: [assign, 'innerHTML'],\r\n        id: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        style: [assign],\r\n        text: [assign, 'textContent'],\r\n        title: [assign],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n}\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} el element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addChildren(el, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(el, children);\r\n    } else if (children instanceof Element) {\r\n        el.appendChild(children);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {HTMLElement} parent\r\n * @param {HTMLElement[]} children\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    var fragment = createDocFragment();\r\n\r\n    children.forEach(element => {\r\n        fragment.appendChild(element);\r\n    });\r\n    parent.appendChild(fragment);\r\n    fragment = null;\r\n\r\n    return parent;\r\n}","﻿import { isNullOrUndefined } from '@datatype/type-manip.js';\r\nimport { createTextArea } from './dom-create';\r\n\r\n/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof Element;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isHTMLElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, el) { target.insertAdjacentElement('beforebegin', el); }\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, el) { target.insertAdjacentElement('afterend', el); }\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, el) { target.insertAdjacentElement('afterbegin', el); }\r\n\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {Node} node \r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n}\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} element Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(element) { \r\n    Object.assign(element.style, { \r\n        position: 'absolute', \r\n        top: '-9999px', \r\n        left: '-9999px' \r\n    }); \r\n    \r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value,\r\n        readonly: true\r\n    });\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { isString } from \"./type-manip.js\";\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.replace(/\\b\\w/g, function (s) { return s.toUpperCase(); });\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {*} str string\r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    \r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { valOrDefault } from '@datatype/type-manip.js';\r\nimport { isNullOrWhitespace } from '@datatype/type-string.js';\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @private\r\n */\r\nconst cleanClass = (cn) => cn.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(e, c) {\r\n    return e.className.split(\" \").indexOf(c) !== -1;\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} el element\r\n * @param {string|Array} c class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(el, c) {\r\n    if (Array.isArray(c)) {\r\n        c.forEach((val) => _removeClass(el, val));\r\n    }\r\n\r\n    _removeClass(el, c);\r\n\r\n    el.className = cleanClass(el.className);\r\n}\r\n\r\nfunction _removeClass(e, c) {\r\n    if (hasClass(e, c)) {\r\n        e.className = e.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} element Element\r\n * @param {string} c classes\r\n * @memberof DOM\r\n */\r\nexport function addClass(element, c) {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.map(function (c) { return valOrDefault(c.class, c); }).join(' ');\r\n    }\r\n\r\n    var strClass = valOrDefault(c.class, c);\r\n    if (isNullOrWhitespace(element.className)) {\r\n        element.className = strClass;\r\n    }\r\n    else if (!hasClass(element, c)) {\r\n        element.className += \" \" + strClass;\r\n    }\r\n\r\n    element.className = cleanClass(element.className);\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} el \r\n * @param {string} c ClassName\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        removeClass(el, c);\r\n    } else {\r\n        addClass(el, c);\r\n    }\r\n}","import { valOrDefault, isNullOrUndefined, isFunction } from '@datatype/type-manip.js';\r\nimport { isElement } from './dom-manip.js';\r\n\r\n/**\r\n * Checks whether the selector is a class\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassName = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelector(selector);\r\n    }\r\n\r\n    if (/^#[a-zA-Z0-9_-]+$/.test(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassName(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => !isNullOrUndefined(el);\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && !pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { return getElementSibling(el, \"previousElementSibling\", predCb); }\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { return getElementSibling(el, \"nextElementSibling\", predCb); }\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {*} callback \r\n * @param {number} max Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}","import { valOrDefault } from \"@datatype/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));","import { getElement } from '@dom/index.js';\r\nimport { valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, isNull, valOrDefault, isUndefined } from '@datatype/index.js';\r\nimport { check, uncheck, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SelectorFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Selector>%cSelectorFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var selector = null;\r\n        switch (getType(container)) {\r\n            case 'selector':\r\n                selector = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                selector = Object.create(FormSelector);\r\n                break;\r\n        }\r\n        Object.assign(selector, {\r\n            container: container,\r\n            querySelector: createDomQuery(selector),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return selector;\r\n    }\r\n};\r\n\r\nconst BaseSelector = {\r\n    name: 'selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item) {\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(item.dataset.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n\r\n            if (getState(item) === Status.ON) {\r\n                this.setCurrentItem(item);\r\n            }\r\n            if (!isUndefined(value) && item.dataset.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            item.addEventListener('click', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst FormSelector = {\r\n    name: 'form-selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item, _input) {\r\n        var input = valOrDefault(_input, getInput('radio', item));\r\n        input.checked = true;\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback(input.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n            let input = getInput('radio', item);\r\n            setState(item, input.checked ? Status.ON : Status.OFF);\r\n            if (input.checked) {\r\n                this.setCurrentItem(item, input);\r\n            }\r\n            if (input.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            input.addEventListener('change', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item, input);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSelector), createDomQuery(FormSelector)].join(',');\r\n\r\nfunction getSelectors(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSelector(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSelectors(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Selector(container, _callback) {\r\n    const selectors = getSelectors(container);\r\n\r\n    if (selectors === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < selectors.length; i++) {\r\n        let selector = SelectorFactory.create(selectors[i], _callback);\r\n        selector.activate();\r\n    }\r\n\r\n    return selectors;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty } from '@datatype/index.js';\r\nimport { check, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SwitchFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Switch>%SwitchFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var widget = null;\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n        Object.assign(widget, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        if (getState(this.container) === Status.ON) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        // Bind events\r\n        this.container.addEventListener('click', () => {\r\n            setState(this.container, getState(this.container) === Status.ON ? Status.OFF : Status.ON);\r\n            this.callback(this.container.dataset.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        var input = getInput('checkbox', this.container);\r\n        setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n\r\n        // Bind events\r\n        input.addEventListener('change', (e) => {\r\n            setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n            this.callback(input.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nfunction getSliders(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSwitch(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSliders(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Switch(container, _callback) {\r\n    const switches = getSliders(container);\r\n\r\n    if (switches === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < switches.length; i++) {\r\n        let switchWidget = SwitchFactory.create(switches[i], _callback);\r\n        switchWidget.activate();\r\n    }\r\n\r\n    return switches;\r\n}","/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) { element.style.display = \"block\"; }\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) { element.style.display = \"none\"; }","import { getElement, getElements, addClass, removeClass, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isString, isNullOrUndefined, isEmpty, isFunction } from '@datatype/index.js';\r\nimport { show, hide } from './utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst NONE = -1;\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst toData = (name) => `[data-boost=${name}]`;\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    callback: null,\r\n    header: null,\r\n    content: null,\r\n    name: 'collapsible',\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    open() { this.toggle(show, State.OPEN, addClass); },\r\n    close() { this.toggle(hide, State.CLOSED, removeClass); },\r\n    toggle(displayCb, state, classCb) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        classCb(this.container, 'expanded');\r\n    },\r\n    init() {\r\n        const container = this.container;\r\n        this.header = getElement(`[data-${this.name}-header]`, container);\r\n        this.content = getElement(`[data-${this.name}-content]`, container);\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.getState() === State.CLOSED) {\r\n                    this.open();\r\n                    this.callback(this);\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    items: null,\r\n    callback: null,\r\n    init() {\r\n        this.items = [];\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let accordionElement = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create({\r\n                container: accordionElement,\r\n                name: 'accordion',\r\n                callback: (selectedItem) => {\r\n                    this.items.filter((item) => item !== selectedItem && item.isExpanded())\r\n                        .forEach((other) => other.close());\r\n                }\r\n            });\r\n            this.items.push(collapsible);\r\n            collapsible.activate();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Collapsible\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Collapsible(container, _callback) {\r\n    var collapsibles = getCollapsibles(container);\r\n\r\n    if (collapsibles === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < collapsibles.length; i++) {\r\n        CollapsibleFactory.create({\r\n            container: collapsibles[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Accordion\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Accordion(container, _callback) {\r\n    var accordions = getAccordions(container);\r\n\r\n    if (accordions === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < accordions.length; i++) {\r\n        AccordionFactory.create({\r\n            container: accordions[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return accordions;\r\n}\r\n\r\nfunction getCollapsibles(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isCollapsible(container) ? [container] : getElements('[data-collapsible]', container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getCollapsibles(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements('[data-collapsible]');\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nfunction getAccordions(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isAccordion(container) ? [container] : getElements(toData('accordion'), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getAccordions(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData('accordion'));\r\n    }\r\n\r\n    return NONE;\r\n}","import { getElement, getElements, removeClass, addClass } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isUndefined, isEmpty } from '@datatype/index.js';\r\n\r\n// Label as placeholder\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isUndefined(input)) {\r\n                throw new Error(`Missing input for label: ${label.htmlFor}`);\r\n            }\r\n\r\n            if (isNullOrWhitespace(input.placeholder)) {\r\n                bindEvents(input, label);\r\n                if (input.value.length === 0) {\r\n                    addClass(label, 'down');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // add counters\r\n    var counters = getElements('[data-counter]', form);\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let input = getElement(`#${counter.dataset['counter']}`);\r\n        counter.dataset['counterMax'] = input.maxLength;\r\n        if (input) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            input.addEventListener('input', function (e) {\r\n                counter.dataset['counterVal'] = input.value.length;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                removeClass(label, 'down');\r\n                addClass(label.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                if (isEmpty(this.value)) {\r\n                    addClass(label, 'down');\r\n                }\r\n                removeClass(label.parentElement, 'focused');\r\n            });\r\n            input.addEventListener('input', function (e) {\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        addClass(label, 'down');\r\n                    } else {\r\n                        removeClass(label, 'down');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","val","Array","isArray","isString","length","str","String","isFunction","isNull","create","tagName","_attribute","element","document","createElement","attribute","ATTR_MAP","accept","assign","children","addChildren","class","setClass","data","Object","dataset","disabled","draggable","editable","html","id","placeholder","readonly","style","text","title","DEFAULT_MAP","echo","keys","key","addAttributes","_typeof","Date","prototype","toString","call","Number","isInteger","forEach","fn","values","min","i","counter","createDocFragment","createDocumentFragment","bind","createInputAs","type","attr","input","createInput","createButtonAs","btn","createButton","o","c","join","className","el","parent","fragment","appendChild","Element","isHTMLElement","obj","nodeType","HTMLElement","isNullOrWhitespace","test","cleanClass","cn","replace","trim","hasClass","e","split","indexOf","removeClass","_removeClass","addClass","map","strClass","isClassName","selector","getElement","_container","container","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","findAncestor","target","callback","max","parentElement","findAncestorIter","findAncestorInf","getType","getState","setState","check","uncheck","getInput","label","htmlFor","NONE","Status","SelectorFactory","console","error","BaseSelector","FormSelector","createDomQuery","name","current","setCurrentItem","item","this","activate","defaultItem","selectorItems","len","_this","addEventListener","_input","checked","_this2","isSelector","RegExp","domQuery","SwitchFactory","widget","BaseSwitch","FormSwitch","isSwitch","show","display","hide","State","toData","isCollapsible","isAccordion","CollapsibleFactory","args","instance","header","content","isCollapsed","isExpanded","open","toggle","close","displayCb","state","classCb","init","bindEvents","targetCollapsible","parentNode","AccordionFactory","items","accordionElements","accordionElement","collapsible","selectedItem","filter","other","push","_callback","accordions","getAccordions","collapsibles","getCollapsibles","selectors","getSelectors","switches","getSliders","form","labels","Error","counters","maxLength","activeElement"],"mappings":"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"}