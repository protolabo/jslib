{"version":3,"file":"zenkai-components.min.js","sources":["../src/datatype/type-manip.js","../src/datatype/type-string.js","../src/dom/checker.js","../src/dom/dom-append.js","../src/dom/element-class-manip.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/components/form/floating-label.js","../src/components/form/global.js","../src/components/form/utils.js","../src/components/form/selector.js","../src/components/form/switch.js","../src/components/utils.js","../src/components/collapsible.js","../src/components/form/input-counter.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean}  A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) {\r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) { return (Array.isArray(val) || isString(val)) && val.length === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) {return !isNull(obj) && typeof obj[Symbol.iterator] === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }\r\n\r\n[isNull, isUndefined, isNullOrUndefined, isObject, isFunction, isString, isDate, isEmpty, isInt].forEach((fn)=>{\r\n    fn['some'] = function (values, min = 1) {\r\n        if(min === 1) {\r\n            for (let i = 0; i < values.length; i++) {\r\n                if (fn(values[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter >= min;\r\n    };\r\n    fn['all'] = function (values) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (!fn(values[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    fn['one'] = function (values) {\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter === 1;\r\n    };\r\n});","import { isString } from \"./type-manip.js\";\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.replace(/\\b\\w/g, function (s) { return s.toUpperCase(); });\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport function camelCase(str) {\r\n    var ccString = str.replace(/[_-]+/g, \" \").trim();\r\n    var spaceIndex = ccString.indexOf(\" \");\r\n    if (spaceIndex === -1) {\r\n        return str;\r\n    }\r\n    return `${ccString.substring(0, spaceIndex)}${capitalize(ccString.substring(spaceIndex)).replace(/\\s+/g, '')}`;\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {*} str string\r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    \r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { isNullOrUndefined } from '@datatype/index.js';\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => !isNullOrUndefined(obj) && obj instanceof Node;\r\n\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj) => isElementNode(obj) && obj instanceof HTMLElement;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => !isNullOrUndefined(obj) && obj instanceof HTMLCollection;\r\n\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n// Add some,all,one to the checkers\r\n[isNode, isElement, isHTMLElement, isDocumentFragment].forEach((fn) => {\r\n    fn['some'] = function (values, min = 1) {\r\n        if (min === 1) {\r\n            for (let i = 0; i < values.length; i++) {\r\n                if (fn(values[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter >= min;\r\n    };\r\n    fn['all'] = function (values) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (!fn(values[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    fn['one'] = function (values) {\r\n        var counter = 0;\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        return counter === 1;\r\n    };\r\n});","import { isIterable, isString } from '@datatype/index.js';\r\nimport { isNode, isElement, isHTMLCollection } from './checker.js';\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!isElement.all([target, element])) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!isElement.all([target, element])) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!isElement.all([target, element])) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {Element} parent\r\n * @param {HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    var fragment = document.createDocumentFragment();\r\n    if (!isNode(parent)) {\r\n        return null;\r\n    }\r\n    if (!isHTMLCollection(children) && !isIterable(children) || isString(children)) {\r\n        return null;\r\n    }\r\n\r\n    Array.from(children).forEach(element => {\r\n        fragment.appendChild(isNode(element) ? element : document.createTextNode(element.toString()));\r\n    });\r\n    parent.appendChild(fragment);\r\n\r\n    return parent;\r\n}","import { isNullOrWhitespace, isNullOrUndefined } from '@datatype/index.js';\r\nimport { isHTMLElement } from './checker';\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} c class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (c) => c.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Transform a raw value to a valid class value\r\n * @param {string} c raw value\r\n * @returns {string} parsed value\r\n * @private\r\n */\r\nconst parseClass = (c) => {\r\n    if (isNullOrUndefined(c)) {\r\n        return \"\";\r\n    } else if (Array.isArray(c)) {\r\n        return c.join(' ');\r\n    } else {\r\n        return c.toString();\r\n    }\r\n};\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} element element\r\n * @param {string} className class\r\n * @returns {boolean} value indicating whether the element has the class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(element, className) {\r\n    return element.className.split(\" \").includes(className);\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} element element\r\n * @param {string|Array} attrClass class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        console.error(\"The given element is not a valid HTML Element\");\r\n        return null;\r\n    }\r\n\r\n    if (Array.isArray(attrClass)) {\r\n        attrClass.forEach((val) => _removeClass(element, val));\r\n    }\r\n\r\n    _removeClass(element, attrClass);\r\n\r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\nfunction _removeClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        el.className = el.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} element Element\r\n * @param {string|string[]} attrClass classes\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function addClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        console.error(\"The given element is not a valid HTML Element\");\r\n        return null;\r\n    }\r\n\r\n    var parsedClass = parseClass(attrClass);\r\n\r\n    if (isNullOrWhitespace(element.className)) {\r\n        element.className = parsedClass;\r\n    } else if (!hasClass(element, parsedClass)) {\r\n        element.className += \" \" + parsedClass;\r\n    }\r\n\r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} element \r\n * @param {string} attrClass ClassName\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(element, attrClass) {\r\n    if (hasClass(element, attrClass)) {\r\n        removeClass(element, attrClass);\r\n    } else {\r\n        addClass(element, attrClass);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Sets classes to an element\r\n * @param {HTMLElement} element \r\n * @param {string|string[]} attrClass classes \r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function setClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        console.error(\"The given element is not a valid HTML Element\");\r\n        return null;\r\n    }\r\n\r\n    element.className = formatClass(parseClass(attrClass));\r\n\r\n    return element;\r\n}","import { setClass } from './element-class-manip.js';\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    const ATTR_MAP = {\r\n        // Global attributes\r\n        accesskey: [assign, 'accessKey'],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        editable: [assign, 'contenteditable'],\r\n        draggable: [assign],\r\n        hidden: [assign],\r\n        id: [assign],\r\n        lang: [assign],\r\n        html: [assign, 'innerHTML'],\r\n        style: [assign],\r\n        tabindex: [assign, 'tabIndex'],\r\n        title: [assign],\r\n        // Form attributes\r\n        accept: [assign],\r\n        disabled: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} element Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(element) {\r\n    Object.assign(element.style, {\r\n        position: 'absolute',\r\n        top: '-9999px',\r\n        left: '-9999px'\r\n    });\r\n\r\n    return element;\r\n}\r\n","import { isNode } from \"./checker.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} [_attribute] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_children] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute, _children) {\r\n    var element = document.createElement(tagName);\r\n    if (_attribute) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n    if (_children) {\r\n        addContent(element, _children);\r\n    }\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport const createDocFragment = () => document.createDocumentFragment();\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} href \r\n * @param {string} rel \r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport function createLink(href, rel) {\r\n    var link = create(\"link\");\r\n\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createBlockQuotation(cite, attribute, children) {\r\n    var element = create('blockquote', attribute, children);\r\n\r\n    if (cite) {\r\n        element.cite = cite;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, _attribute, _children) {\r\n    var a = create('a', _attribute, _children);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, _attribute) {\r\n    var img = create('img', _attribute);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attribute, children) {\r\n    var audio = create('audio', attribute, children);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attribute, children) {\r\n    var video = create('video', attribute, children);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, _attribute, children) {\r\n    var quote = create('q', _attribute, children);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @param {string} datetime \r\n * @param {object} attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, _attribute) {\r\n    var element = create('time', _attribute);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\n\r\n/**\r\n * Creates an `<input>` element with a specified type and \r\n * optionally some attributes\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @memberof DOM\r\n */\r\nexport function createInputAs(type, _attribute) {\r\n    if (![\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n        \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n        \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"].includes(type)) {\r\n        console.error(`Input could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var input = create('input', _attribute);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\n\r\n/**\r\n * Creates a `<button>` element with a specified type and \r\n * optionally some attributes and children elements\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport function createButtonAs(type, _attribute, _children) {\r\n    if (![\"submit\", \"reset\", \"button\"].includes(type)) {\r\n        console.error(`Button could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var button = create(\"button\", _attribute, _children);\r\n    button.type = type;\r\n\r\n    return button;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableHeaderCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableDataCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} element element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(element, children);\r\n    } else if (isNode(children)) {\r\n        element.appendChild(children);\r\n    } else {\r\n        element.textContent = children.toString();\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault } from '@datatype/index.js';\r\nimport { isElement } from './checker.js';\r\n\r\n\r\n/**\r\n * Checks whether the selector is a class\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector is an id\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => true;\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (!predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"previousElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"nextElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n    if (!isFunction(callback)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max - 1);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}","import { getElement, getElements, removeClass, addClass, isHTMLElement } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isEmpty } from '@datatype/index.js';\r\n\r\nconst moveDown = (label) => addClass(label, 'down');\r\nconst moveUp = (label) => removeClass(label, 'down');\r\nconst addFocus = (element) => addClass(element, 'focused');\r\nconst removeFocus = (element) => removeClass(element, 'focused');\r\n\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isHTMLElement(input)) {\r\n                if (isNullOrWhitespace(input.placeholder)) {\r\n                    bindEvents(input, label);\r\n                    if (isEmpty(input.value)) {\r\n                        moveDown(label);\r\n                    }\r\n                } else {\r\n                    console.warn(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Input \"${label.htmlFor}\" contains a placeholder`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n                }\r\n            } else {\r\n                console.error(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Missing input for label \"${label.htmlFor}\"`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                console.log(\"focus called\");\r\n                input.placeholder = \"\";\r\n                moveUp(label);\r\n                addFocus(label.parentElement);\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                console.log(\"blur called\");\r\n                if (isEmpty(this.value)) {\r\n                    moveDown(label);\r\n                }\r\n                removeFocus(label.parentElement);\r\n            });\r\n            input.addEventListener('input', function (e) {\r\n                console.log(\"input called\");\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        moveDown(label);\r\n                    } else {\r\n                        moveUp(label);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { valOrDefault } from \"@datatype/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));","import { getElement } from '@dom/index.js';\r\nimport { valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, isNull, valOrDefault, isUndefined } from '@datatype/index.js';\r\nimport { check, uncheck, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SelectorFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Selector>%cSelectorFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var selector = null;\r\n        switch (getType(container)) {\r\n            case 'selector':\r\n                selector = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                selector = Object.create(FormSelector);\r\n                break;\r\n        }\r\n        Object.assign(selector, {\r\n            container: container,\r\n            querySelector: createDomQuery(selector),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return selector;\r\n    }\r\n};\r\n\r\nconst BaseSelector = {\r\n    name: 'selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item) {\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback.call(this, item.dataset.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n\r\n            if (getState(item) === Status.ON) {\r\n                this.setCurrentItem(item);\r\n            }\r\n            if (!isUndefined(value) && item.dataset.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            item.addEventListener('click', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst FormSelector = {\r\n    name: 'form-selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item, _input) {\r\n        var input = valOrDefault(_input, getInput('radio', item));\r\n        input.checked = true;\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback.call(this, input.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n            let input = getInput('radio', item);\r\n            setState(item, input.checked ? Status.ON : Status.OFF);\r\n            if (input.checked) {\r\n                this.setCurrentItem(item, input);\r\n            }\r\n            if (input.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            input.addEventListener('change', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item, input);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSelector), createDomQuery(FormSelector)].join(',');\r\n\r\nfunction getSelectors(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSelector(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSelectors(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Selector(container, _callback) {\r\n    const selectors = getSelectors(container);\r\n\r\n    if (selectors === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < selectors.length; i++) {\r\n        let selector = SelectorFactory.create(selectors[i], _callback);\r\n        selector.activate();\r\n    }\r\n\r\n    return selectors;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty } from '@datatype/index.js';\r\nimport { check, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SwitchFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Switch>%SwitchFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var widget = null;\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n        Object.assign(widget, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        if (getState(this.container) === Status.ON) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        // Bind events\r\n        this.container.addEventListener('click', () => {\r\n            setState(this.container, getState(this.container) === Status.ON ? Status.OFF : Status.ON);\r\n            this.callback.call(this, this.container.dataset.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    container: null,\r\n    callback: null,\r\n    activate() {\r\n        var input = getInput('checkbox', this.container);\r\n        \r\n        // Init\r\n        setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n        this.callback.call(this, input.value, this.container);\r\n\r\n        // Bind events\r\n        input.addEventListener('change', (e) => {\r\n            setState(this.container, input.checked ? Status.ON : Status.OFF);\r\n            this.callback.call(this, input.value, this.container);\r\n        });\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nfunction getSliders(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSwitch(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSliders(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Switch(container, _callback) {\r\n    const switches = getSliders(container);\r\n\r\n    if (switches === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < switches.length; i++) {\r\n        let switchWidget = SwitchFactory.create(switches[i], _callback);\r\n        switchWidget.activate();\r\n    }\r\n\r\n    return switches;\r\n}","/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) { element.style.display = \"block\"; }\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) { element.style.display = \"none\"; }","import { getElement, getElements, addClass, removeClass, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isString, isNullOrUndefined, isEmpty, isFunction } from '@datatype/index.js';\r\nimport { show, hide } from './utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst NONE = -1;\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst toData = (name) => `[data-boost=${name}]`;\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    callback: null,\r\n    header: null,\r\n    content: null,\r\n    name: 'collapsible',\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    open() { this.toggle(show, State.OPEN, addClass); },\r\n    close() { this.toggle(hide, State.CLOSED, removeClass); },\r\n    toggle(displayCb, state, classCb) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        classCb(this.container, 'expanded');\r\n    },\r\n    init() {\r\n        const container = this.container;\r\n        this.header = getElement(`[data-${this.name}-header]`, container);\r\n        this.content = getElement(`[data-${this.name}-content]`, container);\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.getState() === State.CLOSED) {\r\n                    this.open();\r\n                    this.callback(this);\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    create(args) {\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, args);\r\n        if (!isFunction(instance.callback)) {\r\n            instance.callback = function (val, el) { };\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    container: null,\r\n    items: null,\r\n    callback: null,\r\n    init() {\r\n        this.items = [];\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let accordionElement = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create({\r\n                container: accordionElement,\r\n                name: 'accordion',\r\n                callback: (selectedItem) => {\r\n                    this.items.filter((item) => item !== selectedItem && item.isExpanded())\r\n                        .forEach((other) => other.close());\r\n                }\r\n            });\r\n            this.items.push(collapsible);\r\n            collapsible.activate();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Collapsible\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Collapsible(container, _callback) {\r\n    var collapsibles = getCollapsibles(container);\r\n\r\n    if (collapsibles === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < collapsibles.length; i++) {\r\n        CollapsibleFactory.create({\r\n            container: collapsibles[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Accordion\r\n * @param {HTMLElement} container \r\n * @param {*} _callback\r\n */\r\nexport function Accordion(container, _callback) {\r\n    var accordions = getAccordions(container);\r\n\r\n    if (accordions === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < accordions.length; i++) {\r\n        AccordionFactory.create({\r\n            container: accordions[i],\r\n            callback: _callback\r\n        }).activate();\r\n    }\r\n\r\n    return accordions;\r\n}\r\n\r\nfunction getCollapsibles(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isCollapsible(container) ? [container] : getElements('[data-collapsible]', container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getCollapsibles(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements('[data-collapsible]');\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nfunction getAccordions(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isAccordion(container) ? [container] : getElements(toData('accordion'), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getAccordions(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData('accordion'));\r\n    }\r\n\r\n    return NONE;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\n\r\n/**\r\n * Add a counter to an input element\r\n * @param {HTMLElement} container \r\n */\r\nexport function inputCounter(container) {\r\n    const counters = getElements('[data-counter]', container);\r\n\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let ref = counter.dataset['counter'];\r\n        let input = getElement(`#${ref}`);\r\n        if (isHTMLElement(input)) {\r\n            counter.dataset['counterMax'] = input.maxLength;\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            bindEvents(input, counter);\r\n        } else {\r\n            console.error(`%c@zenkai%c #InputCounter>%cinputCounter:%c Failed to add counter ${ref}. Input (referenced) was not found.`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLElement} counter \r\n     */\r\n    function bindEvents(input, counter) {\r\n        input.addEventListener('input', function (e) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n        });\r\n    }\r\n\r\n    return counters;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","val","Array","isArray","isString","length","str","String","isFunction","isNull","isNullOrWhitespace","test","_typeof","Date","Object","prototype","toString","call","Number","isInteger","forEach","fn","values","min","i","counter","isNode","obj","Node","isElementNode","nodeType","ELEMENT_NODE","isElement","Element","isHTMLElement","HTMLElement","isHTMLCollection","HTMLCollection","appendChildren","parent","children","fragment","document","createDocumentFragment","Symbol","iterator","from","element","appendChild","createTextNode","DOCUMENT_FRAGMENT_NODE","DocumentFragment","formatClass","c","replace","trim","parseClass","join","hasClass","className","split","includes","removeClass","attrClass","_removeClass","console","error","el","addClass","parsedClass","setClass","echo","o","create","tagName","_attribute","_children","createElement","attribute","ATTR_MAP","accesskey","assign","data","dataset","editable","draggable","hidden","id","lang","html","style","tabindex","title","accept","disabled","placeholder","readonly","DEFAULT_MAP","keys","key","addAttributes","textContent","bind","type","input","button","isClassSelector","selector","isIdSelector","getElement","_container","container","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","findAncestor","target","callback","max","parentElement","findAncestorIter","findAncestorInf","moveDown","label","moveUp","getType","getState","setState","check","uncheck","getInput","htmlFor","NONE","Status","SelectorFactory","BaseSelector","FormSelector","createDomQuery","name","current","setCurrentItem","item","this","activate","defaultItem","selectorItems","len","_this","addEventListener","_input","checked","_this2","isSelector","RegExp","domQuery","SwitchFactory","widget","BaseSwitch","FormSwitch","e","isSwitch","show","display","hide","State","toData","isCollapsible","isAccordion","CollapsibleFactory","args","instance","header","content","isCollapsed","isExpanded","open","toggle","close","displayCb","state","classCb","init","bindEvents","targetCollapsible","parentNode","AccordionFactory","items","accordionElements","accordionElement","collapsible","selectedItem","filter","other","push","_callback","accordions","getAccordions","collapsibles","getCollapsibles","selectors","getSelectors","switches","getSliders","form","labels","warn","log","activeElement","counters","ref","maxLength"],"mappings":"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"}