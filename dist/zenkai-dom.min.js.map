{"version":3,"file":"zenkai-dom.min.js","sources":["../src/datatype/type-manip.js","../src/utils/quantifier-utils.js","../src/dom/checker.js","../src/dom/dom-append.js","../src/dom/element-class-manip.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/dom/copy-to-clipboard.js","../src/dom/dom-remove.js","../src/dom/dom-stat.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean} A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) {\r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) {\r\n    return (Array.isArray(val) || isString(val)) && val.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(value) { return typeof value === 'string' || value instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) { return !isNull(obj) && typeof obj[Symbol.iterator] === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }","/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n */\r\nexport const some = function (values, fn, min = 1) {\r\n    if (min === 1) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return getHitCount(values, fn) >= min;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n */\r\nexport const all = function (values, fn) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (!fn(values[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n */\r\nexport const one = function (values, fn) {\r\n    return getHitCount(values, fn) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n */\r\nexport const no = function (values, fn) {\r\n    return !some(values, fn);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} values \r\n * @param {*} fn \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, fn) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (fn(values[i])) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","import { isNullOrUndefined } from '@datatype/index.js';\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => !isNullOrUndefined(obj) && obj instanceof Node;\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj) => isElementNode(obj) && obj instanceof HTMLElement;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => !isNullOrUndefined(obj) && obj instanceof HTMLCollection;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;","import { isIterable, isString } from '@datatype/index.js';\r\nimport { all } from '@utils/index.js';\r\nimport { isNode, isElement, isHTMLCollection } from './checker.js';\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {Element} parent\r\n * @param {!HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    if (!isNode(parent)) {\r\n        return null;\r\n    }\r\n    if (!isHTMLCollection(children) && !isIterable(children) || isString(children)) {\r\n        return null;\r\n    }\r\n\r\n    var fragment = document.createDocumentFragment();\r\n    \r\n    Array.from(children).forEach(element => {\r\n        fragment.appendChild(isNode(element) ? element : document.createTextNode(element.toString()));\r\n    });\r\n    parent.appendChild(fragment);\r\n\r\n    return parent;\r\n}","import { isNullOrWhitespace, isNullOrUndefined } from '@datatype/index.js';\r\nimport { isHTMLElement } from './checker';\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} c class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (c) => c.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Transform a raw value to a valid class value\r\n * @param {string} c raw value\r\n * @returns {string} parsed value\r\n * @private\r\n */\r\nconst parseClass = (c) => {\r\n    if (isNullOrUndefined(c)) {\r\n        return \"\";\r\n    } else if (Array.isArray(c)) {\r\n        return c.join(' ');\r\n    } else {\r\n        return c.toString();\r\n    }\r\n};\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} element element\r\n * @param {string} className class\r\n * @returns {boolean} value indicating whether the element has the class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(element, className) {\r\n    return element.className.split(\" \").includes(className);\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} element element\r\n * @param {string|Array} attrClass class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        console.error(\"The given element is not a valid HTML Element\");\r\n        return null;\r\n    }\r\n\r\n    if (Array.isArray(attrClass)) {\r\n        attrClass.forEach((val) => _removeClass(element, val));\r\n    }\r\n\r\n    _removeClass(element, attrClass);\r\n\r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\nfunction _removeClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        el.className = el.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} element Element\r\n * @param {string|string[]} attrClass classes\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function addClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        console.error(\"The given element is not a valid HTML Element\");\r\n        return null;\r\n    }\r\n\r\n    var parsedClass = parseClass(attrClass);\r\n\r\n    if (isNullOrWhitespace(element.className)) {\r\n        element.className = parsedClass;\r\n    } else if (!hasClass(element, parsedClass)) {\r\n        element.className += \" \" + parsedClass;\r\n    }\r\n\r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} element \r\n * @param {string} attrClass ClassName\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(element, attrClass) {\r\n    if (hasClass(element, attrClass)) {\r\n        removeClass(element, attrClass);\r\n    } else {\r\n        addClass(element, attrClass);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Sets classes to an element\r\n * @param {HTMLElement} element \r\n * @param {string|string[]} attrClass classes \r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function setClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        console.error(\"The given element is not a valid HTML Element\");\r\n        return null;\r\n    }\r\n\r\n    element.className = formatClass(parseClass(attrClass));\r\n\r\n    return element;\r\n}","import { setClass } from './element-class-manip.js';\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    const ATTR_MAP = {\r\n        // Global attributes\r\n        accesskey: [assign, 'accessKey'],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        editable: [assign, 'contenteditable'],\r\n        draggable: [assign],\r\n        hidden: [assign],\r\n        id: [assign],\r\n        lang: [assign],\r\n        html: [assign, 'innerHTML'],\r\n        style: [assign],\r\n        tabindex: [assign, 'tabIndex'],\r\n        title: [assign],\r\n        // Form attributes\r\n        accept: [assign],\r\n        disabled: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} element Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(element) {\r\n    Object.assign(element.style, {\r\n        position: 'absolute',\r\n        top: '-9999px',\r\n        left: '-9999px'\r\n    });\r\n\r\n    return element;\r\n}\r\n","import { isNode } from \"./checker.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} [_attribute] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_children] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute, _children) {\r\n    var element = document.createElement(tagName);\r\n    if (_attribute) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n    if (_children) {\r\n        addContent(element, _children);\r\n    }\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport const createDocFragment = () => document.createDocumentFragment();\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} href \r\n * @param {string} rel \r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport function createLink(href, rel) {\r\n    var link = create(\"link\");\r\n\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createBlockQuotation(cite, attribute, children) {\r\n    var element = create('blockquote', attribute, children);\r\n\r\n    if (cite) {\r\n        element.cite = cite;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, _attribute, _children) {\r\n    var a = create('a', _attribute, _children);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, _attribute) {\r\n    var img = create('img', _attribute);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attribute, children) {\r\n    var audio = create('audio', attribute, children);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attribute, children) {\r\n    var video = create('video', attribute, children);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, _attribute, children) {\r\n    var quote = create('q', _attribute, children);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @param {string} datetime \r\n * @param {object} attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, _attribute) {\r\n    var element = create('time', _attribute);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\n\r\n/**\r\n * Creates an `<input>` element with a specified type and \r\n * optionally some attributes\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @memberof DOM\r\n */\r\nexport function createInputAs(type, _attribute) {\r\n    if (![\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n        \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n        \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"].includes(type)) {\r\n        console.error(`Input could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var input = create('input', _attribute);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\n\r\n/**\r\n * Creates a `<button>` element with a specified type and \r\n * optionally some attributes and children elements\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport function createButtonAs(type, _attribute, _children) {\r\n    if (![\"submit\", \"reset\", \"button\"].includes(type)) {\r\n        console.error(`Button could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var button = create(\"button\", _attribute, _children);\r\n    button.type = type;\r\n\r\n    return button;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableHeaderCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableDataCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} element element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(element, children);\r\n    } else if (isNode(children)) {\r\n        element.appendChild(children);\r\n    } else {\r\n        element.textContent = children.toString();\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isEmpty, isNullOrWhitespace } from '@datatype/index.js';\r\nimport { isElement } from './checker.js';\r\n\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if(isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if(isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => true;\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (!predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"previousElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"nextElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n    if (!isFunction(callback)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max - 1);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}","import { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './checker.js';\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value,\r\n        readonly: true\r\n    });\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { isFunction } from '@datatype/index.js';\r\nimport { isNode } from './checker.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfies the predicate function\r\n * @param {!Node} node \r\n * @param {Function} [callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, callback) {\r\n    if (!isNode(node)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isFunction(callback)) {\r\n        return removeAllChildren(node);\r\n    }\r\n\r\n    Array.from(node.childNodes).forEach(n => {\r\n        if (callback(n)) {\r\n            node.removeChild(n);\r\n        }\r\n    });\r\n\r\n\r\n    return node;\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isString","String","isFunction","isNull","isNullOrWhitespace","str","length","test","all","values","fn","i","isNode","obj","Node","isElementNode","nodeType","ELEMENT_NODE","isElement","Element","isHTMLElement","HTMLElement","isHTMLCollection","HTMLCollection","appendChildren","parent","children","Symbol","iterator","fragment","document","createDocumentFragment","Array","from","forEach","element","appendChild","createTextNode","toString","formatClass","c","replace","trim","parseClass","isArray","join","hasClass","className","split","includes","removeClass","attrClass","val","_removeClass","console","error","el","addClass","parsedClass","setClass","echo","o","addAttributes","attribute","ATTR_MAP","accesskey","assign","data","Object","dataset","editable","draggable","hidden","id","lang","html","style","tabindex","title","accept","disabled","placeholder","readonly","DEFAULT_MAP","keys","key","create","tagName","_attribute","_children","createElement","textContent","createHeader","bind","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createParagraph","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createSource","createPicture","createFigure","createFigureCaption","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createAbbreviation","createB","createI","createS","createU","createCite","createCode","createForm","createInputAs","type","input","createInput","createLabel","createFieldset","createLegend","createDataList","createSelect","createOption","createOptionGroup","createTextArea","createMeter","createProgress","createOutput","createButtonAs","button","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","isClassSelector","selector","isIdSelector","getElement","_container","container","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElementSibling","dir","pred","predicate","sibling","select","found","options","option","selected","template","deep","importNode","content","position","top","left","body","execCommand","remove","href","a","src","audio","cite","alt","img","rel","link","quote","text","datetime","video","target","callback","max","parentElement","findAncestorIter","findAncestorInf","querySelectorAll","predCb","insertAdjacentElement","DOCUMENT_FRAGMENT_NODE","node","childNodes","n","removeChild","hasChildNodes","lastChild","removeAllChildren","window","innerWidth","documentElement","clientWidth"],"mappings":"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"}