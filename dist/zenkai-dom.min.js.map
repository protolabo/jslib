{"version":3,"file":"zenkai-dom.min.js","sources":["../src/std/std-parse.js","../src/std/std-object.js","../src/std/std-logic.js","../src/dom/dom-stat.js","../src/dom/dom-parse.js","../src/std/std-string.js","../src/dom/dom-append.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/dom/copy-to-clipboard.js","../src/dom/dom-remove.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable] indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(obj) {\r\n    return (Array.isArray(obj) || isString(obj)) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\nexport const defProp = Object.defineProperty;\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) { return hasOwnProperty.call(obj, key); };\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} obj \r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (obj === null || typeof (obj) !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrUndefined } from \"./std-parse\";\r\n\r\n/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const some = function (values, pred) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that at the condition is satisfied for a a number of value\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @param {number} [max=-1] Minimum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const assert = function (values, pred, min, max) {\r\n    if (max < min) {\r\n        console.error(\"`max` must be greater than `min`\");\r\n        return;\r\n    }\r\n\r\n    var hitCount = getHitCount(values, pred);\r\n\r\n    if (all([min, max], Number.isInteger)) {\r\n        return hitCount >= min && hitCount <= max;\r\n    }\r\n    if(Number.isInteger(min)) {\r\n        return hitCount >= min;\r\n    }\r\n    if(Number.isInteger(max)) {\r\n        return hitCount <= max;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof STD\r\n */\r\nexport const all = function (values, pred) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (!pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const one = function (values, pred) {\r\n    return getHitCount(values, pred) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const no = function (values, pred) {\r\n    return getHitCount(values, pred) === 0;\r\n};\r\n\r\n/**\r\n * Verifies that at most one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at most one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const lone = function (values, pred) {\r\n    return getHitCount(values, pred) <= 1;\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} values \r\n * @param {*} pred \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, pred) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport const windowWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\r\n/**\r\n * Gets the window's height\r\n * @memberof DOM\r\n */\r\nexport const windowHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;","import { isNullOrUndefined, isString, isIterable, hasOwn, pascalCase, isEmpty, all, some } from '@std/index.js';\r\nimport { windowWidth, windowHeight } from './dom-stat.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTML Element*\r\n * @param {Element} obj \r\n * @param {string|string[]|string[][]} [kind] \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj, kind) => {\r\n    if (!(isElementNode(obj) && obj instanceof HTMLElement)) {\r\n        return false;\r\n    }\r\n\r\n    if (isIterable(kind)) {\r\n        return isHTMLElementKind(obj, Array.isArray(kind) ? kind : [kind]);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst TagNameMapping = {\r\n    'a': \"Anchor\",\r\n    'br': \"BR\",\r\n    'dl': \"DList\",\r\n    'datalist': \"DataList\",\r\n    'fieldset': \"FieldSet\",\r\n    'frameset': \"FrameSet\",\r\n    'hr': \"HR\",\r\n    'h1': \"Heading\",\r\n    'h2': \"Heading\",\r\n    'h3': \"Heading\",\r\n    'h4': \"Heading\",\r\n    'h5': \"Heading\",\r\n    'h6': \"Heading\",\r\n    'li': \"LI\",\r\n    'ol': \"OList\",\r\n    'optgroup': \"OptGroup\",\r\n    'p': \"Paragraph\",\r\n    'q': \"Quote\",\r\n    'blockquote': \"Quote\",\r\n    'caption': \"TableCaption\",\r\n    'td': \"TableCell\",\r\n    'th': \"TableCell\",\r\n    'col': \"TableCol\",\r\n    'tr': \"TableRow\",\r\n    'tbody': \"TableSection\",\r\n    'thead': \"TableSection\",\r\n    'tfoot': \"TableSection\",\r\n    'textarea': \"TextArea\",\r\n    'ul': \"UList\",\r\n};\r\n\r\n/**\r\n * Verifies the tag of an *HTML Element*\r\n * @param {HTMLElement} element \r\n * @param {string[]|string[][]} kinds\r\n * @returns {boolean}\r\n */\r\nfunction isHTMLElementKind(element, kinds) {\r\n    const isInstanceOf = (obj) => element instanceof obj;\r\n    const hasTag = (tag) => element.tagName === tag.toUpperCase();\r\n    const isOfType = (type) => Array.isArray(type) ? type.includes(element.type) : element.type === type;\r\n\r\n    some(kinds, (kind) => {\r\n        if (!isIterable(kind)) {\r\n            return false;\r\n        }\r\n\r\n        var name = kind;\r\n        var type = null;\r\n        if (Array.isArray(kind)) {\r\n            [name, type] = kind;\r\n        }\r\n\r\n        var interfaceName = `HTML${hasOwn(TagNameMapping, name) ? TagNameMapping[name] : pascalCase(name)}Element`;\r\n\r\n        if (!(isInstanceOf(window[interfaceName]) || hasTag(name))) {\r\n            return false;\r\n        }\r\n\r\n        if (isIterable(type) && !isEmpty(type)) {\r\n            return isOfType(type);\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Creates a template with content\r\n * @param {string} html \r\n * @returns {HTMLTemplateElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createTemplate(html) {\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content;\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction _htmlToElement(prop, html) {\r\n    if (!isString(html)) {\r\n        return null;\r\n    }\r\n\r\n    var template = createTemplate(html);\r\n\r\n    return template[prop];\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElement = _htmlToElement.bind('firstChild');\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElements = _htmlToElement.bind('childNodes');\r\n\r\n/**\r\n * Verifies that an element is visible\r\n * @param {!HTMLElement} element \r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInViewport(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return top >= 0 && left >= 0 && bottom <= windowHeight() && right <= windowWidth();\r\n}\r\n\r\n/**\r\n * Verifies that an element is displayed inside a target element\r\n * @param {!HTMLElement} element \r\n * @param {!HTMLElement} target\r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInElement(element, target) {\r\n    if (!all([element, target], isHTMLElement)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top: top1, right: right1, bottom: bottom1, left: left1 } = element.getBoundingClientRect();\r\n    var { top: top2, right: right2, bottom: bottom2, left: left2 } = target.getBoundingClientRect();\r\n\r\n    return all([[top2, top1], [left2, left1], [right1, right2], [bottom1, bottom2]], (inner, outer) => inner <= outer);\r\n}","import { isNullOrWhitespace } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Sequence\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { isIterable, isString, all } from '@std/index.js';\r\nimport { isNode, isElement, isHTMLCollection } from './dom-parse.js';\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new Error(\"The given element or target is not a valid HTML Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new Error(\"The given element or target is not a valid HTML Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new Error(\"The given element or target is not a valid HTML Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {Element} parent\r\n * @param {!HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    if (!isNode(parent)) {\r\n        throw new Error(\"The given parent is not a valid Node\");\r\n    }\r\n    \r\n    if (!isHTMLCollection(children) && !isIterable(children) || isString(children)) {\r\n        throw new Error(\"The given children is not a valid HTMLCollection/HTMLElement array\");\r\n    }\r\n\r\n    var fragment = document.createDocumentFragment();\r\n    \r\n    Array.from(children).forEach(element => {\r\n        fragment.appendChild(isNode(element) ? element : document.createTextNode(element.toString()));\r\n    });\r\n    parent.appendChild(fragment);\r\n\r\n    return parent;\r\n}","import { isObject, isNullOrUndefined } from '@std/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} c class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (c) => c.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Transform a raw value to a valid class value\r\n * @param {string} c raw value\r\n * @returns {string} parsed value\r\n * @private\r\n */\r\nconst parseClass = (c) => {\r\n    if (isNullOrUndefined(c)) {\r\n        return \"\";\r\n    } else if (Array.isArray(c)) {\r\n        return c.join(' ');\r\n    }\r\n\r\n    return c.toString();\r\n};\r\n\r\nfunction setClass(element, attrClass) {\r\n    element.className = formatClass(parseClass(attrClass));\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isObject(attribute)) {\r\n        return element;\r\n    }\r\n\r\n    const ATTR_MAP = {\r\n        // Global attributes\r\n        accesskey: [assign, 'accessKey'],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        editable: [assign, 'contentEditable'],\r\n        draggable: [assign],\r\n        hidden: [assign],\r\n        id: [assign],\r\n        lang: [assign],\r\n        html: [assign, 'innerHTML'],\r\n        style: [assign],\r\n        target: [assign],\r\n        tabindex: [assign, 'tabIndex'],\r\n        text: [assign, 'textContent'],\r\n        title: [assign],\r\n        // Quote attributes\r\n        cite: [assign],\r\n        // Anchor attributes\r\n        href: [assign],\r\n        // Link attributes\r\n        alt: [assign],\r\n        src: [assign],\r\n        // Form attributes\r\n        accept: [assign],\r\n        disabled: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {string} value option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, value) {\r\n    if (!isHTMLElement(select, \"select\")) {\r\n        throw new Error(\"The given select parameter is not a valid HTML Select element\");\r\n    }\r\n\r\n    if (isNullOrUndefined(value)) {\r\n        throw new Error(\"The given value parameter is a null or undefined\");\r\n    }\r\n\r\n    var options = select.options;\r\n    for (let i = 0; i < options.length; i++) {\r\n        let option = options[i];\r\n\r\n        if (option.value === value.toString()) {\r\n            option.selected = true;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { isNullOrUndefined } from \"@std/index.js\";\r\nimport { isNode, isHTMLElement } from \"./dom-parse.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} [_attribute] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_children] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute, _children) {\r\n    var element = document.createElement(tagName);\r\n\r\n    if (!isNullOrUndefined(_attribute)) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(element, _children);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment(_children) {\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(fragment, _children);\r\n    }\r\n\r\n    return fragment;\r\n}\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} href \r\n * @param {string} rel \r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport function createLink(href, rel) {\r\n    var link = create(\"link\");\r\n\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = create.bind(null, 'template');\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @returns {HTMLBRElement}\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @returns {HTMLHRElement}\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function createBlockQuotation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createBlockQuotation = create.bind(null, 'blockquote');\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, _attribute, _children) {\r\n    var a = create('a', _attribute, _children);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, _attribute) {\r\n    var img = create('img', _attribute);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attribute, children) {\r\n    var audio = create('audio', attribute, children);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attribute, children) {\r\n    var video = create('video', attribute, children);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, _attribute, children) {\r\n    var quote = create('q', _attribute, children);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @param {string} datetime \r\n * @param {object} attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, _attribute) {\r\n    var element = create('time', _attribute);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\nconst inputTypes = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\r\n\r\n/**\r\n * Creates an `<input>` element with a specified type and \r\n * optionally some attributes\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @memberof DOM\r\n */\r\nexport function createInputAs(type, _attribute) {\r\n    if (!inputTypes.includes(type)) {\r\n        return null;\r\n    }\r\n\r\n    var input = create('input', _attribute);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\nconst buttonTypes = [\"button\", \"submit\", \"reset\"];\r\n\r\n/**\r\n * Creates a `<button>` element with a specified type and \r\n * optionally some attributes and children elements\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport function createButtonAs(type, _attribute, _children) {\r\n    if (!buttonTypes.includes(type)) {\r\n        return null;\r\n    }\r\n\r\n    var button = create(\"button\", _attribute, _children);\r\n    button.type = type;\r\n\r\n    return button;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} element element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, children) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    if (isNullOrUndefined(children)) {\r\n        return element;\r\n    }\r\n\r\n    if (Array.isArray(children)) {\r\n        appendChildren(element, children);\r\n    } else if (isNode(children)) {\r\n        element.appendChild(children);\r\n    } else {\r\n        element.textContent = children.toString();\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@std/index.js';\r\nimport { isElement } from './dom-parse.js';\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {string} dir sibling direction\r\n * @param {HTMLElement} element element\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(dir, element, pred) {\r\n    var sibling = element[dir];\r\n\r\n    if (isFunction(pred)) {\r\n        while (isElement(sibling) && pred(sibling)) {\r\n            sibling = sibling[dir];\r\n        }\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @function getPreviousElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport const getPreviousElementSibling = getElementSibling.bind(null, \"previousElementSibling\");\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @function getNextElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport const getNextElementSibling = getElementSibling.bind(null, \"nextElementSibling\");\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} [_max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, pred, _max) {\r\n    if (!isElement(target)) {\r\n        throw new Error(\"The given target parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isFunction(pred)) {\r\n        throw new Error(\"The given pred parameter is not a valid Function\");\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    \r\n    if (_max > 0) {\r\n        return findAncestorIter(parent, pred, _max - 1);\r\n    }\r\n\r\n    return findAncestorInf(parent, pred);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, pred) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, pred);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} max Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, pred, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, pred, max - 1);\r\n}","import { isNullOrUndefined } from '@std/index.js';\r\nimport { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Copy content to clipboard\r\n * @param {HTMLElement|string} value\r\n * @returns {boolean} Value indicating whether the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value.toString(),\r\n        readonly: true\r\n    });\r\n\r\n    if(!isHTMLElement(element)) {\r\n        return false;\r\n    }\r\n\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { isFunction } from '@std/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfy the predicate function if given\r\n * @param {!Node} node \r\n * @param {Function} [_callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, _callback) {\r\n    if (!isNode(node)) {\r\n        throw new Error(\"The given node parameter is not a valid Node\");\r\n    }\r\n\r\n    if (isFunction(_callback)) {\r\n        Array.from(node.childNodes).forEach(n => {\r\n            if (_callback(n)) {\r\n                node.removeChild(n);\r\n            }\r\n        });\r\n\r\n        return node;\r\n    }\r\n\r\n    return removeAllChildren(node);\r\n\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isString","String","isFunction","isIterable","obj","Symbol","iterator","isNullOrWhitespace","str","length","test","hasOwnProperty","Object","prototype","all","values","pred","i","Array","isArray","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","windowHeight","innerHeight","clientHeight","isElementNode","nodeType","Node","ELEMENT_NODE","isNode","isElement","Element","isHTMLElement","kind","HTMLElement","element","some","name","type","key","tag","interfaceName","TagNameMapping","call","ccString","replace","trim","toLowerCase","s","toUpperCase","pascalCase","tagName","includes","isHTMLCollection","HTMLCollection","_htmlToElement","prop","html","template","createElement","innerHTML","content","htmlToElement","bind","htmlToElements","appendChildren","parent","children","Error","fragment","createDocumentFragment","from","forEach","appendChild","createTextNode","toString","echo","o","formatClass","c","parseClass","join","setClass","attrClass","className","addAttributes","attribute","_typeof","ATTR_MAP","accesskey","assign","data","dataset","editable","draggable","hidden","id","lang","style","target","tabindex","text","title","cite","href","alt","src","accept","disabled","placeholder","readonly","DEFAULT_MAP","keys","val","create","_attribute","_children","addContent","createTemplate","createHeader","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createParagraph","createBlockQuotation","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createSource","createPicture","createFigure","createFigureCaption","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createAbbreviation","createB","createI","createS","createU","createCite","createCode","createForm","inputTypes","createInputAs","input","createInput","createLabel","createFieldset","createLegend","createDataList","createSelect","createOption","createOptionGroup","createTextArea","createMeter","createProgress","createOutput","buttonTypes","createButtonAs","button","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","textContent","isClassSelector","selector","isIdSelector","getElement","_container","container","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElementSibling","dir","sibling","getPreviousElementSibling","getNextElementSibling","select","options","option","selected","deep","importNode","execCommand","remove","a","audio","img","rel","link","quote","datetime","video","_max","parentElement","findAncestorIter","max","findAncestorInf","querySelectorAll","insertAdjacentElement","DOCUMENT_FRAGMENT_NODE","getBoundingClientRect","top1","top","right1","right","bottom1","bottom","left1","left","top2","right2","bottom2","left2","inner","outer","NodeList","node","_callback","childNodes","n","removeChild","hasChildNodes","lastChild","removeAllChildren"],"mappings":"8+BAOO,SAASA,EAAaC,EAAKC,EAAOC,UAClB,IAAfA,EACOC,EAAYH,GAAOC,EAAQD,EAG/BI,EAAkBJ,GAAOC,EAAQD,EA6BrC,SAASK,EAASJ,SACG,iBAAVA,GAAsBA,aAAiBK,OASlD,SAASC,EAAWN,SACC,mBAAVA,EAmBX,SAASO,EAAWC,UACfL,EAAkBK,IAAwC,mBAAzBA,EAAIC,OAAOC,UAmBjD,SAASC,EAAmBC,UACtBA,GAAOR,EAASQ,KAAwB,IAAfA,EAAIC,QAAgB,QAAQC,KAAKF,IAShE,SAASV,EAAYF,eACA,IAAVA,EAQX,SAASG,EAAkBH,UA5Bb,OA6BHA,GAAUE,EAAYF,GC9GxC,IAAMe,EAAiBC,OAAOC,UAAUF,eCQjC,IAiDMG,EAAM,SAAUC,EAAQC,OAC5B,IAAIC,EAAI,EAAGA,EAAIF,EAAON,OAAQQ,IAAK,KAChCrB,EAAQmB,EAAOE,OAEdD,iBAASE,MAAMC,QAAQvB,GAASA,EAAQ,CAACA,YACnC,SAIR,GC/DEwB,EAAc,kBAAMC,OAAOC,YAAcC,SAASC,gBAAgBC,aAAeF,SAASG,KAAKD,aAM/FE,EAAe,kBAAMN,OAAOO,aAAeL,SAASC,gBAAgBK,cAAgBN,SAASG,KAAKG,cCNzGC,EAAgB,SAAC1B,UAASL,EAAkBK,IAAQA,EAAI2B,WAAaC,KAAKC,cAWnEC,EAAS,SAAC9B,UAAQA,aAAe4B,MAgBjCG,EAAY,SAAC/B,UAAQ0B,EAAc1B,IAAQA,aAAegC,SAS1DC,EAAgB,SAACjC,EAAKkC,YACzBR,EAAc1B,IAAQA,aAAemC,gBAIvCpC,EAAWmC,KA6CQE,EA5CMpC,OFrCb,SAAUW,EAAQC,OAC7B,IAAIC,EAAI,EAAGA,EAAIF,EAAON,OAAQQ,IAAK,KAChCrB,EAAQmB,EAAOE,MAEfD,iBAASE,MAAMC,QAAQvB,GAASA,EAAQ,CAACA,aEkFjD6C,CAjDkCvB,MAAMC,QAAQmB,GAAQA,EAAO,CAACA,GAiDpD,SAACA,OACJnC,EAAWmC,UACL,MAGPI,EAAOJ,EACPK,EAAO,QACPzB,MAAMC,QAAQmB,GAAO,SACNA,KAAdI,OAAMC,WH1FavC,EAAKwC,EG+EjBC,EADMzC,EAEJuC,EJxEEvC,EIqFZ0C,iBH7FoB1C,EG6FU2C,EH7FLH,EG6FqBF,EH7FP/B,EAAeqC,KAAK5C,EAAKwC,GG6FVG,EAAeL,GCnC1E,SAAoBlC,MACnBD,EAAmBC,UACZA,MAhEYA,EAmEnByC,EAAWzC,EAAI0C,QAAQ,SAAU,KAAKA,QAAQ,OAAQ,KAAKC,cAnExC3C,EAqELyC,EApEXzC,EAAI4C,cAAcF,QAAQ,QAAS,SAACG,UAAMA,EAAEC,iBAoEvBJ,QAAQ,OAAQ,ID4ByCK,CAAWb,sBAf1EtC,EAiBCiB,OAAOyB,IAjBAN,aAAmBpC,IACjCyC,EAgBwCH,EAhBhCF,EAAQgB,UAAYX,EAAIS,oBAoBxCnD,EAAWwC,KJ3FCvC,EI2FiBuC,GJ1F7BzB,MAAMC,QAAQf,KAAQJ,EAASI,IAAwB,IAAfA,EAAIK,WIuElCkC,EAoBMA,EApBGzB,MAAMC,QAAQwB,GAAQA,EAAKc,SAASjB,EAAQG,MAAQH,EAAQG,OAASA,QAHpG,IAA2BH,GAtCrBO,EAAiB,GACd,YACC,QACA,iBACM,oBACA,oBACA,cACN,QACA,aACA,aACA,aACA,aACA,aACA,aACA,QACA,iBACM,aACP,cACA,mBACS,gBACH,kBACL,eACA,gBACC,cACD,iBACG,qBACA,qBACA,wBACG,cACN,aA6CGW,EAAmB,SAACtD,UAAQA,aAAeuD,gBAyBxD,SAASC,EAAeC,EAAMC,UACrB9D,EAAS8D,IATMA,EAaUA,GAZ1BC,EAAWxC,SAASyC,cAAc,aAC7BC,UAAYH,EAAKX,OAEnBY,EAASG,SAWAL,GALL,SAVSC,EAChBC,MAuBKI,EAAgBP,EAAeQ,KAAK,cAQpCC,EAAiBT,EAAeQ,KAAK,cErH3C,SAASE,EAAeC,EAAQC,OAC9BtC,EAAOqC,SACF,IAAIE,MAAM,4CAGff,EAAiBc,KAAcrE,EAAWqE,IAAaxE,EAASwE,SAC3D,IAAIC,MAAM,0EAGhBC,EAAWnD,SAASoD,gCAExBzD,MAAM0D,KAAKJ,GAAUK,QAAQ,SAAArC,GACzBkC,EAASI,YAAY5C,EAAOM,GAAWA,EAAUjB,SAASwD,eAAevC,EAAQwC,eAErFT,EAAOO,YAAYJ,GAEZH,ECtEX,SAASU,EAAKC,IAQd,IAAMC,EAAc,SAACC,UAAMA,EAAElC,QAAQ,OAAQ,KAAKC,QAQ5CkC,EAAa,SAACD,UACZrF,EAAkBqF,GACX,GACAlE,MAAMC,QAAQiE,GACdA,EAAEE,KAAK,KAGXF,EAAEJ,YAGb,SAASO,EAAS/C,EAASgD,UACvBhD,EAAQiD,UAAYN,EAAYE,EAAWG,IAEpChD,EAUJ,SAASkD,EAAclD,EAASmD,OAC9BtD,EAAcG,SACT,IAAIiC,MAAM,8DPiBZ1E,EADaH,EObP+F,IPcuC,WAAjBC,EAAOhG,UObhC4C,MPYR,IAAkB5C,EOTfiG,EAAW,CAEbC,UAAW,CAACC,EAAQ,mBACb,CAACR,EAAU/C,GAClBwD,KAAM,CAACpF,OAAOmF,OAAQvD,EAAQyD,SAC9BC,SAAU,CAACH,EAAQ,mBACnBI,UAAW,CAACJ,GACZK,OAAQ,CAACL,GACTM,GAAI,CAACN,GACLO,KAAM,CAACP,GACPjC,KAAM,CAACiC,EAAQ,aACfQ,MAAO,CAACR,GACRS,OAAQ,CAACT,GACTU,SAAU,CAACV,EAAQ,YACnBW,KAAM,CAACX,EAAQ,eACfY,MAAO,CAACZ,GAERa,KAAM,CAACb,GAEPc,KAAM,CAACd,GAEPe,IAAK,CAACf,GACNgB,IAAK,CAAChB,GAENiB,OAAQ,CAACjB,GACTkB,SAAU,CAAClB,GACXmB,YAAa,CAACnB,GACdoB,SAAU,CAACpB,EAAQ,YACnBnG,MAAO,CAACmG,IAENqB,EAAc,CAACnC,EAAM,UAGTrE,OAAOyG,KAAK1B,kBAAY,KAA/B/C,OACH0E,EAAMzB,EAASjD,IAAQwE,EAC3BE,EAAI,GAAGA,EAAI,IAAM1E,EAAK+C,EAAU/C,aAG3BmD,EAAOnD,EAAK0E,GACjB9E,EAAQI,GAAO0E,SAGZ9E,EChFX,SAAS+E,EAAO/D,EAASgE,EAAYC,OAC7BjF,EAAUjB,SAASyC,cAAcR,UAEhCzD,EAAkByH,IACnB9B,EAAclD,EAASgF,GAGtBzH,EAAkB0H,IACnBC,GAAWlF,EAASiF,GAGjBjF,MAyDEmF,EAAiBJ,EAAOnD,KAAK,KAAM,YAUnCwD,EAAeL,EAAOnD,KAAK,KAAM,UAUjCyD,EAAeN,EAAOnD,KAAK,KAAM,UAUjC0D,EAAaP,EAAOnD,KAAK,KAAM,QAU/B2D,EAAgBR,EAAOnD,KAAK,KAAM,WAUlC4D,EAAgBT,EAAOnD,KAAK,KAAM,WAUlC6D,EAAYV,EAAOnD,KAAK,KAAM,OAU9B8D,EAAcX,EAAOnD,KAAK,KAAM,SAUhC+D,EAAWZ,EAAOnD,KAAK,KAAM,MAU7BgE,EAAWb,EAAOnD,KAAK,KAAM,MAU7BiE,EAAWd,EAAOnD,KAAK,KAAM,MAU7BkE,EAAWf,EAAOnD,KAAK,KAAM,MAU7BmE,EAAWhB,EAAOnD,KAAK,KAAM,MAU7BoE,EAAWjB,EAAOnD,KAAK,KAAM,MAU7BqE,EAAYlB,EAAOnD,KAAK,KAAM,OA4B9BsE,EAAkBnB,EAAOnD,KAAK,KAAM,KAWpCuE,EAAuBpB,EAAOnD,KAAK,KAAM,cAUzCwE,EAAsBrB,EAAOnD,KAAK,KAAM,MAUxCyE,EAAoBtB,EAAOnD,KAAK,KAAM,MAUtC0E,EAAiBvB,EAAOnD,KAAK,KAAM,MAUnC2E,EAAwBxB,EAAOnD,KAAK,KAAM,MAU1C4E,EAAwBzB,EAAOnD,KAAK,KAAM,MAU1C6E,EAA2B1B,EAAOnD,KAAK,KAAM,UAyF7C8E,GAAe3B,EAAOnD,KAAK,KAAM,UAUjC+E,GAAgB5B,EAAOnD,KAAK,KAAM,WAUlCgF,GAAe7B,EAAOnD,KAAK,KAAM,UAUjCiF,GAAsB9B,EAAOnD,KAAK,KAAM,cAUxCkF,GAAa/B,EAAOnD,KAAK,KAAM,QAU/BmF,GAAehC,EAAOnD,KAAK,KAAM,UAUjCoF,GAAiBjC,EAAOnD,KAAK,KAAM,MAUnCqF,GAAalC,EAAOnD,KAAK,KAAM,QAU/BsF,GAAenC,EAAOnD,KAAK,KAAM,QAUjCuF,GAAkBpC,EAAOnD,KAAK,KAAM,OAUpCwF,GAAoBrC,EAAOnD,KAAK,KAAM,WA4BtCyF,GAAqBtC,EAAOnD,KAAK,KAAM,QAUvC0F,GAAUvC,EAAOnD,KAAK,KAAM,KAU5B2F,GAAUxC,EAAOnD,KAAK,KAAM,KAU5B4F,GAAUzC,EAAOnD,KAAK,KAAM,KAU5B6F,GAAU1C,EAAOnD,KAAK,KAAM,KAU5B8F,GAAa3C,EAAOnD,KAAK,KAAM,YA2B/B+F,GAAa5C,EAAOnD,KAAK,KAAM,QAU/BgG,GAAa7C,EAAOnD,KAAK,KAAM,QAEtCiG,GAAa,CAAC,SAAU,WAAY,QAAS,OAAQ,iBAAkB,QAAS,OAClF,SAAU,QAAS,QAAS,SAAU,WAAY,QAAS,QAAS,QACpE,SAAU,SAAU,MAAO,OAAQ,OAAQ,MAAO,QAS/C,SAASC,GAAc3H,EAAM6E,OAC3B6C,GAAW5G,SAASd,UACd,SAGP4H,EAAQhD,EAAO,QAASC,UAC5B+C,EAAM5H,KAAOA,EAEN4H,MAUEC,GAAcF,GAAclG,KAAK,KAAM,QAUvCqG,GAAclD,EAAOnD,KAAK,KAAM,SAUhCsG,GAAiBnD,EAAOnD,KAAK,KAAM,YAUnCuG,GAAepD,EAAOnD,KAAK,KAAM,UAUjCwG,GAAiBrD,EAAOnD,KAAK,KAAM,YAUnCyG,GAAetD,EAAOnD,KAAK,KAAM,UAUjC0G,GAAevD,EAAOnD,KAAK,KAAM,UAUjC2G,GAAoBxD,EAAOnD,KAAK,KAAM,YAUtC4G,GAAiBzD,EAAOnD,KAAK,KAAM,YAUnC6G,GAAc1D,EAAOnD,KAAK,KAAM,SAUhC8G,GAAiB3D,EAAOnD,KAAK,KAAM,YAUnC+G,GAAe5D,EAAOnD,KAAK,KAAM,UAExCgH,GAAc,CAAC,SAAU,SAAU,SAUlC,SAASC,GAAe1I,EAAM6E,EAAYC,OACxC2D,GAAY3H,SAASd,UACf,SAGP2I,EAAS/D,EAAO,SAAUC,EAAYC,UAC1C6D,EAAO3I,KAAOA,EAEP2I,MAUEC,GAAeF,GAAejH,KAAK,KAAM,UAUzCoH,GAAcjE,EAAOnD,KAAK,KAAM,SAUhCqH,GAAgBlE,EAAOnD,KAAK,KAAM,WAUlCsH,GAAoBnE,EAAOnD,KAAK,KAAM,SAUtCuH,GAAkBpE,EAAOnD,KAAK,KAAM,SAUpCwH,GAAoBrE,EAAOnD,KAAK,KAAM,SAUtCyH,GAAoBtE,EAAOnD,KAAK,KAAM,OAUtC0H,GAAyBvE,EAAOnD,KAAK,KAAM,YAU3C2H,GAAiBxE,EAAOnD,KAAK,KAAM,MAUnC4H,GAAwBzE,EAAOnD,KAAK,KAAM,MAU1C6H,GAAkB1E,EAAOnD,KAAK,KAAM,MAUjD,SAASsD,GAAWlF,EAASgC,OACpBnC,EAAcG,SACT,IAAIiC,MAAM,wDAGhB1E,EAAkByE,KAIlBtD,MAAMC,QAAQqD,GACdF,EAAe9B,EAASgC,GACjBtC,EAAOsC,GACdhC,EAAQsC,YAAYN,GAEpBhC,EAAQ0J,YAAc1H,EAASQ,YARxBxC,ECx4Bf,IAAM2J,GAAkB,SAACC,SAAa,qBAAqB1L,KAAK0L,IAO1DC,GAAe,SAACD,SAAa,oBAAoB1L,KAAK0L,IAUrD,SAASE,GAAWF,EAAUG,OAC7BC,EAAY9M,EAAa6M,EAAYhL,iBAErChB,EAAmB6L,GACZ,KAGPI,aAAqBC,iBACdD,EAAUE,cAAcN,GAG/BC,GAAaD,GACN7K,SAASoL,eAAeP,EAASQ,UAAU,IAGlDT,GAAgBC,GACTI,EAAUK,uBAAuBT,EAASQ,UAAU,IAAI,GAG5DJ,EAAUE,cAAcN,GA0DnC,SAASU,GAAkBC,EAAKvK,EAASxB,OACjCgM,EAAUxK,EAAQuK,MAElB7M,EAAWc,QACJmB,EAAU6K,IAAYhM,EAAKgM,IAC9BA,EAAUA,EAAQD,UAInBC,MAWEC,GAA4BH,GAAkB1I,KAAK,KAAM,0BAUzD8I,GAAwBJ,GAAkB1I,KAAK,KAAM,sFF5B3D,SAA2B+I,EAAQvN,OACjCyC,EAAc8K,EAAQ,gBACjB,IAAI1I,MAAM,oEAGhB1E,EAAkBH,SACZ,IAAI6E,MAAM,4DAGhB2I,EAAUD,EAAOC,QACZnM,EAAI,EAAGA,EAAImM,EAAQ3M,OAAQQ,IAAK,KACjCoM,EAASD,EAAQnM,MAEjBoM,EAAOzN,QAAUA,EAAMoF,kBACvBqI,EAAOC,UAAW,SAKnB,mBEjCJ,SAAuBvJ,EAAUwJ,UAC7BxJ,EAAWxC,SAASiM,WAAWzJ,EAASG,QAASxE,EAAa6N,GAAM,IAASxJ,qBCjFjF,SAAyBnE,MACxBG,EAAkBH,UACX,MAGP4C,EAAUwI,GAAe,CACzBpL,MAAOyC,EAAczC,GAASA,EAAMsM,YAActM,EAAMoF,WACxDmC,UAAU,YAGV9E,EAAcG,KAIlBjB,SAASG,KAAKoD,YAAYtC,GAC1BA,EAAQ2K,SACR5L,SAASkM,YAAY,QACrBjL,EAAQkL,UAED,2CFgTJ,SAAsB7G,EAAMW,EAAYC,OACvCkG,EAAIpG,EAAO,IAAKC,EAAYC,UAE5BZ,IACA8G,EAAE9G,KAAOA,GAGN8G,mDAkCJ,SAAqB5G,EAAKpB,EAAWnB,OACpCoJ,EAAQrG,EAAO,QAAS5B,EAAWnB,UAEnCuC,IACA6G,EAAM7G,IAAMA,GAGT6G,yQA3VJ,SAA2BnG,OAC1B/C,EAAWnD,SAASoD,gCAEnB5E,EAAkB0H,IACnBC,GAAWhD,EAAU+C,GAGlB/C,iPAuTJ,SAAqBqC,EAAKD,EAAKU,OAC9BqG,EAAMtG,EAAO,MAAOC,UAEpBT,IACA8G,EAAI9G,IAAMA,GAGVD,IACA+G,EAAI/G,IAAMA,GAGP+G,4FApIoB,kBAAMtG,EAAO,oBA3KrC,SAAoBV,EAAMiH,OACzBC,EAAOxG,EAAO,eAEdV,IACAkH,EAAKlH,KAAOA,GAGZiH,IACAC,EAAKD,IAAMA,GAGRC,8OAicJ,SAAqBnH,EAAMY,EAAYhD,OACtCwJ,EAAQzG,EAAO,IAAKC,EAAYhD,UAEhCoC,IACAoH,EAAMpH,KAAOA,GAGVoH,yaA5dmB,SAACtH,UAASnF,SAASwD,eAAe2B,0BA6L7B,kBAAMa,EAAO,oBAqWzC,SAAoB0G,EAAUzG,OAC7BhF,EAAU+E,EAAO,OAAQC,UAEzByG,IACAzL,EAAQyL,SAAWA,GAGhBzL,sDApNJ,SAAqBuE,EAAKpB,EAAWnB,OACpC0J,EAAQ3G,EAAO,QAAS5B,EAAWnB,UAEnCuC,IACAmH,EAAMnH,IAAMA,GAGTmH,kBCjQJ,SAAsB1H,EAAQxF,EAAMmN,OAClChM,EAAUqE,SACL,IAAI/B,MAAM,8DAGfvE,EAAWc,SACN,IAAIyD,MAAM,wDAGhBF,EAASiC,EAAO4H,qBAET,EAAPD,EAkCR,SAASE,EAAiB7H,EAAQxF,EAAMsN,UAChCvO,EAAkByG,IAAmB,IAAR8H,EACtB,KAGPtN,EAAKwF,GACEA,EAGJ6H,EAAiB7H,EAAO4H,cAAepN,EAAMsN,EAAM,GA1C/CD,CAAiB9J,EAAQvD,EAAMmN,EAAO,GAarD,SAASI,EAAgB/H,EAAQxF,UACzBjB,EAAkByG,GACX,KAGPxF,EAAKwF,GACEA,EAGJ+H,EAAgB/H,EAAO4H,cAAepN,GAnBtCuN,CAAgBhK,EAAQvD,kCAvG5B,SAAqBoL,EAAUG,OAC9BC,EAAY9M,EAAa6M,EAAYhL,iBAErChB,EAAmB6L,GACZ,KAGPI,aAAqBC,iBACdD,EAAUgC,iBAAiBpC,GAGlCD,GAAgBC,GACTI,EAAUK,uBAAuBT,EAASQ,UAAU,IAGxDJ,EAAUgC,iBAAiBpC,4EAU/B,SAAqBA,EAAUG,SAC3B,YAAahL,SAASyC,cAAc,YAAcsI,GAAWF,EAAUG,GAAc,gEHvDzF,SAA4B/F,EAAQhE,OAClC1B,EAAI,CAAC0F,EAAQhE,GAAUL,SAClB,IAAIsC,MAAM,kEAGpB+B,EAAOiI,sBAAsB,WAAYjM,GAElCgE,yBAvBJ,SAA6BA,EAAQhE,OACnC1B,EAAI,CAAC0F,EAAQhE,GAAUL,SAClB,IAAIsC,MAAM,kEAGpB+B,EAAOiI,sBAAsB,cAAejM,GAErCgE,wBFsHuB,SAACpG,UA/HML,EAATK,EA+HkCA,IA/HCA,EAAI2B,WAAaC,KAAK0M,wBA+HftO,aAAeqM,iBA/H1D,IAACrM,sEAiMzB,SAAqBoC,EAASgE,OAC5B1F,EAAI,CAAC0B,EAASgE,GAASnE,SAClB,IAAIoC,MAAM,uDAG6CjC,EAAQmM,wBAA9DC,IAALC,IAAkBC,IAAPC,MAAuBC,IAARC,OAAuBC,IAANC,OACgB3I,EAAOmI,wBAA7DS,IAALP,IAAkBQ,IAAPN,MAAuBO,IAARL,OAAuBM,IAANJ,YAE1CrO,EAAI,CAAC,CAACsO,EAAMR,GAAO,CAACW,EAAOL,GAAQ,CAACJ,EAAQO,GAAS,CAACL,EAASM,IAAW,SAACE,EAAOC,UAAUD,GAASC,oBAzBzG,SAAsBjN,OACpBH,EAAcG,SACT,IAAIiC,MAAM,uDAGejC,EAAQmM,wBAArCE,IAAAA,IAAKE,IAAAA,MAAOE,IAAAA,OAAQE,IAAAA,YAEZ,GAAPN,GAAoB,GAARM,GAAaF,GAAUtN,KAAkBoN,GAAS3N,6BAvK/C,SAAChB,UAAQA,aAAesP,0BEkB3C,SAAuBlJ,EAAQhE,OAC7B1B,EAAI,CAAC0F,EAAQhE,GAAUL,SAClB,IAAIsC,MAAM,kEAGpB+B,EAAOiI,sBAAsB,aAAcjM,GAEpCgE,oBKtCJ,SAAwBmJ,EAAMC,OAC5B1N,EAAOyN,SACF,IAAIlL,MAAM,uDAGhBvE,EAAW0P,IACX1O,MAAM0D,KAAK+K,EAAKE,YAAYhL,QAAQ,SAAAiL,GAC5BF,EAAUE,IACVH,EAAKI,YAAYD,KAIlBH,GAaf,SAA2BA,QAChBA,EAAKK,iBACRL,EAAKI,YAAYJ,EAAKM,kBAGnBN,EAfAO,CAAkBP"}