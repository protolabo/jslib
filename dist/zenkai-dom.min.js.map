{"version":3,"file":"zenkai-dom.min.js","sources":["../src/datatype/type-parse.js","../src/utils/quantifier-utils.js","../src/dom/dom-parse.js","../src/dom/dom-append.js","../src/dom/element-class-manip.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/dom/copy-to-clipboard.js","../src/dom/dom-remove.js","../src/dom/dom-stat.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable] indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(obj) {\r\n    return (Array.isArray(obj) || isString(obj)) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof LOGIC\r\n */\r\nexport const some = function (values, fn, min = 1) {\r\n    if (min === 1) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return getHitCount(values, fn) >= min;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof LOGIC\r\n */\r\nexport const all = function (values, fn) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (!fn(values[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof LOGIC\r\n */\r\nexport const one = function (values, fn) {\r\n    return getHitCount(values, fn) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof LOGIC\r\n */\r\nexport const no = function (values, fn) {\r\n    return !some(values, fn);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} values \r\n * @param {*} fn \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, fn) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (fn(values[i])) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","import { isNullOrUndefined, isString } from '@datatype/index.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => !isNullOrUndefined(obj) && obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => !isNullOrUndefined(obj) && obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj) => isElementNode(obj) && obj instanceof HTMLElement;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => !isNullOrUndefined(obj) && obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Creates a template with content\r\n * @param {string} html \r\n * @returns {HTMLTemplateElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createTemplate(html) {\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content;\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport function htmlToElement(html) {\r\n    if (!isString(html)) {\r\n        console.error(\"dom-parse>htmlToElement(html): html must be a string\");\r\n        return null;\r\n    }\r\n\r\n    var template = createTemplate(html);\r\n\r\n    return template.firstChild;\r\n}\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport function htmlToElements(html) {\r\n    if (!isString(html)) {\r\n        console.error(\"dom-parse>htmlToElements(html): html must be a string\");\r\n        return null;\r\n    }\r\n\r\n    var template = createTemplate(html);\r\n\r\n    return template.childNodes;\r\n}","import { isIterable, isString } from '@datatype/index.js';\r\nimport { all } from '@utils/index.js';\r\nimport { isNode, isElement, isHTMLCollection } from './dom-parse.js';\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {Element} parent\r\n * @param {!HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    if (!isNode(parent)) {\r\n        return null;\r\n    }\r\n    if (!isHTMLCollection(children) && !isIterable(children) || isString(children)) {\r\n        return null;\r\n    }\r\n\r\n    var fragment = document.createDocumentFragment();\r\n    \r\n    Array.from(children).forEach(element => {\r\n        fragment.appendChild(isNode(element) ? element : document.createTextNode(element.toString()));\r\n    });\r\n    parent.appendChild(fragment);\r\n\r\n    return parent;\r\n}","import { isNullOrWhitespace, isNullOrUndefined } from '@datatype/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} c class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (c) => c.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Transform a raw value to a valid class value\r\n * @param {string} c raw value\r\n * @returns {string} parsed value\r\n * @private\r\n */\r\nconst parseClass = (c) => {\r\n    if (isNullOrUndefined(c)) {\r\n        return \"\";\r\n    } else if (Array.isArray(c)) {\r\n        return c.join(' ');\r\n    } else {\r\n        return c.toString();\r\n    }\r\n};\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {!HTMLElement} element element\r\n * @param {string} className class\r\n * @returns {boolean} value indicating whether the element has the class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(element, className) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    return element.className.split(\" \").includes(className);\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {!HTMLElement} element element\r\n * @param {string|Array} attrClass class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    const remove = function (el, c) {\r\n        if (hasClass(el, c)) {\r\n            el.className = el.className.replace(c, '');\r\n        }\r\n    };\r\n\r\n    if (Array.isArray(attrClass)) {\r\n        attrClass.forEach((val) => remove(element, val));\r\n    } else {\r\n        remove(element, attrClass);\r\n    }\r\n    \r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {!HTMLElement} element Element\r\n * @param {string|string[]} attrClass classes\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function addClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var parsedClass = parseClass(attrClass);\r\n\r\n    if (isNullOrWhitespace(element.className)) {\r\n        element.className = parsedClass;\r\n    } else if (!hasClass(element, parsedClass)) {\r\n        element.className += \" \" + parsedClass;\r\n    }\r\n\r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {!HTMLElement} element \r\n * @param {string} attrClass ClassName\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    if (hasClass(element, attrClass)) {\r\n        removeClass(element, attrClass);\r\n    } else {\r\n        addClass(element, attrClass);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Sets classes to an element\r\n * @param {!HTMLElement} element \r\n * @param {string|string[]} attrClass classes \r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function setClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    element.className = formatClass(parseClass(attrClass));\r\n\r\n    return element;\r\n}","import { setClass } from './element-class-manip.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n\r\n/**\r\n * Verifies that an object is an *HTML Select Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLSelectElement*\r\n * @private\r\n */\r\nexport const isHTMLSelectElement = (obj) => isHTMLElement(obj) && obj instanceof HTMLSelectElement;\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    const ATTR_MAP = {\r\n        // Global attributes\r\n        accesskey: [assign, 'accessKey'],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        editable: [assign, 'contenteditable'],\r\n        draggable: [assign],\r\n        hidden: [assign],\r\n        id: [assign],\r\n        lang: [assign],\r\n        html: [assign, 'innerHTML'],\r\n        style: [assign],\r\n        tabindex: [assign, 'tabIndex'],\r\n        title: [assign],\r\n        // Form attributes\r\n        accept: [assign],\r\n        disabled: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    if (!isHTMLSelectElement(select)) {\r\n        throw new Error(\"The given element is not a valid HTML Select element\");\r\n    }\r\n\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {!HTMLElement} element Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    Object.assign(element.style, {\r\n        position: 'absolute',\r\n        top: '-9999px',\r\n        left: '-9999px'\r\n    });\r\n\r\n    return element;\r\n}\r\n","import { isNode } from \"./dom-parse.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} [_attribute] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_children] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute, _children) {\r\n    var element = document.createElement(tagName);\r\n    if (_attribute) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n    if (_children) {\r\n        addContent(element, _children);\r\n    }\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport const createDocFragment = () => document.createDocumentFragment();\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} href \r\n * @param {string} rel \r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport function createLink(href, rel) {\r\n    var link = create(\"link\");\r\n\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = create.bind(null, 'template');\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createBlockQuotation(cite, attribute, children) {\r\n    var element = create('blockquote', attribute, children);\r\n\r\n    if (cite) {\r\n        element.cite = cite;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, _attribute, _children) {\r\n    var a = create('a', _attribute, _children);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, _attribute) {\r\n    var img = create('img', _attribute);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attribute, children) {\r\n    var audio = create('audio', attribute, children);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attribute, children) {\r\n    var video = create('video', attribute, children);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, _attribute, children) {\r\n    var quote = create('q', _attribute, children);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @param {string} datetime \r\n * @param {object} attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, _attribute) {\r\n    var element = create('time', _attribute);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\n\r\n/**\r\n * Creates an `<input>` element with a specified type and \r\n * optionally some attributes\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @memberof DOM\r\n */\r\nexport function createInputAs(type, _attribute) {\r\n    if (![\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n        \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n        \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"].includes(type)) {\r\n        console.error(`Input could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var input = create('input', _attribute);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\n\r\n/**\r\n * Creates a `<button>` element with a specified type and \r\n * optionally some attributes and children elements\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport function createButtonAs(type, _attribute, _children) {\r\n    if (![\"submit\", \"reset\", \"button\"].includes(type)) {\r\n        console.error(`Button could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var button = create(\"button\", _attribute, _children);\r\n    button.type = type;\r\n\r\n    return button;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableHeaderCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableDataCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} element element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(element, children);\r\n    } else if (isNode(children)) {\r\n        element.appendChild(children);\r\n    } else {\r\n        element.textContent = children.toString();\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\nimport { isElement } from './dom-parse.js';\r\n\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if(isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if(isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => true;\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (!predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"previousElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"nextElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n    if (!isFunction(callback)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max - 1);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}","import { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value,\r\n        readonly: true\r\n    });\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { isFunction } from '@datatype/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfies the predicate function\r\n * @param {!Node} node \r\n * @param {Function} [callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, callback) {\r\n    if (!isNode(node)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isFunction(callback)) {\r\n        return removeAllChildren(node);\r\n    }\r\n\r\n    Array.from(node.childNodes).forEach(n => {\r\n        if (callback(n)) {\r\n            node.removeChild(n);\r\n        }\r\n    });\r\n\r\n\r\n    return node;\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isString","String","isFunction","isNullOrWhitespace","str","length","test","all","values","fn","i","isElementNode","obj","nodeType","Node","ELEMENT_NODE","isElement","Element","isNode","isHTMLElement","HTMLElement","isHTMLCollection","HTMLCollection","createTemplate","html","template","document","createElement","innerHTML","trim","content","appendChildren","parent","children","Symbol","iterator","fragment","createDocumentFragment","Array","from","forEach","element","appendChild","createTextNode","toString","formatClass","c","replace","parseClass","isArray","join","hasClass","className","Error","split","includes","removeClass","attrClass","remove","el","val","addClass","parsedClass","setClass","echo","o","isHTMLSelectElement","HTMLSelectElement","addAttributes","attribute","ATTR_MAP","accesskey","assign","data","Object","dataset","editable","draggable","hidden","id","lang","style","tabindex","title","accept","disabled","placeholder","readonly","DEFAULT_MAP","keys","key","create","tagName","_attribute","_children","textContent","bind","createHeader","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createParagraph","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createSource","createPicture","createFigure","createFigureCaption","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createAbbreviation","createB","createI","createS","createU","createCite","createCode","createForm","createInputAs","type","console","error","input","createInput","createLabel","createFieldset","createLegend","createDataList","createSelect","createOption","createOptionGroup","createTextArea","createMeter","createProgress","createOutput","createButtonAs","button","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","isClassSelector","selector","isIdSelector","getElement","_container","container","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElementSibling","dir","pred","predicate","sibling","select","found","options","option","selected","deep","importNode","position","top","left","body","execCommand","href","a","src","audio","cite","alt","img","rel","link","quote","text","datetime","video","target","callback","max","parentElement","findAncestorIter","findAncestorInf","querySelectorAll","predCb","firstChild","childNodes","insertAdjacentElement","DOCUMENT_FRAGMENT_NODE","NodeList","node","n","removeChild","hasChildNodes","lastChild","removeAllChildren","window","innerWidth","documentElement","clientWidth"],"mappings":"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"}