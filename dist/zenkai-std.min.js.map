{"version":3,"file":"zenkai-std.min.js","sources":["../src/std/std-parse.js","../src/std/std-ajax.js","../src/std/std-datetime.js","../src/std/std-object.js","../src/std/std-string.js","../src/std/std-logic.js","../src/std/std-path.js","../src/std/std-convert.js","../src/std/std-array.js","../src/std/std-math.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable] indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(obj) {\r\n    return (Array.isArray(obj) || isString(obj)) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { isFunction, valOrDefault } from \"./std-parse.js\";\r\n\r\nconst HttpResponse = {\r\n    // Successful\r\n    OK: 200,\r\n    Created: 201,\r\n    Accepted: 202,\r\n    NoContent: 204,\r\n    // Client Error\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    MethodNotAllowed: 405,\r\n    NotAcceptable: 406,\r\n    UnsupportedMediaType: 415,\r\n    // Server Error\r\n    InternalServerError: 500,\r\n    NotImplemented: 501,\r\n    BadGateway: 502,\r\n    ServiceUnavaible: 503,\r\n    GatewayTimeout: 504\r\n};\r\n\r\nconst State = {\r\n    OPENED: 1,\r\n    RECEIVED: 2,\r\n    LOADING: 3,\r\n    DONE: 4\r\n};\r\n\r\n/**\r\n * An XHR resposne\r\n * @private\r\n * @typedef {Object} xhrResponse\r\n * @property {number} status - The response status code\r\n * @property {string} message - The response content\r\n */\r\n\r\n/**\r\n * @callback xhrCallback\r\n * @param  {xhrResponse} response - The XHR response object\r\n * @private\r\n */\r\n\r\n/**\r\n * This function creates and arranges the XMLHttpRequest object\r\n * @param {('GET'|'POST'|'PUT'|'DELETE')} type The HTTP method\r\n * @param {string} url The URL to send the request \r\n * @param {*} successPred The success condition\r\n * @param {xhrCallback} successCb A callback function to handle a successful request\r\n * @param {xhrCallback} passCb A callback function to handle a valid request\r\n * @param {xhrCallback} failureCb A callback function to handle a failed request\r\n * @private\r\n */\r\nconst xhrHandler = function (type, url, successPred, successCb, failureCb, passCb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        var callback;\r\n        if (xhr.readyState === State.DONE) {\r\n            let response = createResponse(xhr.status, xhr.responseText);\r\n            if (successPred(xhr.status)) {\r\n                callback = successCb;\r\n            } else {\r\n                callback = failureCb;\r\n                if (xhr.status >= 200 && xhr.status < 300 && isFunction(passCb)) {\r\n                    callback = passCb;\r\n                }\r\n            }\r\n            if (isFunction(callback)) {\r\n                callback(response);\r\n            }\r\n        }\r\n    };\r\n    xhr.open(type, url, true);\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n    return xhr;\r\n};\r\n\r\nfunction createResponse(status, content) {\r\n    return {\r\n        status: status,\r\n        message: content\r\n    };\r\n}\r\n\r\n/**\r\n * Sends a GET request\r\n * @param {string} url The URL to send the request \r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function GET(url, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => status === HttpResponse.OK;\r\n    var xhr = xhrHandler('GET', url, successPred, success, fail, options.pass);\r\n    xhr.send();\r\n}\r\n\r\n/**\r\n * Sends a POST request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function POST(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Created].includes(status);\r\n    var xhr = xhrHandler('POST', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a PUT request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function PUT(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('PUT', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a DELETE request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function DELETE(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Accepted, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('DELETE', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}","import { valOrDefault, isNullOrUndefined, isDate } from './std-parse.js';\r\n\r\n/**\r\n * Compare 2 times\r\n * @param {string} t1 time 1\r\n * @param {string} t2 time 2\r\n * @returns {number} 1, 0, -1 if t1 > t2, t1 = t2 and t1 < t2 respectively\r\n * @memberof STD\r\n */\r\nexport function compareTime(t1, t2) {\r\n    if (isNullOrUndefined(t1) || isNullOrUndefined(t2) || !t1.includes(\":\") || !t2.includes(\":\")) {\r\n        return null;\r\n    }\r\n\r\n    var arr1 = t1.split(':');\r\n    var arr2 = t2.split(':');\r\n\r\n    // hour comparison\r\n    if (+arr1[0] > +arr2[0]) {\r\n        return 1;\r\n    } else if (+arr1[0] < +arr2[0]) {\r\n        return -1;\r\n    } else {\r\n        // minute comparison\r\n        if (+arr1[1] > +arr2[1]) {\r\n            return 1;\r\n        } else if (+arr1[1] < +arr2[1]) {\r\n            return -1;\r\n        } else {\r\n            if (arr1.length == arr2.length && arr1.length == 3) {\r\n                // second comparison\r\n                if (+arr1[2] > +arr2[2]) {\r\n                    return 1;\r\n                } else if (+arr1[2] < +arr2[2]) {\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Resolves a date value\r\n * @param {*} [date] \r\n * @returns {Date}\r\n * @private\r\n */\r\nfunction resolveDate(date) {\r\n    if (isNullOrUndefined(date)) {\r\n        return new Date();\r\n    } else if (isDate(date)) {\r\n        return date;\r\n    }\r\n\r\n    var _date = new Date(date);\r\n    return new Date(_date.getTime() + _date.getTimezoneOffset() * 60000);\r\n}\r\n\r\n/**\r\n * Formats a date\r\n * @param {!Date} date \r\n * @param {!string} format \r\n * @returns {string} Formatted date\r\n * @memberof STD\r\n */\r\nexport function formatDate(date, format) {\r\n    var dd = date.getDate();\r\n    var mm = date.getMonth() + 1;   // January = 0\r\n    var yyyy = date.getFullYear().toString();\r\n    var hh = date.getHours();\r\n    var MM = date.getMinutes();\r\n    var ss = date.getSeconds();\r\n\r\n    const twoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\n    return format.replace('yyyy', yyyy)\r\n        .replace('yy', yyyy.slice(-2))\r\n        .replace('mm', twoDigits(mm))\r\n        .replace('m', mm)\r\n        .replace('dd', twoDigits(dd))\r\n        .replace('d', dd)\r\n        .replace('hh', twoDigits(hh))\r\n        .replace('h', hh)\r\n        .replace('MM', twoDigits(MM))\r\n        .replace('M', MM)\r\n        .replace('ss', twoDigits(ss))\r\n        .replace('s', ss);\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDate(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(date, 'yyyy-mm-dd');\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd hh:MM\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDateTime(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(new Date(date + date.getTimezoneOffset() * 60000), 'yyyy-mm-dd hh:MM');\r\n}\r\n\r\nexport function parseTime(n) {\r\n    var hh = +n | 0;\r\n    var mm = '00';\r\n\r\n    if (!Number.isInteger(+n)) {\r\n        mm = (n + '').split('.')[1] * 6;\r\n    }\r\n\r\n    return hh + ':' + mm;\r\n}\r\n\r\nconst DICT = {\r\n    'en': {\r\n        'second': 'second(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'hour(s)',\r\n        'day': 'day(s)',\r\n        'week': 'week(s)',\r\n        'month': 'month(s)',\r\n        'year': 'year(s)',\r\n    },\r\n    'fr': {\r\n        'second': 'seconde(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'heure(s)',\r\n        'day': 'jour(s)',\r\n        'week': 'semaine(s)',\r\n        'month': 'mois',\r\n        'year': 'année(s)',\r\n    },\r\n};\r\n\r\nconst trans = function translation(lang, key, isPlural) {\r\n    var value = DICT[lang][key];\r\n\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (isPlural) {\r\n        return value.replace(/\\(([a-z]+)\\)/g, '$1');\r\n    }\r\n\r\n    return value.replace(/\\([a-z]+\\)/g, '');\r\n};\r\n\r\nconst timeAgoResponse = function timeAgoResponseBuilder(time, unit, _lang) {\r\n    var lang = valOrDefault(_lang, 'en');\r\n    var isPlural = time === 1;\r\n    var msg = {\r\n        en: `${time} ${trans('en', unit, isPlural)} ago`,\r\n        fr: `il y a ${time} ${trans('fr', unit, isPlural)}`,\r\n    };\r\n\r\n    return msg[lang];\r\n};\r\n\r\n/**\r\n * Returns the ellapsed time between now and a point in time\r\n * @param {*} time \r\n * @param {*} _callback \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function timeAgo(time, _callback) {\r\n    var callback = valOrDefault(_callback, timeAgoResponse);\r\n\r\n    const seconds = Math.floor((Date.now() - resolveDate(time).getTime()) / 1000);\r\n    const MINUTE = 60;\r\n    const HOUR = MINUTE * 60;\r\n    const DAY = HOUR * 24;\r\n    const WEEK = DAY * 7;\r\n    const MONTH = DAY * 30;\r\n    const YEAR = WEEK * 52;\r\n\r\n    if (seconds < MINUTE) {\r\n        return callback(seconds, 'second');\r\n    } else if (seconds < HOUR) {\r\n        return callback(~~(seconds / MINUTE), 'minute');\r\n    } else if (seconds < DAY) {\r\n        return callback(~~(seconds / HOUR), 'hour');\r\n    } else if (seconds < WEEK) {\r\n        return callback(~~(seconds / DAY), 'day');\r\n    } else if (seconds < MONTH) {\r\n        return callback(~~(seconds / WEEK), 'week');\r\n    } else if (seconds < YEAR) {\r\n        return callback(~~(seconds / MONTH), 'month');\r\n    } else {\r\n        return callback(~~(seconds / YEAR), 'year');\r\n    }\r\n}","/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\nexport const defProp = Object.defineProperty;\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) { return hasOwnProperty.call(obj, key); };\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} obj \r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (obj === null || typeof (obj) !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Sequence\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { isNullOrUndefined } from \"./std-parse\";\r\n\r\n/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const some = function (values, pred) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that at the condition is satisfied for a a number of value\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @param {number} [max=-1] Minimum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const assert = function (values, pred, min, max) {\r\n    if (max < min) {\r\n        console.error(\"`max` must be greater than `min`\");\r\n        return;\r\n    }\r\n\r\n    var hitCount = getHitCount(values, pred);\r\n\r\n    if (all([min, max], Number.isInteger)) {\r\n        return hitCount >= min && hitCount <= max;\r\n    }\r\n    if(Number.isInteger(min)) {\r\n        return hitCount >= min;\r\n    }\r\n    if(Number.isInteger(max)) {\r\n        return hitCount <= max;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof STD\r\n */\r\nexport const all = function (values, pred) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (!pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const one = function (values, pred) {\r\n    return getHitCount(values, pred) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const no = function (values, pred) {\r\n    return getHitCount(values, pred) === 0;\r\n};\r\n\r\n/**\r\n * Verifies that at most one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at most one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const lone = function (values, pred) {\r\n    return getHitCount(values, pred) <= 1;\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} values \r\n * @param {*} pred \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, pred) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","import { isNullOrWhitespace, isNullOrUndefined, valOrDefault } from './std-parse.js';\r\nimport { cloneObject } from './std-object.js';\r\n\r\n/**\r\n * Append the path to the current path\r\n * @param {string} target \r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function addPath(target, path) { return isNullOrWhitespace(target) ? path : target + '.' + path; }\r\n\r\n/**\r\n * Returns the directory of the path\r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function getDir(path) { return path.substring(0, path.lastIndexOf('.')); }\r\n\r\n/**\r\n * Returns the directory of the path from the target\r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function getDirTarget(path, target) { return path.substring(0, path.lastIndexOf(target) - 1); }\r\n\r\nfunction findByIndex(obj, match, prop) {\r\n    const REGEX_DIGIT = /\\d+/g;\r\n    var index = +match[0].match(REGEX_DIGIT);\r\n    return obj[prop][index];\r\n}\r\n\r\n/**\r\n * Returns an element in an object using its path\r\n * @param {Object} obj\r\n * @param {string} path  \r\n * @param {string} [_separator=.]\r\n * @memberof STD\r\n */\r\nexport function findByPath(obj, path, _separator) {\r\n    const REGEX_BRACKET_DIGIT = /\\[\\d+\\]/g;\r\n    const REGEX_BRACKET_WORD = /\\[\\w+\\]/g;\r\n    \r\n    const separator = valOrDefault(_separator, '.');\r\n    var me = cloneObject(obj);\r\n\r\n    const findHandler = function (part, regex, callback) {\r\n        var match = part.match(regex);\r\n        var prop = part.substring(0, part.indexOf('['));\r\n        return callback(me, match, prop);\r\n    };\r\n\r\n    var parts = path.split(separator);\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n\r\n        if (REGEX_BRACKET_DIGIT.test(part)) {\r\n            me = findHandler(part, REGEX_BRACKET_DIGIT, findByIndex);\r\n        } else {\r\n            me = me[part];\r\n        }\r\n\r\n        if (isNullOrUndefined(me)) {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    return me;\r\n}","import { valOrDefault } from \"./std-parse.js\";\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof STD\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof STD\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n","import { isEmpty } from \"./std-parse.js\";\r\n\r\n/**\r\n * Inserts an item in an array at the specified index\r\n * @param {*[]} arr array\r\n * @param {number} index \r\n * @param {object} item \r\n * @returns {number} The new length of the array\r\n * @memberof STD\r\n */\r\nexport function insert(arr, index, item) {\r\n    arr.splice(index, 0, item);\r\n\r\n    return arr.length;\r\n}\r\n\r\n/**\r\n * Returns last element of array.\r\n * @param {*[]} arr array\r\n * @memberof STD\r\n */\r\nexport function last(arr) {\r\n    if (!Array.isArray(arr) || isEmpty(arr)) {\r\n        return undefined;\r\n    }\r\n\r\n    return arr[arr.length - 1];\r\n}","import { isNullOrUndefined } from \"./std-parse\";\r\n\r\n/**\r\n * Return a random integer between min and max (inclusive).\r\n * @param {number} min \r\n * @param {number} [max] \r\n * @param {boolean} [secure] \r\n * @memberof STD\r\n*/\r\nexport function random(min, max, secure = false) {\r\n    if (isNullOrUndefined(max)) {\r\n        max = min;\r\n        min = 0;\r\n    }\r\n\r\n    return min + Math.floor((secure ? secureMathRandom() : Math.random()) * (max - min + 1));\r\n}\r\n\r\n/**\r\n * More secure implementation of `Math.random`\r\n * @private\r\n */\r\nfunction secureMathRandom() {\r\n    // Divide a random UInt32 by the maximum value (2^32 -1) to get a result between 0 and 1\r\n    return window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","obj","Array","isArray","isString","length","isDate","Date","_typeof","Object","prototype","toString","call","String","isFunction","isNull","isNullOrWhitespace","str","test","HttpResponse","OK","Created","Accepted","NoContent","BadRequest","Unauthorized","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","UnsupportedMediaType","InternalServerError","NotImplemented","BadGateway","ServiceUnavaible","GatewayTimeout","State","xhrHandler","type","url","successPred","successCb","failureCb","passCb","xhr","XMLHttpRequest","onreadystatechange","callback","status","content","readyState","response","responseText","message","open","setRequestHeader","resolveDate","date","_date","getTime","getTimezoneOffset","formatDate","format","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","MM","getMinutes","ss","getSeconds","twoDigits","val","replace","slice","DICT","trans","lang","key","isPlural","undefined","timeAgoResponse","time","unit","_lang","en","fr","hasOwnProperty","isPrototypeOf","defProp","defineProperty","hasOwn","cloneObject","temp","constructor","capitalize","toLowerCase","s","toUpperCase","CaseHandler","camelCase","pascalCase","ccString","charAt","trim","all","values","pred","i","getHitCount","counter","findByIndex","match","prop","index","data","success","fail","options","_successPred","includes","pass","send","target","path","min","max","hitCount","Number","isInteger","console","error","t1","t2","arr1","split","arr2","_separator","part","regex","REGEX_BRACKET_DIGIT","separator","me","parts","len","substring","indexOf","casing","lastIndexOf","arr","item","splice","child","parent","getPrototypeOf","Symbol","iterator","n","secure","Math","floor","window","crypto","getRandomValues","Uint32Array","random","normalize","_callback","seconds","now","DAY","HOUR","WEEK","MINUTE"],"mappings":"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"}