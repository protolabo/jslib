{"version":3,"file":"zenkai-type.min.js","sources":["../src/datatype/type-manip.js","../src/datatype/type-datetime.js","../src/datatype/type-object.js","../src/datatype/type-string.js","../src/datatype/type-array.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean} A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) {\r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) {\r\n    return (Array.isArray(val) || isString(val)) && val.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(value) { return typeof value === 'string' || value instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) { return !isNull(obj) && typeof obj[Symbol.iterator] === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }","import { isInt, valOrDefault, isNullOrUndefined } from './type-manip.js';\r\n\r\n/**\r\n * Compare 2 times\r\n * @param {string} t1 time 1\r\n * @param {string} t2 time 2\r\n * @returns {number} 1, 0, -1 if t1 > t2, t1 = t2 and t1 < t2 respectively\r\n */\r\nexport function compareTime(t1, t2) {\r\n    if (isNullOrUndefined(t1) || isNullOrUndefined(t2) || !t1.includes(\":\") || !t2.includes(\":\")) {\r\n        return null;\r\n    }\r\n\r\n    var arr1 = t1.split(':');\r\n    var arr2 = t2.split(':');\r\n\r\n    // hour comparison\r\n    if (+arr1[0] > +arr2[0])\r\n        return 1;\r\n    else if (+arr1[0] < +arr2[0])\r\n        return -1;\r\n    else {\r\n        // minute comparison\r\n        if (+arr1[1] > +arr2[1])\r\n            return 1;\r\n        else if (+arr1[1] < +arr2[1])\r\n            return -1;\r\n        else {\r\n            if (arr1.length == arr2.length && arr1.length == 3) {\r\n                // second comparison\r\n                if (+arr1[2] > +arr2[2])\r\n                    return 1;\r\n                else if (+arr1[2] < +arr2[2])\r\n                    return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n// Returns a date using the format \"YYYY-mm-dd\"\r\nexport function shortDate(myDate) {\r\n    var d = new Date(myDate);\r\n    var dd = d.getDate();\r\n    var mm = d.getMonth() + 1; // January = 0\r\n    var yyyy = d.getFullYear();\r\n\r\n    if (dd < 10) dd = '0' + dd;\r\n    if (mm < 10) mm = '0' + mm;\r\n    d = yyyy + '-' + mm + '-' + dd;\r\n\r\n    return d;\r\n}\r\n\r\n// Returns a date and time using the format \"YYYY-mm-dd hh:MM\"\r\nexport function longDate(myDate) {\r\n    var d = new Date(myDate);\r\n    var hh = d.getHours();\r\n    var MM = d.getMinutes();\r\n\r\n    if (MM < 10) MM = '0' + MM;\r\n    d = shortDate(d) + ' ' + hh + ':' + MM;\r\n\r\n    return d;\r\n}\r\n\r\n// Convertie une date de string (YYYY-MM-DD) en format Date\r\nexport function parseDate(strDate) {\r\n    var arrDate = strDate.split('-');\r\n\r\n    return new Date(arrDate[0], arrDate[1] - 1, arrDate[2], 0, 0, 0, 0);\r\n}\r\n\r\n\r\nexport function parseTime(n) {\r\n    var hh = +n | 0;\r\n    var mm = '00';\r\n\r\n    if (!isInt(+n)) {\r\n        mm = (n + '').split('.')[1] * 6;\r\n    }\r\n\r\n    return hh + ':' + mm;\r\n}\r\n\r\n// Convertie une date de string (YYYY-MM-DD hh:mm) en format Date\r\nexport function parseDateTime(strDate) {\r\n    var arrDateTime = strDate.split(' ');\r\n    var arrTime = arrDateTime[1].split(':');\r\n    var d = parseDate(arrDateTime[0]).setHours(+arrTime[0], +arrTime[1]);\r\n\r\n    return new Date(d);\r\n}\r\n\r\nconst DICT = {\r\n    'en': {\r\n        'second': 'second(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'hour(s)',\r\n        'day': 'day(s)',\r\n        'week': 'week(s)',\r\n        'month': 'month(s)',\r\n        'year': 'year(s)',\r\n    },\r\n    'fr': {\r\n        'second': 'seconde(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'heure(s)',\r\n        'day': 'jour(s)',\r\n        'week': 'semaine(s)',\r\n        'month': 'mois',\r\n        'year': 'annÃ©e(s)',\r\n    },\r\n};\r\n\r\nconst trans = function translation(lang, key, isPlural) {\r\n    var value = DICT[lang][key];\r\n\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (isPlural) {\r\n        return value.replace(/\\(([a-z]+)\\)/g, '$1');\r\n    }\r\n\r\n    return value.replace(/\\([a-z]+\\)/g, '');\r\n};\r\n\r\nconst timeAgoResponse = function timeAgoResponseBuilder(time, unit, _lang) {\r\n    var lang = valOrDefault(_lang, 'en');\r\n    var isPlural = time === 1;\r\n    var msg = {\r\n        en: `${time} ${trans('en', unit, isPlural)} ago`,\r\n        fr: `il y a ${time} ${trans('fr', unit, isPlural)}`,\r\n    };\r\n\r\n    return msg[lang];\r\n};\r\n\r\nexport function timeAgo(time, callback) {\r\n    callback = valOrDefault(callback, timeAgoResponse);\r\n    const seconds = Math.floor((Date.now() - (new Date(time)).getTime()) / 1000);\r\n    const MINUTE = 60;\r\n    const HOUR = MINUTE * 60;\r\n    const DAY = HOUR * 24;\r\n    const WEEK = DAY * 7;\r\n    const MONTH = DAY * 30;\r\n    const YEAR = WEEK * 52;\r\n\r\n    if (seconds < MINUTE) {\r\n        return callback(seconds, 'second');\r\n    } else if (seconds < HOUR) {\r\n        return callback(~~(seconds / MINUTE), 'minute');\r\n    } else if (seconds < DAY) {\r\n        return callback(~~(seconds / HOUR), 'hour');\r\n    } else if (seconds < WEEK) {\r\n        return callback(~~(seconds / DAY), 'day');\r\n    } else if (seconds < MONTH) {\r\n        return callback(~~(seconds / WEEK), 'week');\r\n    } else if (seconds < YEAR) {\r\n        return callback(~~(seconds / MONTH), 'month');\r\n    } else {\r\n        return callback(~~(seconds / YEAR), 'year');\r\n    }\r\n}","/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\nexport const defProp = Object.defineProperty;\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof TYPE\r\n */\r\nexport const hasOwn = function (obj, key) { return hasOwnProperty.call(obj, key); };\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof TYPE\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} obj \r\n * @memberof TYPE\r\n */\r\nexport function cloneObject(obj) {\r\n    if (obj === null || typeof (obj) !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace } from \"./type-manip.js\";\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} CamelCased sequence\r\n * @memberof TYPE\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof TYPE\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[Ã Ã¢Ã¤Ã¦]/gi, 'a')\r\n        .replace(/[Ã§]/gi, 'c')\r\n        .replace(/[Ã©Ã¨Ãª]/gi, 'e')\r\n        .replace(/[Ã®Ã¯]/gi, 'i')\r\n        .replace(/[Ã´Å]/gi, 'o')\r\n        .replace(/[Ã¹Ã»Ã¼]/gi, 'u');\r\n}","/**\r\n * Inserts an item in an array at the specified index\r\n * @param {Object[]} arr array\r\n * @param {number} index \r\n * @param {object} item \r\n * @returns {number} The new length of the array\r\n * @memberof TYPE\r\n */\r\nexport function insert(arr, index, item) { \r\n    arr.splice(index, 0, item); \r\n\r\n    return arr.length;\r\n}\r\n\r\n/**\r\n * Returns last element of array.\r\n * @param {Object[]} arr array\r\n * @memberof TYPE\r\n */\r\nexport function last(arr) {\r\n    if (Array.isArray(arr) && arr.length - 1) {\r\n        return arr[arr.length - 1];\r\n    }\r\n\r\n    return undefined;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isInt","Number","isInteger","isString","String","isNull","isNullOrWhitespace","str","length","test","shortDate","myDate","d","Date","dd","getDate","mm","getMonth","getFullYear","parseDate","strDate","arrDate","split","DICT","trans","lang","key","isPlural","undefined","replace","timeAgoResponse","time","unit","_lang","en","fr","hasOwnProperty","Object","prototype","isPrototypeOf","defProp","defineProperty","hasOwn","obj","call","capitalize","toLowerCase","s","toUpperCase","pascalCase","trim","ccString","charAt","slice","cloneObject","_typeof","temp","constructor","t1","t2","includes","arr1","arr2","arr","index","item","splice","toString","child","parent","getPrototypeOf","val","Array","isArray","Symbol","iterator","hh","getHours","MM","getMinutes","arrDateTime","arrTime","setHours","n","normalize","callback","seconds","Math","floor","now","getTime","DAY","HOUR","WEEK","MINUTE"],"mappings":"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"}