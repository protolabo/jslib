{"version":3,"file":"zenkai-ui.min.js","sources":["../src/std/std-parse.js","../src/std/std-object.js","../src/std/std-string.js","../src/dom/dom-parse.js","../src/dom/dom-append.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/ui/form/floating-label.js","../src/ui/form/utils.js","../src/ui/form/selector/factory.js","../src/ui/form/selector/base-selector.js","../src/ui/form/selector/form-selector.js","../src/ui/form/selector/index.js","../src/ui/form/switch.js","../src/ui/utils.js","../src/ui/collapsible.js","../src/ui/form/input-counter.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable=false] indicates whether the value can be assigned the value *NULL*\r\n * @memberof STD\r\n */\r\nexport function valOrDefault(arg, value, isNullable = false) {\r\n    if (isNullable) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isEmpty(obj) {\r\n    return isIterable(obj) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is a non-string iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isCollection(obj) {\r\n    return isIterable(obj) && !isString(obj);\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} value string\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrWhitespace(value) {\r\n    return (!value || isString(value) && (value.length === 0 || /^\\s*$/.test(value)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { isObject, isNullOrUndefined } from \"./std-parse.js\";\r\n\r\n\r\n/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) {\r\n    return hasOwnProperty.call(obj, key);\r\n};\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * Creates a clone of an object\r\n * @param {*} obj Object\r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (isNullOrUndefined(obj) || !isObject(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    if(isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    if(isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Casing (camel, pascal, upper, lower)\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { isNullOrUndefined, isString, isIterable, hasOwn, pascalCase, isEmpty, all, some, isCollection } from '@std/index.js';\r\nimport { windowWidth, windowHeight } from './dom-stat.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTML Element*\r\n * @param {Element} obj \r\n * @param {string|string[]|string[][]} [kind] \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj, kind) => {\r\n    if (!(isElementNode(obj) && obj instanceof HTMLElement)) {\r\n        return false;\r\n    }\r\n\r\n    if (isIterable(kind)) {\r\n        return isHTMLElementKind(obj, Array.isArray(kind) ? kind : [kind]);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst TagNameMapping = {\r\n    'a': \"Anchor\",\r\n    'br': \"BR\",\r\n    'dl': \"DList\",\r\n    'datalist': \"DataList\",\r\n    'fieldset': \"FieldSet\",\r\n    'frameset': \"FrameSet\",\r\n    'hr': \"HR\",\r\n    'h1': \"Heading\",\r\n    'h2': \"Heading\",\r\n    'h3': \"Heading\",\r\n    'h4': \"Heading\",\r\n    'h5': \"Heading\",\r\n    'h6': \"Heading\",\r\n    'li': \"LI\",\r\n    'ol': \"OList\",\r\n    'optgroup': \"OptGroup\",\r\n    'p': \"Paragraph\",\r\n    'q': \"Quote\",\r\n    'blockquote': \"Quote\",\r\n    'caption': \"TableCaption\",\r\n    'td': \"TableCell\",\r\n    'th': \"TableCell\",\r\n    'col': \"TableCol\",\r\n    'tr': \"TableRow\",\r\n    'tbody': \"TableSection\",\r\n    'thead': \"TableSection\",\r\n    'tfoot': \"TableSection\",\r\n    'textarea': \"TextArea\",\r\n    'ul': \"UList\",\r\n};\r\n\r\n/**\r\n * Verifies the tag of an *HTML Element*\r\n * @param {HTMLElement} element \r\n * @param {string[]|string[][]} kinds\r\n * @returns {boolean}\r\n */\r\nfunction isHTMLElementKind(element, kinds) {\r\n    const isInstanceOf = (obj) => element instanceof obj;\r\n    const hasTag = (tag) => element.tagName === tag.toUpperCase();\r\n    const isOfType = (type) => Array.isArray(type) ? type.includes(element.type) : element.type === type;\r\n    \r\n    return kinds.some((kind) => {\r\n        if (!isIterable(kind)) {\r\n            return false;\r\n        }\r\n\r\n        var name = kind;\r\n        var type = null;\r\n        \r\n        if (Array.isArray(kind)) {\r\n            [name, type] = kind;\r\n        }\r\n\r\n        name = name.toLowerCase();\r\n        var interfaceName = `HTML${hasOwn(TagNameMapping, name) ? TagNameMapping[name] : pascalCase(name)}Element`;\r\n\r\n        if (!(isInstanceOf(window[interfaceName]) || hasTag(name))) {\r\n            return false;\r\n        }\r\n\r\n        if (isCollection(type) && !isEmpty(type)) {\r\n            return isOfType(type);\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Converts an html string to an HTML Element or a list of HTML Elements\r\n * @param {!string} prop \r\n * @param {!string} html \r\n */\r\n/* istanbul ignore next */\r\nfunction _htmlToElement(prop, html) {\r\n    if (!isString(html)) {\r\n        return null;\r\n    }\r\n\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content[prop];\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElement = _htmlToElement.bind(null, 'firstChild');\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElements = _htmlToElement.bind(null, 'childNodes');\r\n\r\n/**\r\n * Verifies that an element is visible\r\n * @param {!HTMLElement} element \r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInViewport(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return top >= 0 && left >= 0 && bottom <= windowHeight() && right <= windowWidth();\r\n}\r\n\r\n/**\r\n * Verifies that an element is displayed inside a target element\r\n * @param {!HTMLElement} element \r\n * @param {!HTMLElement} target\r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInElement(element, target) {\r\n    if (!all([element, target], isHTMLElement)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top: top1, right: right1, bottom: bottom1, left: left1 } = element.getBoundingClientRect();\r\n    var { top: top2, right: right2, bottom: bottom2, left: left2 } = target.getBoundingClientRect();\r\n\r\n    return all([[top2, top1], [left2, left1], [right1, right2], [bottom1, bottom2]], (inner, outer) => inner <= outer);\r\n}","import { isCollection, all, isNullOrUndefined } from '@std/index.js';\r\nimport { isNode, isElement, isHTMLCollection, isDocumentFragment } from './dom-parse.js';\r\n\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {!Element} target \r\n * @param {!Element} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new TypeError(\"Bad argument: The given `element` or `target` is not a valid Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {!Element} target \r\n * @param {!Element} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new TypeError(\"Bad argument: The given `element` or `target` is not a valid Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {!Element} target \r\n * @param {!Element} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new TypeError(\"Bad argument: The given `element` or `target` is not a valid Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {!Element} parent\r\n * @param {!HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    if (!isNode(parent)) {\r\n        throw new TypeError(\"Bad argument: The given `parent` is not a valid Node\");\r\n    }\r\n\r\n    if (!(isHTMLCollection(children) || isCollection(children))) {\r\n        throw new TypeError(\"Bad argument: The given `children` is not a valid HTMLCollection/HTMLElement array\");\r\n    }\r\n\r\n    const createText = (obj) => document.createTextNode(obj.toString());\r\n\r\n    var fragment = isDocumentFragment(parent) ? parent : document.createDocumentFragment();\r\n\r\n    Array.from(children).forEach(element => {\r\n        if (!isNullOrUndefined(element)) {\r\n            fragment.appendChild(isNode(element) ? element : createText(element.toString()));\r\n        }\r\n    });\r\n\r\n    if (parent !== fragment) {\r\n        parent.appendChild(fragment);\r\n    }\r\n\r\n    return parent;\r\n}","import { isObject, isNullOrUndefined } from '@std/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Add classes to an element\r\n * @param {HTMLElement} element \r\n * @param {string|string[]} value \r\n */\r\nfunction addClass(element, value) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"Bad argument: The passed `element` argument is not a valid HTML Element\");\r\n    }\r\n\r\n    element.classList.add(...(Array.isArray(value) ? value : [value]));\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {string} value \r\n */\r\nfunction assign(element, key, value) {\r\n    element[key] = value;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n */\r\nfunction assignObject(element, key, value) {\r\n    Object.assign(element[key], value);\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n */\r\nfunction assignAttribute(element, key, value) {\r\n    element.setAttribute(key, value);\r\n}\r\n\r\nconst GLOBAL_ATTRIBUTES = \"accesskey,autocapitalize,class,dataset,editable,draggable,hidden,id,inputmode,lang,html,style,tabindex,text,title\";\r\n\r\nconst AttributeHandler = {\r\n    // Global attributes\r\n    accesskey: [assign, 'accessKey'],\r\n    autocapitalize: [assign, 'autocapitalize'],\r\n    class: [addClass],\r\n    dataset: [assignObject, 'dataset'],\r\n    draggable: [assign, 'draggable'],\r\n    editable: [assign, 'contentEditable'],\r\n    hidden: [assign, 'hidden'],\r\n    id: [assign, 'id'],\r\n    inputmode: [assign, 'inputMode'],\r\n    lang: [assign, 'lang'],\r\n    html: [assign, 'innerHTML'],\r\n    style: [assign, 'style'],\r\n    tabindex: [assign, 'tabIndex'],\r\n    text: [assign, 'textContent'],\r\n    title: [assign, 'title'],\r\n    // Object attributes\r\n    data: [assign, 'data'],\r\n    // Quote attributes\r\n    cite: [assign, 'cite'],\r\n    // Anchor attributes\r\n    download: [assign, 'download'],\r\n    ping: [assign, 'ping'],\r\n    target: [assign, 'target'],\r\n    // Area attributes\r\n    coords: [assign, 'coords'],\r\n    shape: [assign, 'shape'],\r\n    // Audio/Video attributes\r\n    autoplay: [assign, 'autoplay'],\r\n    buffered: [assign, 'buffered'],\r\n    controls: [assign, 'controls'],\r\n    loop: [assign, 'loop'],\r\n    muted: [assign, 'muted'],\r\n    playsinline: [assignAttribute, 'playsinline'],\r\n    poster: [assign, 'poster'],\r\n    preload: [assign, 'preload'],\r\n    // Image attributes\r\n    crossorigin: [assign, 'crossOrigin'],\r\n    decoding: [assign, 'decoding'],\r\n    height: [assign, 'height'],\r\n    ismap: [assign, 'isMap'],\r\n    loading: [assign, 'loading'],\r\n    srcset: [assign, 'srcset'],\r\n    width: [assign, 'width'],\r\n    // Link attributes\r\n    alt: [assign, 'alt'],\r\n    as: [assign, 'as'],\r\n    media: [assign, 'media'],\r\n    rel: [assign, 'rel'],\r\n    src: [assign, 'src'],\r\n    sizes: [assign, 'sizes'],\r\n    // List attributes\r\n    reversed: [assign, 'reversed'],\r\n    start: [assign, 'start'],\r\n    // Form attributes\r\n    accept: [assign, 'accept'],\r\n    \"accept-charset\": [assign, 'acceptCharset'],\r\n    action: [assign, 'action'],\r\n    autocomplete: [assign, 'autocomplete'],\r\n    autofocus: [assign, 'autofocus'],\r\n    capture: [assign, 'capture'],\r\n    checked: [assign, 'checked'],\r\n    cols: [assign, 'cols'],\r\n    disabled: [assign, 'disabled'],\r\n    dirname: [assign, 'dirName'],\r\n    enctype: [assign, 'enctype'],\r\n    for: [assign, 'for'],\r\n    form: [assign, 'form'],\r\n    formaction: [assign, 'formAction'],\r\n    formenctype: [assign, 'formEnctype'],\r\n    formmethod: [assign, 'formMethod'],\r\n    formnovalidate: [assign, 'formNoValidate'],\r\n    formtarget: [assign, 'formTarget'],\r\n    high: [assign, 'high'],\r\n    label: [assign, 'label'],\r\n    list: [assign, 'list'],\r\n    low: [assign, 'low'],\r\n    max: [assign, 'max'],\r\n    maxlength: [assign, 'maxLength'],\r\n    method: [assign, 'method'],\r\n    min: [assign, 'min'],\r\n    minlength: [assign, 'minLength'],\r\n    multiple: [assign, 'multiple'],\r\n    name: [assign, 'name'],\r\n    novalidate: [assign, 'noValidate'],\r\n    optimum: [assign, 'optimum'],\r\n    pattern: [assign, 'pattern'],\r\n    placeholder: [assign, 'placeholder'],\r\n    readonly: [assign, 'readOnly'],\r\n    required: [assign, 'required'],\r\n    rows: [assign, 'rows'],\r\n    selected: [assign, 'selected'],\r\n    size: [assign, 'size'],\r\n    spellcheck: [assignAttribute, 'spellcheck'],\r\n    step: [assign, 'step'],\r\n    wrap: [assign, 'wrap'],\r\n    // Track attributes\r\n    default: [assign, 'default'],\r\n    kind: [assign, 'kind'],\r\n    srclang: [assign, 'srclang'],\r\n    // Table attributes\r\n    abbr: [assign, 'abbr'],\r\n    colspan: [assign, 'colSpan'],\r\n    span: [assign, 'span'],\r\n    rowspan: [assign, 'rowSpan'],\r\n    scope: [assign, 'scope'],\r\n    // Mix attributes\r\n    href: [assign, 'href'],\r\n    hreflang: [assign, 'hreflang'],\r\n    datetime: [assign, 'dateTime'],\r\n    type: [assign, 'type'],\r\n    value: [assign, 'value'],\r\n    usemap: [assign, 'useMap'],\r\n};\r\n\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute, validAttributes = \"\") {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"Bad argument: The given element argument is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isObject(attribute)) {\r\n        return element;\r\n    }\r\n\r\n    const isValid = (key) => GLOBAL_ATTRIBUTES.includes(key) || validAttributes.includes(key);\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        if (isValid(key)) {\r\n            let value = attribute[key];\r\n            let args = AttributeHandler[key].slice(0);\r\n            let fn = args.shift();\r\n            fn(element, ...args, value);\r\n        }\r\n    }\r\n\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {string} value option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, value) {\r\n    if (!isHTMLElement(select, \"select\")) {\r\n        throw new Error(\"Bad argument: The given select argument is not a valid HTML Select element\");\r\n    }\r\n\r\n    if (isNullOrUndefined(value)) {\r\n        throw new Error(\"The given value parameter is a null or undefined\");\r\n    }\r\n\r\n    var options = select.options;\r\n    for (let i = 0; i < options.length; i++) {\r\n        let option = options[i];\r\n\r\n        if (option.value === value.toString()) {\r\n            option.selected = true;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { isNullOrUndefined, isFunction, isObject, valOrDefault } from \"@std/index.js\";\r\nimport { isHTMLElement } from \"./dom-parse.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n\r\n/**\r\n * Creates an empty element with attributes\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {object} [_attributes] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createEmptyElement(tagName, _validAttributes, _attributes) {\r\n    var element = document.createElement(tagName);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (isObject(_attributes)) {\r\n        addAttributes(element, _attributes, valOrDefault(_validAttributes, \"\"));\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates an element with attributes and content\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {Function} [contentResolver] \r\n * @param {object} [_attributes] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_content] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createElement(tagName, _validAttributes, _attributes, _content) {\r\n    var element = createEmptyElement(tagName, _validAttributes, _attributes);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isNullOrUndefined(_content)) {\r\n        addContent(element, _content);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates an element with attributes and content\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {Function} [contentResolver] \r\n * @param {object} [_attributes] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_content] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createElementX(tagName, _validAttributes, contentResolver, _attributes, _content) {\r\n    var element = createEmptyElement(tagName, _validAttributes, _attributes);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isNullOrUndefined(_content)) {\r\n        addContent(element, _content, contentResolver);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n// TODO: createMeta\r\n\r\n// TODO: createScript\r\n\r\n// TODO: createStyle\r\n\r\n// TODO: createTitle\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment(_children) {\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(fragment, _children);\r\n    }\r\n\r\n    return fragment;\r\n}\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport const createLink = createEmptyElement.bind(null, \"link\", \"as,crossorigin,disabled,href,hreflang,media,rel,sizes,type\");\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = createElement.bind(null, \"template\", \"\");\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = createElement.bind(null, \"header\", \"\");\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = createElement.bind(null, \"footer\", \"\");\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = createElement.bind(null, \"main\", \"\");\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = createElement.bind(null, \"article\", \"\");\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = createElement.bind(null, \"section\", \"\");\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = createElement.bind(null, \"nav\", \"\");\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = createElement.bind(null, \"aside\", \"\");\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = createElement.bind(null, \"h1\", \"\");\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = createElement.bind(null, \"h2\", \"\");\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = createElement.bind(null, \"h3\", \"\");\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = createElement.bind(null, \"h4\", \"\");\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = createElement.bind(null, \"h5\", \"\");\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = createElement.bind(null, \"h6\", \"\");\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = createElement.bind(null, \"div\", \"\");\r\n\r\n/**\r\n * Creates a `<object>` element with some attributes\r\n * @function createObject\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLObjectElement}\r\n * @memberof DOM\r\n */\r\nexport const createObject = createElement.bind(null, \"object\", \"data,height,name,type,usemap,width\");\r\n\r\n/**\r\n * Creates a `<embed>` element with some attributes\r\n * @function createEmbed\r\n * @param {object} _attribute \r\n * @returns {HTMLEmbedElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmbed = createEmptyElement.bind(null, \"embed\", \"height,src,type,width\");\r\n\r\n/**\r\n * Creates a `<br>` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @returns {HTMLBRElement}\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = createEmptyElement.bind(null, \"br\", \"\");\r\n\r\n/**\r\n * Creates a `<hr>` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @returns {HTMLHRElement}\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = createEmptyElement.bind(null, \"hr\", \"\");\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = createElement.bind(null, \"p\", \"\");\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function createBlockQuotation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createBlockQuotation = createElement.bind(null, \"blockquote\", \"cite\");\r\n\r\nconst listItemResolver = (item) => isHTMLElement(item, \"li\") ? item : createListItem(null, item);\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = createElementX.bind(null, \"ul\", \"\", listItemResolver);\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = createElementX.bind(null, \"ol\", \"reversed,start,type\", listItemResolver);\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = createElement.bind(null, \"li\", \"value\");\r\n\r\n\r\n// const descriptionContentResolver = (item) => isHTMLElement(item, [\"dt\", \"dd\"]) ? item : createListItem(null, item);\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = createElement.bind(null, \"dl\", \"\");\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = createElement.bind(null, \"dt\", \"\");\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = createElement.bind(null, \"dd\", \"\");\r\n\r\n// Inline Element\r\n//-----------------------------------------------------------------------------\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @function createAnchor\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport const createAnchor = createElement.bind(null, \"a\", \"download,href,hreflang,ping,rel,target,type\");\r\n\r\n/**\r\n * Creates an `<area>` element with some attributes\r\n * @function createArea\r\n * @param {object} _attribute \r\n * @returns {HTMLAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createArea = createEmptyElement.bind(null, \"area\", \"alt,coords,download,href,hreflang,media,ping,rel,shape,target\");\r\n\r\n/**\r\n * Creates an `<base>` element with some attributes\r\n * @function createBase\r\n * @param {object} _attribute \r\n * @returns {HTMLBaseElement}\r\n * @memberof DOM\r\n */\r\nexport const createBase = createEmptyElement.bind(null, \"base\", \"href,target\");\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @function createImage\r\n  * @param {object} _attribute \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport const createImage = createEmptyElement.bind(null, \"img\", \"alt,crossorigin,decoding,height,ismap,loading,sizes,src,srcset,usemap,width\");\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @function createAudio\r\n  * @param {object} _attribute\r\n  * @param {Text|HTMLElement|HTMLElement[]} _children\r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport const createAudio = createElement.bind(null, \"audio\", \"autoplay,controls,crossorigin,loop,muted,preload,src\");\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @function createVideo\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport const createVideo = createElement.bind(null, \"video\", \"autoplay,controls,crossorigin,height,loop,muted,playsinline,poster,preload,src,width\");\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = createEmptyElement.bind(null, \"source\", \"media,sizes,src,srcset,type\");\r\n\r\n/**\r\n * Creates a `<track>` element with some attributes\r\n * @function createTrack\r\n * @param {object} _attribute \r\n * @returns {HTMLTrackElement}\r\n * @memberof DOM\r\n */\r\nexport const createTrack = createEmptyElement.bind(null, \"track\", \"default,kind,label,src,srclang\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = createElement.bind(null, \"picture\", \"\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = createElement.bind(null, \"figure\", \"\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = createElement.bind(null, \"figcaption\", \"\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = createElement.bind(null, \"span\", \"\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = createElement.bind(null, \"strong\", \"\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = createElement.bind(null, \"em\", \"\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = createElement.bind(null, \"mark\", \"\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = createElement.bind(null, \"samp\", \"\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = createElement.bind(null, \"sub\", \"\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = createElement.bind(null, \"sup\", \"\");\r\n\r\n/**\r\n * Creates a `<del>` element with some attributes\r\n * @function createDeletedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createDeletedPart = createElement.bind(null, \"del\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<ins>` element with some attributes\r\n * @function createInsertedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createInsertedPart = createElement.bind(null, \"ins\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createQuote = createElement.bind(null, \"q\", \"cite\");\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = createElement.bind(null, \"abbr\", \"\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = createElement.bind(null, \"b\", \"\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = createElement.bind(null, \"i\", \"\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = createElement.bind(null, \"s\", \"\");\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = createElement.bind(null, \"u\", \"\");\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = createElement.bind(null, \"cite\", \"\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @function createTime\r\n * @param {object} _attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport const createTime = createElement.bind(null, \"time\", \"datetime\");\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = createElement.bind(null, \"code\", \"\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFormElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = createElement.bind(null, \"form\", \"accept-charset,action,autocomplete,enctype,method,name,novalidate,rel,target\");\r\n\r\nconst inputTypes = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createEmptyElement.bind(null, \"input\", \"accept,alt,autocomplete,autofocus,capture,checked,dirname,disabled,height,max,maxlength,minlength,min,multiple,name,pattern,placeholder,readonly,required,size,src,step,type,value,width\");\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = createElement.bind(null, \"textarea\", \"autocomplete,autofocus,cols,disabled,maxlength,minlength,name,placeholder,readonly,required,rows,spellcheck,value,wrap\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = createElement.bind(null, \"label\", \"for\");\r\n\r\n/**\r\n * Resolves a select element content\r\n * @param {*} item \r\n * @returns {HTMLOptionElement|HTMLOptGroupElement}\r\n */\r\nconst selectContentResolver = (item) => {\r\n    if (isHTMLElement(item, [\"option\", \"optgroup\"])) {\r\n        return item;\r\n    }\r\n\r\n    if (Array.isArray(item)) {\r\n        return createOptionGroup(null, item);\r\n    }\r\n\r\n    return createOption(null, item);\r\n};\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSelectElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = createElementX.bind(null, 'select', \"autocomplete,autofocus,disabled,multiple,name,required,size\", selectContentResolver);\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = createElement.bind(null, \"option\", \"disabled,label,selected,value\");\r\n\r\nconst optiongroupContentResolver = (item) => isHTMLElement(item, \"option\") ? item : createOption(null, item);\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptGroupElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = createElementX.bind(null, \"optgroup\", \"disabled,label\", optiongroupContentResolver);\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFieldSetElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = createElement.bind(null, \"fieldset\", \"disabled,name\");\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = createElement.bind(null, \"legend\", \"\");\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = createElementX.bind(null, \"datalist\", \"\", optiongroupContentResolver);\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = createElement.bind(null, \"meter\", \"high,low,max,min,optimum,value\");\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = createElement.bind(null, \"progress\", \"max,value\");\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = createElement.bind(null, \"output\", \"name,value\");\r\n\r\nconst buttonTypes = [\"button\", \"submit\", \"reset\"];\r\n\r\n/**\r\n * Creates a `<button>` element with optionally some attributes and children elements\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLButtonElement}\r\n * @memberof DOM\r\n */\r\nexport const createButton = createElement.bind(null, \"button\", \"autofocus,disabled,formaction,formenctype,formmethod,formnovalidate,formtarget,name,type,value\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = createElement.bind(null, \"table\", \"\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = createElement.bind(null, \"caption\", \"\");\r\n\r\nconst tablerowContentResolver = (item) => isHTMLElement(item, \"tr\") ? item : createTableRow(null, item);\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = createElementX.bind(null, \"thead\", \"\", tablerowContentResolver);\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = createElementX.bind(null, \"tbody\", \"\", tablerowContentResolver);\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = createElementX.bind(null, \"tfoot\", \"\", tablerowContentResolver);\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = createEmptyElement.bind(null, \"col\", \"span\");\r\n\r\nconst tablecolContentResolver = (item) => isHTMLElement(item, \"col\") ? item : null;\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = createElementX.bind(null, \"colgroup\", \"span\", tablecolContentResolver);\r\n\r\nconst tablecellContentResolver = (item) => isHTMLElement(item, [\"th\", \"td\"]) ? item : createTableCell(null, item);\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = createElementX.bind(null, \"tr\", \"\", tablecellContentResolver);\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = createElement.bind(null, \"th\", \"abbr,colspan,rowspan,scope\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = createElement.bind(null, \"td\", \"colspan,rowspan\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {Node} element element\r\n * @param {HTMLCollection} content children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, content, resolver) {\r\n    var children = Array.isArray(content) ? content : [content];\r\n\r\n    if (isFunction(resolver)) {\r\n        children = children.map(child => resolver(child));\r\n    }\r\n\r\n    appendChildren(element, children);\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@std/index.js';\r\nimport { isElement, isHTMLElement, isDocumentFragment } from './dom-parse.js';\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {string} dir sibling direction\r\n * @param {HTMLElement} element element\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(dir, element, pred) {\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    var sibling = element[dir];\r\n\r\n    if (isFunction(pred)) {\r\n        while (isElement(sibling) && !pred(sibling)) {\r\n            sibling = sibling[dir];\r\n        }\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @function getPreviousElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport const getPreviousElementSibling = getElementSibling.bind(null, \"previousElementSibling\");\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @function getNextElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport const getNextElementSibling = getElementSibling.bind(null, \"nextElementSibling\");\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {!Element} target \r\n * @param {!Function} pred Decides whether the target is found\r\n * @param {number} [_max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, pred, _max) {\r\n    if (!isElement(target)) {\r\n        throw new TypeError(\"Bad argument: The given target parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isFunction(pred)) {\r\n        throw new TypeError(\"Bad argument: The given pred parameter is not a valid Function\");\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n\r\n    if (_max > 0) {\r\n        return findAncestorIter(parent, pred, _max - 1);\r\n    }\r\n\r\n    return findAncestorInf(parent, pred);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, pred) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, pred);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} max Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, pred, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, pred, max - 1);\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isEmpty } from '@std/index.js';\r\n\r\n/**\r\n * Update class related to the action *move label down*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveDown = (label) => label.classList.add('down');\r\n\r\n/**\r\n * Update class related to the action *move label up*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveUp = (label) => label.classList.remove('down');\r\n\r\n/**\r\n * Update class related to the action *add focus to element*\r\n * @param {HTMLElement} element \r\n */\r\nconst addFocus = (element) => element.classList.add('focused');\r\n\r\n/**\r\n * Update class related to the action *remove focus from element*\r\n * @param {HTMLElement} element \r\n */\r\nconst removeFocus = (element) => element.classList.remove('focused');\r\n\r\n/**\r\n * Activate floating label in given scope\r\n * @param {HTMLElement} form \r\n */\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isHTMLElement(input)) {\r\n                if (isNullOrWhitespace(input.placeholder)) {\r\n                    bindEvents(input, label);\r\n                    if (isEmpty(input.value)) {\r\n                        moveDown(label);\r\n                    }\r\n                } else {\r\n                    console.warn(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Input \"${label.htmlFor}\" contains a placeholder`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n                }\r\n            } else {\r\n                console.error(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Missing input for label \"${label.htmlFor}\"`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                console.log(\"focus called\");\r\n                input.placeholder = \"\";\r\n                moveUp(label);\r\n                addFocus(label.parentElement);\r\n            });\r\n\r\n            input.addEventListener('blur', function (e) {\r\n                console.log(\"blur called\");\r\n                if (isEmpty(this.value)) {\r\n                    moveDown(label);\r\n                }\r\n                removeFocus(label.parentElement);\r\n            });\r\n            \r\n            input.addEventListener('input', function (e) {\r\n                console.log(\"input called\");\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        moveDown(label);\r\n                    } else {\r\n                        moveUp(label);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { isHTMLElement, getElements, getElement } from \"@dom/index.js\";\r\nimport { valOrDefault, isString, isNullOrUndefined, isNullOrWhitespace, isEmpty } from \"@std/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));\r\n\r\nexport function getComponentElement(container, pred, selector) {\r\n    if (isHTMLElement(container)) {\r\n        return pred(container) ? [container] : getElements(selector, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? null : getComponentElement(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(selector);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    \r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElements, isHTMLElement, isNodeList, createListItem } from '@dom/index.js';\r\nimport { getInput, getType } from \"../utils.js\";\r\nimport { BaseSelector, BaseSelectorItem } from './base-selector.js';\r\nimport { FormSelector, FormSelectorItem } from './form-selector.js';\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER: 'BAD_CONTAINER',\r\n    BAD_INPUT: 'BAD_INPUT'\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nexport const DOMQuerySelector = {\r\n    BaseSelector: createDomQuery(BaseSelector),\r\n    FormSelector: createDomQuery(FormSelector)\r\n};\r\n\r\nexport const Factory = {\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var itemContainers = getElements('[data-selector]', container);\r\n        if (!isNodeList(itemContainers)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var widget = null;\r\n        var items = null;\r\n        var type = getType(container);\r\n\r\n        switch (type) {\r\n            case 'selector':\r\n                items = createSelectorItem(itemContainers, type, false);\r\n                widget = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                items = createSelectorItem(itemContainers, type, true);\r\n                widget = Object.create(FormSelector);\r\n                break;\r\n        }\r\n\r\n        Object.assign(widget, options, {\r\n            container: container,\r\n            items: items,\r\n            querySelector: createDomQuery(widget),\r\n        });\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nfunction createSelectorItem(itemContainers, type, hasInput) {\r\n    var items = [];\r\n\r\n    var typeHandler = {\r\n        'selector': Object.create(BaseSelectorItem),\r\n        'form-selector': Object.create(FormSelectorItem),\r\n    };\r\n\r\n    for (let i = 0; i < itemContainers.length; i++) {\r\n        let itemContainer = itemContainers[i];\r\n        itemContainer.dataset.selectorIndex = i;\r\n\r\n        let args = {\r\n            container: itemContainer,\r\n            index: i\r\n        };\r\n\r\n        if (hasInput) {\r\n            let input = getInput('radio', itemContainer);\r\n            if (!isHTMLElement(input)) {\r\n                return ErrorCode.BAD_INPUT;\r\n            }\r\n            input.dataset.selectorIndex = i;\r\n            \r\n            Object.assign(args, { input: input });\r\n        }\r\n\r\n        let item = typeHandler[type]().init(args);\r\n\r\n        items.push(item);\r\n    }\r\n\r\n    return items;\r\n}","import { isFunction, isNullOrUndefined, isNull, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { check, uncheck, getState } from '../utils.js';\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nexport const BaseSelectorItem = {\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {number} */\r\n    index: null,\r\n    /** @returns {string} */\r\n    get value() { return this.container.dataset['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return getState(this.container) === Status.ON; },\r\n    /** @returns {boolean} */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n};\r\n\r\nexport const BaseSelector = {\r\n    name: 'selector',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.selectedItem.value;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n    init() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n            if (item.value === value) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            const target = event.target;\r\n            if (!hasOwn(target.dataset, 'selector')) {\r\n                return;\r\n            }\r\n            \r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            const item = this.items.find((i) => i.index === +valOrDefault(target.dataset.selectorIndex, -1));\r\n            if(isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, isNull, valOrDefault } from '@std/index.js';\r\nimport { check, uncheck, getState } from '../utils.js';\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nexport const FormSelectorItem = {\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLInputElement} */\r\n    input: null,\r\n    /** @type {number} */\r\n    index: null,\r\n    /** @returns {string} */\r\n    get value() { return this.input['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return this.input.checked; },\r\n    /**\r\n     * Set the state of the item\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} Value indicating the success of the operation\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            this.input.checked = true;\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            this.input.checked = false;\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n};\r\n\r\nexport const FormSelector = {\r\n    name: 'form-selector',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {FormSelectorItem[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.selectedItem.value;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n    init() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n            if (item.value === value) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('change', (event) => {\r\n            const target = event.target;            \r\n\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                target.checked = false;\r\n                this.items[this.selectedIndex].setChecked(true);\r\n                return;\r\n            }\r\n\r\n            const item = this.items.find((i) => i.index === +valOrDefault(target.dataset.selectorIndex, -1));\r\n            if(isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isNullOrUndefined, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { getComponentElement } from '../utils.js';\r\nimport { Factory, DOMQuerySelector } from \"./factory.js\";\r\n\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER: new Error(\"Missing container: A selector requires a container\"),\r\n    BAD_INPUT: new Error(\"Missing input: FormSelector requires an input in the container\"),\r\n};\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [DOMQuerySelector.BaseSelector, DOMQuerySelector.FormSelector].join(',');\r\n\r\nexport function Selector(container, _options) {\r\n    const selectorElements = getComponentElement(container, isSelector, domQuery);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(selectorElements)) {\r\n        return null;\r\n    }\r\n\r\n    var selectors = [];\r\n\r\n    for (let i = 0; i < selectorElements.length; i++) {\r\n        let selector = Factory.create(selectorElements[i], options);\r\n        if (hasOwn(ErrorHandler, selector)) {\r\n            throw ErrorHandler[selector];\r\n        }\r\n        selector.init();\r\n\r\n        selectors.push(selector);\r\n    }\r\n\r\n    return selectors;\r\n}\r\n\r\nexport const SelectorFactory = Factory; ","import { isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isNullOrUndefined, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { check, uncheck, getState, getType, getComponentElement, getInput } from \"./utils.js\";\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER: 'BAD_CONTAINER',\r\n    BAD_INPUT: 'BAD_INPUT'\r\n};\r\n\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER: new Error(\"Missing container: A switch requires a container\"),\r\n    BAD_INPUT: new Error(\"Missing input: FormSwitch requires an input in the container\"),\r\n};\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst SwitchFactory = {\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var widget = null;\r\n        var input = null;\r\n\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                input = getInput('checkbox', container);\r\n                if (!isHTMLElement(input)) {\r\n                    return ErrorCode.BAD_INPUT;\r\n                }\r\n                options.input = input;\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n\r\n        Object.assign(widget, options, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.container.dataset['value'];\r\n    },\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLInputElement} */\r\n    input: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.input.value;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        this.input.checked = isChecked;\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.input.checked) {\r\n            this.setChecked(true);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.input.addEventListener('change', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                this.input.checked = !this.input.checked;   // revert input checked state\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nexport function Switch(container, _options) {\r\n    const switcheElements = getComponentElement(container, isSwitch, domQuery);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(switcheElements)) {\r\n        return null;\r\n    }\r\n\r\n    var switches = [];\r\n\r\n    for (let i = 0; i < switcheElements.length; i++) {\r\n        let $switch = SwitchFactory.create(switcheElements[i], options);\r\n        if (hasOwn(ErrorHandler, $switch)) {\r\n            throw ErrorHandler[$switch];\r\n        }\r\n        $switch.init();\r\n\r\n        switches.push($switch);\r\n    }\r\n\r\n    return switches;\r\n}","/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) { element.style.display = \"block\"; }\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) { element.style.display = \"none\"; }","import { getElement, getElements, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isNullOrUndefined, isFunction, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { show, hide } from './utils.js';\r\nimport { getComponentElement } from './form/utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER_COLLAPSIBLE: 'BAD_CONTAINER_COLLAPSIBLE',\r\n    BAD_CONTAINER_ACCORDION: 'BAD_CONTAINER_ACCORDION',\r\n};\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER_COLLAPSIBLE: new Error(\"Missing container: A collapsible requires a container\"),\r\n    BAD_CONTAINER_ACCORDION: new Error(\"Missing container: An accordion requires a container\"),\r\n};\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    /** @returns {CollapsibleFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_COLLAPSIBLE;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    name: 'collapsible',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement} */\r\n    header: null,\r\n    /** @type {HTMLElement} */\r\n    content: null,\r\n    /** @type {Function} */\r\n    beforeOpen: null,\r\n    /** @type {Function} */\r\n    afterOpen: null,\r\n    /** @type {Function} */\r\n    beforeClose: null,\r\n    /** @type {Function} */\r\n    afterClose: null,\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    /** Verifies that the container is collapsed (closed) */\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    /** Verifies that the container is expanded (open) */\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    isClosed: false,\r\n    isInitialized: false,\r\n    /** Opens the container and calls the defined pre/post operations */\r\n    open() {\r\n        if (this.isInitialized && !this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeOpen)) {\r\n            halt = this.beforeOpen(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(show, State.OPEN, 'add');\r\n\r\n        if (isFunction(this.afterOpen)) {\r\n            this.afterOpen(this);\r\n        }\r\n\r\n        this.isClosed = false;\r\n\r\n        return this;\r\n    },\r\n    /** Closes the container and calls the defined pre/post operations */\r\n    close() {\r\n        if (this.isInitialized && this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeClose)) {\r\n            halt = this.beforeClose(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(hide, State.CLOSED, 'remove');\r\n\r\n        if (isFunction(this.afterClose)) {\r\n            this.afterClose(this);\r\n        }\r\n\r\n        this.isClosed = true;\r\n\r\n        return this;\r\n    },\r\n    toggle(displayCb, state, action) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        this.container.classList[action]('expanded');\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        this.header = getElement(`[data-${this.name}-header]`, this.container);\r\n        this.content = getElement(`[data-${this.name}-content]`, this.container);\r\n\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.isClosed = true;\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n\r\n        this.isInitialized = true;\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.isCollapsed()) {\r\n                    this.open();\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    /** @returns {AccordionFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_ACCORDION;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {CollapsibleFactory[]} */\r\n    sections: null,\r\n    /** @type {CollapsibleFactory} */\r\n    selectedSection: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    init() {\r\n        this.sections = [];\r\n\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let element = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create(element, {\r\n                name: 'accordion',\r\n                index: i,\r\n                afterOpen: (selected) => {\r\n                    if (isFunction(this.beforeChange)) {\r\n                        this.beforeChange(selected);\r\n                    }\r\n\r\n                    this.sections.filter((section) => section.index !== selected.index)\r\n                        .forEach((other) => other.close());\r\n\r\n                    if (isFunction(this.afterChange)) {\r\n                        this.afterChange(selected);\r\n                    }\r\n\r\n                    this.selectedSection = selected;\r\n                }\r\n            });\r\n            if (hasOwn(ErrorCode, collapsible)) {\r\n                return collapsible;\r\n            }\r\n            this.sections.push(collapsible);\r\n            collapsible.init();\r\n        }\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\n/**\r\n * Makes a container collapsible\r\n * @param {!HTMLElement} container \r\n * @param {Object} [options]\r\n */\r\nexport function Collapsible(container, _options) {\r\n    var collapsibleElements = getComponentElement(container, isCollapsible, '[data-collapsible]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(collapsibleElements)) {\r\n        return null;\r\n    }\r\n\r\n    var collapsibles = [];\r\n\r\n    for (let i = 0; i < collapsibleElements.length; i++) {\r\n        let collapsible = CollapsibleFactory.create(collapsibleElements[i], options);\r\n        if (hasOwn(ErrorHandler, collapsible)) {\r\n            throw ErrorHandler[collapsible];\r\n        }\r\n        collapsible.init();\r\n\r\n        collapsibles.push(collapsible);\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Transforms a container into an accordion\r\n * @param {!HTMLElement} container \r\n * @param {Object} [_options]\r\n */\r\nexport function Accordion(container, _options) {\r\n    var accordionElements = getComponentElement(container, isAccordion, '[data-boost=accordion]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(accordionElements)) {\r\n        return null;\r\n    }\r\n\r\n    var accordions = [];\r\n\r\n    for (let i = 0; i < accordionElements.length; i++) {\r\n        let accordion = AccordionFactory.create(accordionElements[i], options);\r\n        if (hasOwn(ErrorHandler, accordion)) {\r\n            throw ErrorHandler[accordion];\r\n        }\r\n        accordion.init();\r\n        accordions.push(accordion);\r\n    }\r\n\r\n    return accordions;\r\n}\r\n","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\n\r\n/**\r\n * Add a counter to an input element\r\n * @param {HTMLElement} container \r\n */\r\nexport function inputCounter(container) {\r\n    const counters = getElements('[data-counter]', container);\r\n\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let ref = counter.dataset['counter'];\r\n        let input = getElement(`#${ref}`);\r\n        if (isHTMLElement(input)) {\r\n            counter.dataset['counterMax'] = input.maxLength;\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            bindEvents(input, counter);\r\n        } else {\r\n            console.error(`%c@zenkai%c #InputCounter>%cinputCounter:%c Failed to add counter ${ref}. Input (referenced) was not found.`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLElement} counter \r\n     */\r\n    function bindEvents(input, counter) {\r\n        input.addEventListener('input', function (e) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n        });\r\n    }\r\n\r\n    return counters;\r\n}"],"names":["valOrDefault","arg","value","isUndefined","isNullOrUndefined","isEmpty","obj","isIterable","length","isString","String","isFunction","isObject","_typeof","Symbol","iterator","isCollection","isNull","isNullOrWhitespace","test","hasOwn","key","hasOwnProperty","call","Object","prototype","pascalCase","str","ccString","replace","trim","toLowerCase","s","toUpperCase","isElementNode","nodeType","Node","ELEMENT_NODE","isElement","Element","isNode","isHTMLElement","kind","HTMLElement","element","Array","isArray","some","name","type","tag","interfaceName","TagNameMapping","window","tagName","includes","isHTMLCollection","HTMLCollection","isDocumentFragment","DOCUMENT_FRAGMENT_NODE","DocumentFragment","_htmlToElement","prop","html","template","document","createElement","innerHTML","content","bind","appendChildren","parent","children","TypeError","fragment","createDocumentFragment","from","forEach","appendChild","toString","createTextNode","assign","assignAttribute","setAttribute","GLOBAL_ATTRIBUTES","AttributeHandler","accesskey","autocapitalize","Error","classList","add","dataset","draggable","editable","hidden","id","inputmode","lang","style","tabindex","text","title","data","cite","download","ping","target","coords","shape","autoplay","buffered","controls","loop","muted","playsinline","poster","preload","crossorigin","decoding","height","ismap","loading","srcset","width","alt","as","media","rel","src","sizes","reversed","start","accept","action","autocomplete","autofocus","capture","checked","cols","disabled","dirname","enctype","form","formaction","formenctype","formmethod","formnovalidate","formtarget","high","label","list","low","max","maxlength","method","min","minlength","multiple","novalidate","optimum","pattern","placeholder","readonly","required","rows","selected","size","spellcheck","step","wrap","srclang","abbr","colspan","span","rowspan","scope","href","hreflang","datetime","usemap","createEmptyElement","_validAttributes","_attributes","attribute","validAttributes","keys","args","slice","shift","addAttributes","_content","addContent","createElementX","contentResolver","listItemResolver","item","createListItem","optiongroupContentResolver","createOption","tablerowContentResolver","createTableRow","createOptionGroup","createTableCell","resolver","map","child","isClassSelector","selector","isIdSelector","getElement","_container","container","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","getElementSibling","dir","pred","sibling","findAncestor","_max","parentElement","findAncestorIter","findAncestorInf","moveDown","moveUp","remove","getType","getState","setState","check","uncheck","getComponentElement","getInput","htmlFor","createDomQuery","Status","BaseSelectorItem","init","this","isChecked","index","setChecked","BaseSelector","items","selectedIndex","selectedItem","beforeChange","afterChange","setSelectedItem","defaultItem","i","bindEvents","addEventListener","event","halt","_this","find","selectorIndex","FormSelectorItem","input","FormSelector","ErrorCode","DOMQuerySelector","Factory","create","options","itemContainers","NodeList","widget","createSelectorItem","hasInput","typeHandler","itemContainer","push","isSelector","RegExp","ErrorHandler","BAD_CONTAINER","BAD_INPUT","domQuery","join","isSwitch","SelectorFactory","SwitchFactory","BaseSwitch","FormSwitch","toggle","_this2","show","display","hide","isCollapsible","el","isAccordion","BAD_CONTAINER_COLLAPSIBLE","BAD_CONTAINER_ACCORDION","State","CollapsibleFactory","instance","header","beforeOpen","afterOpen","beforeClose","afterClose","val","isCollapsed","isExpanded","isClosed","isInitialized","open","close","displayCb","state","e","targetCollapsible","parentNode","AccordionFactory","sections","selectedSection","accordionElements","collapsible","filter","section","other","_options","accordions","accordion","collapsibleElements","collapsibles","selectorElements","selectors","switcheElements","switches","$switch","labels","console","warn","error","log","activeElement","counters","counter","ref","maxLength"],"mappings":"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"}