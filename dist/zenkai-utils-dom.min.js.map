{"version":3,"file":"zenkai-utils-dom.min.js","sources":["../src/utils/datatype/type-manip.js","../src/utils/dom/dom-manip.js","../src/utils/datatype/type-string.js","../src/utils/dom/dom-effects.js","../src/utils/dom/dom-create.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} isNullable indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n    \r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Determines whether the value is an *integer*\r\n * @param {*} value Tested value\r\n * @returns {boolean}  A value indicating whether or not the given value is an *integer*.\r\n * @memberof TYPE\r\n */\r\nexport function isInt(value) { \r\n    return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && value % 1 === 0; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(val) { return (Array.isArray(val) || isString(val)) && val.length === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) { return !isNull(value) && typeof value === 'object'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { return value === null; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { return typeof value === 'undefined'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { return isNull(value) || isUndefined(value); }","ï»¿import { valOrDefault, isNullOrUndefined } from './../datatype/type-manip.js';\r\nimport { isNullOrWhitespace } from './../datatype/type-string.js';\r\n\r\nconst isClassName = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [el] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, el) {\r\n    el = valOrDefault(el, document);\r\n\r\n    if (el instanceof DocumentFragment) {\r\n        el.querySelector(selector);\r\n    }\r\n\r\n    if (/^#[a-zA-Z0-9_-]+$/.test(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n    if (isClassName(selector)) {\r\n        return el.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return el.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [el] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, el) {\r\n    el = valOrDefault(el, document);\r\n\r\n    if (el instanceof DocumentFragment) {\r\n        el.querySelectorAll(selector);\r\n    }\r\n\r\n    return isClassName(selector) ?\r\n        el.getElementsByClassName(selector.substring(1)) :\r\n        el.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [el] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, el) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, el) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el) { return getElementSibling(el, \"previousElementSibling\"); }\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el) { return getElementSibling(el, \"nextElementSibling\"); }\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, el) { target.insertAdjacentElement('beforebegin', el); }\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, el) { target.insertAdjacentElement('afterend', el); }\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, el) { target.insertAdjacentElement('afterbegin', el); }\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(e, c) {\r\n    return e.className.split(\" \").indexOf(c) !== -1;\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} e element\r\n * @param {string|Array} c class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(e, c) {\r\n    if (Array.isArray(c)) {\r\n        c.forEach((val) => _removeClass(e, val));\r\n    }\r\n\r\n    _removeClass(e, c);\r\n}\r\n\r\nfunction _removeClass(e, c) {\r\n    if (hasClass(e, c)) {\r\n        e.className = e.className.replace(c, '');\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} el Element\r\n * @param {string} c classes\r\n * @memberof DOM\r\n */\r\nexport function addClass(el, c) {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.map(function (c) { return valOrDefault(c.class, c); }).join(' ');\r\n    }\r\n\r\n    var strClass = valOrDefault(c.class, c);\r\n    if (isNullOrWhitespace(el.className)) {\r\n        el.className = strClass;\r\n    }\r\n    else if (!hasClass(el, c)) {\r\n        el.className += \" \" + strClass;\r\n    }\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} el \r\n * @param {string} c ClassName\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(el, c) {\r\n    if (hasClass(el, c)) {\r\n        removeClass(el, c);\r\n    } else {\r\n        addClass(el, c);\r\n    }\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {Node} node \r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @memberof DOM\r\n */\r\nexport function getElementSibling(el, dir) {\r\n    var sibling = el[dir];\r\n\r\n    while (sibling && hasClass(sibling, \"autocomplete\")) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof Element;\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport function isHTMLElement(obj) {\r\n    return isNullOrUndefined(obj) ? false : obj.nodeType === 1 && obj instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n */\r\nexport function copytoClipboard(value) {\r\n    var el = document.createElement('textarea');\r\n    el.value = isHTMLElement(value) ? value.textContent : value;\r\n    el.readOnly = true;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    el.remove();\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {*} callback \r\n * @param {number} max \r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}\r\n\r\nfunction stickyHeader(header, target) {\r\n    const css_sticky = 'sticky';\r\n    var sticky = target.offsetTop + target.clientHeight;\r\n    var timeout;\r\n    window.addEventListener('scroll', function (e) {\r\n        if (timeout) window.cancelAnimationFrame(timeout);\r\n        timeout = window.requestAnimationFrame(function () {\r\n            if (window.pageYOffset >= sticky)\r\n                addClass(header, css_sticky);\r\n            else\r\n                removeClass(header, css_sticky);\r\n        });\r\n    }, false);\r\n}","import { isString } from \"./type-manip.js\";\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.replace(/\\b\\w/g, function (s) { return s.toUpperCase(); });\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {*} str string\r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    \r\n    return str.replace(/[Ã Ã¢Ã¤Ã¦]/gi, 'a')\r\n        .replace(/[Ã§]/gi, 'c')\r\n        .replace(/[Ã©Ã¨Ãª]/gi, 'e')\r\n        .replace(/[Ã®Ã¯]/gi, 'i')\r\n        .replace(/[Ã´Å]/gi, 'o')\r\n        .replace(/[Ã¹Ã»Ã¼]/gi, 'u');\r\n}","import { removeClass, addClass } from './dom-manip.js';\r\n\r\nconst Elements = ['BUTTON', 'COMMAND', 'FIELDSET', 'INPUT', 'KEYGEN', 'OPTGROUP', 'OPTION', 'SELECT', 'TEXTAREA'];\r\n\r\n/** \r\n * @enum \r\n * @ignore\r\n * @memberof DOM\r\n */\r\nconst UI = {\r\n    COLLAPSE: 'collapse',\r\n    CHECKED: 'checked',\r\n    DISABLED: 'disabled',\r\n    EMPTY: 'empty',\r\n    HIDDEN: 'hidden',\r\n    SELECTED: 'selected',\r\n};\r\n\r\n/**\r\n * Shows an element\r\n * @param {Element} el Element\r\n * @memberof DOM\r\n */\r\nexport function show(el) { removeClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Hides an element\r\n * @param {Element} el element\r\n * @memberof DOM\r\n */\r\nexport function hide(el) { addClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(el) { return Object.assign(el, { position: 'absolute', top: '-9999px', left: '-9999px' }); }\r\n\r\n/**\r\n * Applies highlighting style to an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function highlight(el) { addClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Removes highlighting style of an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function unhighlight(el) { removeClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Enable an element\r\n * @param {HTMLElement} el Element\r\n * @memberof DOM\r\n */\r\nexport function enable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val === false;\r\n    }\r\n\r\n    el.dataset.disabled = val === false;\r\n}\r\n\r\n/**\r\n * Disable an element\r\n * @param {HTMLElement} el \r\n * @memberof DOM\r\n */\r\nexport function disable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val !== false;\r\n    }\r\n\r\n    el.dataset.disabled = val !== false;\r\n}","import { disable } from './dom-effects.js';\r\nimport { isString } from '@utils/datatype/type-manip.js';\r\n\r\nconst create = (tagName) => document.createElement(tagName);\r\n\r\nconst addClass = (el, c) => {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.join(' ');\r\n    }\r\n    if (isString(c)) {\r\n        el.className = c;\r\n    }\r\n};\r\n\r\n/**\r\n * Creates the element for the specified tagName\r\n * @param {string} tagName element\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function createElement(tagName, eId, eClass) {\r\n    var el = document.createElement(tagName);\r\n    if (eId) {\r\n        el.id = eId;\r\n    }\r\n    if (eClass) {\r\n        addClass(el, eClass);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment() { return document.createDocumentFragment(); }\r\n\r\nexport function createTextNode(str) { return document.createTextNode(str); }\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} rel \r\n * @param {string} href \r\n * @param {object} attr \r\n * @memberof DOM\r\n */\r\nexport function createLink(rel, href, attr) {\r\n    var link = create(\"link\");\r\n    link.rel = rel;\r\n    link.href = href;\r\n\r\n    if (attr) {\r\n        addAttributes(link, attr);\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n\r\nexport function createHeader(attr) {\r\n    var header = create('header');\r\n\r\n    if (attr) {\r\n        addAttributes(header, attr);\r\n    }\r\n\r\n    return header;\r\n}\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport function createDiv(attr, children) {\r\n    var div = create(\"div\");\r\n\r\n    if (attr) {\r\n        addAttributes(div, attr);\r\n    }\r\n    if (children) {\r\n        addChildren(div, children);\r\n    }\r\n\r\n    return div;\r\n}\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function createAside(attr) {\r\n    var aside = create('aside');\r\n\r\n    if (attr) {\r\n        addAttributes(aside, attr);\r\n    }\r\n\r\n    return aside;\r\n}\r\n\r\nexport function createLineBreak() { return create('br'); }\r\n\r\n/**\r\n * Creates a `<h[1..6]>` (heading) element with some attributes\r\n * @param {string} lvl Level\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport function createHeading(lvl, attr) {\r\n    var h = create(lvl);\r\n\r\n    if (attr) {\r\n        addAttributes(h, attr);\r\n    }\r\n\r\n    return h;\r\n}\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport function createP(attr) {\r\n    var p = create(\"p\");\r\n\r\n    if (attr) {\r\n        addAttributes(p, attr);\r\n    }\r\n\r\n    return p;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport function createUl(attr) {\r\n    var ul = create(\"ul\");\r\n\r\n    if (attr) {\r\n        addAttributes(ul, attr);\r\n    }\r\n\r\n    return ul;\r\n}\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createLi(attr, el) {\r\n    var li = create('li');\r\n\r\n    if (attr) {\r\n        addAttributes(li, attr);\r\n    }\r\n\r\n    if (el) {\r\n        addChildren(li, el);\r\n    }\r\n\r\n    return li;\r\n}\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, attr) {\r\n    var a = create('a');\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n    if (attr) {\r\n        addAttributes(a, attr);\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, attr) {\r\n    var img = create('img');\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n    if (attr) {\r\n        addAttributes(img, attr);\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createSpan(attr) {\r\n    var span = create(\"span\");\r\n\r\n    if (attr) {\r\n        addAttributes(span, attr);\r\n    }\r\n\r\n    return span;\r\n}\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createStrong(attr) {\r\n    var strong = create(\"strong\");\r\n\r\n    if (attr) {\r\n        addAttributes(strong, attr);\r\n    }\r\n\r\n    return strong;\r\n}\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createEm(attr) {\r\n    var em = create(\"em\");\r\n\r\n    if (attr) {\r\n        addAttributes(em, attr);\r\n    }\r\n\r\n    return em;\r\n}\r\n\r\n// Form Element\r\n\r\n/**\r\n * Creates a `<input>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport function createInput(attr) {\r\n    var input = create('input');\r\n\r\n    if (attr) {\r\n        addAttributes(input, attr);\r\n    }\r\n\r\n    return input;\r\n}\r\n\r\n[\"checkbox\", \"hidden\", \"file\"].forEach(function (type) {\r\n    createInput[type] = function (attr) {\r\n        var input = createInput(attr);\r\n        input.type = type;\r\n        return input;\r\n    };\r\n});\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport function createLabel(attr) {\r\n    var label = create('label');\r\n\r\n    if (attr) {\r\n        addAttributes(label, attr);\r\n    }\r\n\r\n    return label;\r\n}\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport function createTextArea(attr) {\r\n    var textArea = create('textarea');\r\n\r\n    if (attr) {\r\n        addAttributes(textArea, attr);\r\n    }\r\n\r\n    return textArea;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createButton(attr) {\r\n    var btn = create(\"button\");\r\n    btn.type = \"button\";\r\n\r\n    if (attr) {\r\n        addAttributes(btn, attr);\r\n    }\r\n\r\n    return btn;\r\n}\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTable(attr) {\r\n    var table = create(\"table\");\r\n\r\n    if (attr) {\r\n        addAttributes(table, attr);\r\n    }\r\n\r\n    return table;\r\n}\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableHeader(attr) {\r\n    var thead = create(\"thead\");\r\n\r\n    if (attr) {\r\n        addAttributes(thead, attr);\r\n    }\r\n\r\n    return thead;\r\n}\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableBody(attr) {\r\n    var tbody = create(\"tbody\");\r\n\r\n    if (attr) {\r\n        addAttributes(tbody, attr);\r\n    }\r\n\r\n    return tbody;\r\n}\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableFooter(attr) {\r\n    var tfoot = create(\"tfoot\");\r\n\r\n    if (attr) {\r\n        addAttributes(tfoot, attr);\r\n    }\r\n\r\n    return tfoot;\r\n}\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableRow(attr) {\r\n    var tr = create(\"tr\");\r\n\r\n    if (attr) {\r\n        addAttributes(tr, attr);\r\n    }\r\n\r\n    return tr;\r\n}\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableHeaderCell(attr) {\r\n    var th = create(\"th\");\r\n\r\n    if (attr) {\r\n        addAttributes(th, attr);\r\n    }\r\n\r\n    return th;\r\n}\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @memberof DOM\r\n */\r\nexport function createTableCell(attr) {\r\n    var td = create(\"td\");\r\n\r\n    if (attr) {\r\n        addAttributes(td, attr);\r\n    }\r\n\r\n    return td;\r\n}\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} el element\r\n * @param {Object} attr attribute\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(el, attr) {\r\n    const ATTR_MAP = {\r\n        id: [assign],\r\n        text: [assign, 'textContent'],\r\n        html: [assign, 'innerHTML'],\r\n        accept: [assign],\r\n        disabled: [disable, el],\r\n        class: [addClass, el],\r\n        value: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        data: [Object.assign, el.dataset]\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attr)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attr[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        el[key] = val;\r\n    }\r\n}\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} el element\r\n * @param {HTMLCollection} children children elements\r\n * @memberof DOM\r\n */\r\nfunction addChildren(el, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(el, children);\r\n    } else if (children instanceof Element) {\r\n        el.appendChild(children);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {HTMLElement} parent\r\n * @param {HTMLElement[]} children\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    var fragment = createDocFragment();\r\n    children.forEach(element => {\r\n        fragment.appendChild(element);\r\n    });\r\n    parent.appendChild(fragment);\r\n    fragment = null;\r\n\r\n    return parent;\r\n}\r\n\r\nfunction echo(o) { o; }"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isString","str","String","isClassName","selector","test","getElement","el","document","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","hasClass","e","c","className","split","indexOf","removeClass","Array","isArray","forEach","val","_removeClass","replace","addClass","map","class","join","strClass","length","getElementSibling","dir","sibling","isElement","obj","nodeType","Element","isHTMLElement","HTMLElement","Elements","UI","disable","tagName","disabled","dataset","create","createElement","createDocFragment","createDocumentFragment","createInput","attr","input","addAttributes","ATTR_MAP","id","assign","text","html","accept","placeholder","readonly","data","Object","DEFAULT_MAP","echo","keys","key","addChildren","children","appendChildren","appendChild","parent","fragment","element","o","type","select","found","options","i","option","selected","template","deep","importNode","content","position","top","left","textContent","readOnly","body","execCommand","remove","href","a","aside","btn","div","eId","eClass","em","header","lvl","h","src","alt","img","label","li","rel","link","p","span","strong","table","tbody","td","tfoot","thead","th","tr","textArea","createTextNode","ul","target","callback","max","parentElement","findAncestorIter","findAncestorInf","querySelectorAll","insertAdjacentElement","node","hasChildNodes","removeChild","lastChild","window","innerWidth","documentElement","clientWidth"],"mappings":"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"}