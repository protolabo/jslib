{"version":3,"file":"zenkai.min.js","sources":["../src/datatype/type-parse.js","../src/datatype/type-datetime.js","../src/datatype/type-object.js","../src/datatype/type-string.js","../src/utils/ajax-utils.js","../src/utils/path-utils.js","../src/utils/quantifier-utils.js","../src/utils/uri-utils.js","../src/dom/dom-parse.js","../src/dom/dom-append.js","../src/dom/element-class-manip.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/components/form/floating-label.js","../src/components/form/global.js","../src/components/form/utils.js","../src/components/form/selector.js","../src/components/form/switch.js","../src/components/utils.js","../src/components/collapsible.js","../src/datatype/type-convert.js","../src/dom/copy-to-clipboard.js","../src/components/form/input-counter.js","../src/datatype/type-array.js","../src/utils/math-utils.js","../src/dom/dom-remove.js","../src/dom/dom-stat.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable] indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(obj) {\r\n    return (Array.isArray(obj) || isString(obj)) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { valOrDefault, isNullOrUndefined, isDate } from './type-parse.js';\r\n\r\n/**\r\n * Compare 2 times\r\n * @param {string} t1 time 1\r\n * @param {string} t2 time 2\r\n * @returns {number} 1, 0, -1 if t1 > t2, t1 = t2 and t1 < t2 respectively\r\n * @memberof TYPE\r\n */\r\nexport function compareTime(t1, t2) {\r\n    if (isNullOrUndefined(t1) || isNullOrUndefined(t2) || !t1.includes(\":\") || !t2.includes(\":\")) {\r\n        return null;\r\n    }\r\n\r\n    var arr1 = t1.split(':');\r\n    var arr2 = t2.split(':');\r\n\r\n    // hour comparison\r\n    if (+arr1[0] > +arr2[0]) {\r\n        return 1;\r\n    } else if (+arr1[0] < +arr2[0]) {\r\n        return -1;\r\n    } else {\r\n        // minute comparison\r\n        if (+arr1[1] > +arr2[1]) {\r\n            return 1;\r\n        } else if (+arr1[1] < +arr2[1]) {\r\n            return -1;\r\n        } else {\r\n            if (arr1.length == arr2.length && arr1.length == 3) {\r\n                // second comparison\r\n                if (+arr1[2] > +arr2[2]) {\r\n                    return 1;\r\n                } else if (+arr1[2] < +arr2[2]) {\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Resolves a date value\r\n * @param {*} [date] \r\n * @returns {Date}\r\n * @private\r\n */\r\nfunction resolveDate(date) {\r\n    if (isNullOrUndefined(date)) {\r\n        return new Date();\r\n    } else if (isDate(date)) {\r\n        return date;\r\n    }\r\n\r\n    var _date = new Date(date);\r\n    return new Date(_date.getTime() + _date.getTimezoneOffset() * 60000);\r\n}\r\n\r\n/**\r\n * Formats a date\r\n * @param {!Date} date \r\n * @param {!string} format \r\n * @returns {string} Formatted date\r\n * @memberof TYPE\r\n */\r\nexport function formatDate(date, format) {\r\n    var dd = date.getDate();\r\n    var mm = date.getMonth() + 1;   // January = 0\r\n    var yyyy = date.getFullYear().toString();\r\n    var hh = date.getHours();\r\n    var MM = date.getMinutes();\r\n    var ss = date.getSeconds();\r\n\r\n    const twoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\n    return format.replace('yyyy', yyyy)\r\n        .replace('yy', yyyy.slice(-2))\r\n        .replace('mm', twoDigits(mm))\r\n        .replace('m', mm)\r\n        .replace('dd', twoDigits(dd))\r\n        .replace('d', dd)\r\n        .replace('hh', twoDigits(hh))\r\n        .replace('h', hh)\r\n        .replace('MM', twoDigits(MM))\r\n        .replace('M', MM)\r\n        .replace('ss', twoDigits(ss))\r\n        .replace('s', ss);\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function shortDate(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(date, 'yyyy-mm-dd');\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd hh:MM\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function shortDateTime(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(new Date(date + date.getTimezoneOffset() * 60000), 'yyyy-mm-dd hh:MM');\r\n}\r\n\r\nexport function parseTime(n) {\r\n    var hh = +n | 0;\r\n    var mm = '00';\r\n\r\n    if (!Number.isInteger(+n)) {\r\n        mm = (n + '').split('.')[1] * 6;\r\n    }\r\n\r\n    return hh + ':' + mm;\r\n}\r\n\r\nconst DICT = {\r\n    'en': {\r\n        'second': 'second(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'hour(s)',\r\n        'day': 'day(s)',\r\n        'week': 'week(s)',\r\n        'month': 'month(s)',\r\n        'year': 'year(s)',\r\n    },\r\n    'fr': {\r\n        'second': 'seconde(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'heure(s)',\r\n        'day': 'jour(s)',\r\n        'week': 'semaine(s)',\r\n        'month': 'mois',\r\n        'year': 'annÃ©e(s)',\r\n    },\r\n};\r\n\r\nconst trans = function translation(lang, key, isPlural) {\r\n    var value = DICT[lang][key];\r\n\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (isPlural) {\r\n        return value.replace(/\\(([a-z]+)\\)/g, '$1');\r\n    }\r\n\r\n    return value.replace(/\\([a-z]+\\)/g, '');\r\n};\r\n\r\nconst timeAgoResponse = function timeAgoResponseBuilder(time, unit, _lang) {\r\n    var lang = valOrDefault(_lang, 'en');\r\n    var isPlural = time === 1;\r\n    var msg = {\r\n        en: `${time} ${trans('en', unit, isPlural)} ago`,\r\n        fr: `il y a ${time} ${trans('fr', unit, isPlural)}`,\r\n    };\r\n\r\n    return msg[lang];\r\n};\r\n\r\n/**\r\n * Returns the ellapsed time between now and a point in time\r\n * @param {*} time \r\n * @param {*} _callback \r\n * @returns {string}\r\n * @memberof TYPE\r\n */\r\nexport function timeAgo(time, _callback) {\r\n    var callback = valOrDefault(_callback, timeAgoResponse);\r\n\r\n    const seconds = Math.floor((Date.now() - resolveDate(time).getTime()) / 1000);\r\n    const MINUTE = 60;\r\n    const HOUR = MINUTE * 60;\r\n    const DAY = HOUR * 24;\r\n    const WEEK = DAY * 7;\r\n    const MONTH = DAY * 30;\r\n    const YEAR = WEEK * 52;\r\n\r\n    if (seconds < MINUTE) {\r\n        return callback(seconds, 'second');\r\n    } else if (seconds < HOUR) {\r\n        return callback(~~(seconds / MINUTE), 'minute');\r\n    } else if (seconds < DAY) {\r\n        return callback(~~(seconds / HOUR), 'hour');\r\n    } else if (seconds < WEEK) {\r\n        return callback(~~(seconds / DAY), 'day');\r\n    } else if (seconds < MONTH) {\r\n        return callback(~~(seconds / WEEK), 'week');\r\n    } else if (seconds < YEAR) {\r\n        return callback(~~(seconds / MONTH), 'month');\r\n    } else {\r\n        return callback(~~(seconds / YEAR), 'year');\r\n    }\r\n}","/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\nexport const defProp = Object.defineProperty;\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof TYPE\r\n */\r\nexport const hasOwn = function (obj, key) { return hasOwnProperty.call(obj, key); };\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof TYPE\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} obj \r\n * @memberof TYPE\r\n */\r\nexport function cloneObject(obj) {\r\n    if (obj === null || typeof (obj) !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace } from \"./type-parse.js\";\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof TYPE\r\n */\r\nexport function capitalize(str) {\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof TYPE\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} CamelCased sequence\r\n * @memberof TYPE\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof TYPE\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof TYPE\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[Ã Ã¢Ã¤Ã¦]/gi, 'a')\r\n        .replace(/[Ã§]/gi, 'c')\r\n        .replace(/[Ã©Ã¨Ãª]/gi, 'e')\r\n        .replace(/[Ã®Ã¯]/gi, 'i')\r\n        .replace(/[Ã´Å]/gi, 'o')\r\n        .replace(/[Ã¹Ã»Ã¼]/gi, 'u');\r\n}","/** \r\n * Ajax namespace\r\n * @namespace AJAX \r\n */\r\n\r\nimport { isFunction, valOrDefault } from \"@datatype/index.js\";\r\n\r\nconst HttpResponse = {\r\n    // Successful\r\n    OK: 200,\r\n    Created: 201,\r\n    Accepted: 202,\r\n    NoContent: 204,\r\n    // Client Error\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    MethodNotAllowed: 405,\r\n    NotAcceptable: 406,\r\n    UnsupportedMediaType: 415,\r\n    // Server Error\r\n    InternalServerError: 500,\r\n    NotImplemented: 501,\r\n    BadGateway: 502,\r\n    ServiceUnavaible: 503,\r\n    GatewayTimeout: 504\r\n};\r\n\r\nconst State = {\r\n    OPENED: 1,\r\n    RECEIVED: 2,\r\n    LOADING: 3,\r\n    DONE: 4\r\n};\r\n\r\n/**\r\n * An XHR resposne\r\n * @private\r\n * @typedef {Object} xhrResponse\r\n * @property {number} status - The response status code\r\n * @property {string} message - The response content\r\n */\r\n\r\n/**\r\n * @callback xhrCallback\r\n * @param  {xhrResponse} response - The XHR response object\r\n * @private\r\n */\r\n\r\n/**\r\n * This function creates and arranges the XMLHttpRequest object\r\n * @param {('GET'|'POST'|'PUT'|'DELETE')} type The HTTP method\r\n * @param {string} url The URL to send the request \r\n * @param {*} successPred The success condition\r\n * @param {xhrCallback} successCb A callback function to handle a successful request\r\n * @param {xhrCallback} passCb A callback function to handle a valid request\r\n * @param {xhrCallback} failureCb A callback function to handle a failed request\r\n * @private\r\n */\r\nconst xhrHandler = function (type, url, successPred, successCb, failureCb, passCb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        var callback;\r\n        if (xhr.readyState === State.DONE) {\r\n            let response = createResponse(xhr.status, xhr.responseText);\r\n            if (successPred(xhr.status)) {\r\n                callback = successCb;\r\n            } else {\r\n                callback = failureCb;\r\n                if (xhr.status >= 200 && xhr.status < 300 && isFunction(passCb)) {\r\n                    callback = passCb;\r\n                }\r\n            }\r\n            if (isFunction(callback)) {\r\n                callback(response);\r\n            }\r\n        }\r\n    };\r\n    xhr.open(type, url, true);\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n    return xhr;\r\n};\r\n\r\nfunction createResponse(status, content) {\r\n    return {\r\n        status: status,\r\n        message: content\r\n    };\r\n}\r\n\r\n/**\r\n * Sends a GET request\r\n * @param {string} url The URL to send the request \r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof AJAX\r\n */\r\nexport function GET(url, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => status === HttpResponse.OK;\r\n    var xhr = xhrHandler('GET', url, successPred, success, fail, options.pass);\r\n    xhr.send();\r\n}\r\n\r\n/**\r\n * Sends a POST request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof AJAX\r\n */\r\nexport function POST(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Created].includes(status);\r\n    var xhr = xhrHandler('POST', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a PUT request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof AJAX\r\n */\r\nexport function PUT(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('PUT', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a DELETE request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof AJAX\r\n */\r\nexport function DELETE(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Accepted, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('DELETE', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}","/**\r\n * @namespace PATH\r\n */\r\n\r\nimport { isNullOrWhitespace, isNullOrUndefined, valOrDefault, cloneObject } from '@datatype/index.js';\r\n\r\n/**\r\n * Append the path to the current path\r\n * @param {string} target \r\n * @param {string} path \r\n * @memberof PATH\r\n */\r\nexport function addPath(target, path) { return isNullOrWhitespace(target) ? path : target + '.' + path; }\r\n\r\n/**\r\n * Returns the directory of the path\r\n * @param {string} path \r\n * @memberof PATH\r\n */\r\nexport function getDir(path) { return path.substring(0, path.lastIndexOf('.')); }\r\n\r\n/**\r\n * Returns the directory of the path from the target\r\n * @param {string} path \r\n * @memberof PATH\r\n */\r\nexport function getDirTarget(path, target) { return path.substring(0, path.lastIndexOf(target) - 1); }\r\n\r\nfunction findByIndex(obj, match, prop) {\r\n    const REGEX_DIGIT = /\\d+/g;\r\n    var index = +match[0].match(REGEX_DIGIT);\r\n    return obj[prop][index];\r\n}\r\n\r\n/**\r\n * Returns an element in an object using its path\r\n * @param {Object} obj\r\n * @param {string} path  \r\n * @param {string} [_separator=.]\r\n * @memberof PATH\r\n */\r\nexport function findByPath(obj, path, _separator) {\r\n    const REGEX_BRACKET_DIGIT = /\\[\\d+\\]/g;\r\n    const REGEX_BRACKET_WORD = /\\[\\w+\\]/g;\r\n    \r\n    const separator = valOrDefault(_separator, '.');\r\n    var me = cloneObject(obj);\r\n\r\n    const findHandler = function (part, regex, callback) {\r\n        var match = part.match(regex);\r\n        var prop = part.substring(0, part.indexOf('['));\r\n        return callback(me, match, prop);\r\n    };\r\n\r\n    var parts = path.split(separator);\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n\r\n        if (REGEX_BRACKET_DIGIT.test(part)) {\r\n            me = findHandler(part, REGEX_BRACKET_DIGIT, findByIndex);\r\n        } else {\r\n            me = me[part];\r\n        }\r\n\r\n        if (isNullOrUndefined(me)) {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    return me;\r\n}","/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof LOGIC\r\n */\r\nexport const some = function (values, fn, min = 1) {\r\n    if (min === 1) {\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (fn(values[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return getHitCount(values, fn) >= min;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof LOGIC\r\n */\r\nexport const all = function (values, fn) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (!fn(values[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof LOGIC\r\n */\r\nexport const one = function (values, fn) {\r\n    return getHitCount(values, fn) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} fn Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof LOGIC\r\n */\r\nexport const no = function (values, fn) {\r\n    return !some(values, fn);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} values \r\n * @param {*} fn \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, fn) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (fn(values[i])) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","/**\r\n * @namespace URI\r\n */\r\n\r\nimport { isNullOrWhitespace, valOrDefault } from '@datatype/index.js';\r\n\r\nconst encode = encodeURIComponent;\r\n\r\n/**\r\n * Extracts and returns the protocol and host of a given url\r\n * @param {string} url \r\n * @memberof URI\r\n */\r\nexport function getRootUrl(url) {\r\n    return url.toString().replace(/^(.*\\/\\/[^/?#]*).*$/, \"$1\");\r\n}\r\n\r\n/**\r\n * Extracts and returns the parameters of a URL\r\n * @param {string} [prop] Searched parameter\r\n * @param {string} [defValue] Searched parameter default value\r\n * @memberof URI\r\n */\r\nexport function getUrlParams(prop, defValue) {\r\n    var search = decodeURIComponent(window.location.search);\r\n\r\n    if (isNullOrWhitespace(search)) {\r\n        return null;\r\n    }\r\n\r\n    var params = {};\r\n    if ('URLSearchParams' in window) {\r\n        let searchParams = new URLSearchParams(search.substring(1));\r\n        for (const pair of searchParams.entries()) {\r\n            params[pair[0]] = pair[1];\r\n        }\r\n        if (prop) {\r\n            return searchParams.get(prop);\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    var defs = search.substring(1).split('&');\r\n    defs.forEach((val) => {\r\n        var parts = val.split('=', 2);\r\n        params[parts[0]] = parts[1];\r\n    });\r\n    \r\n    if (prop) {\r\n        return valOrDefault(params[prop], defValue);\r\n    }\r\n\r\n    return params;\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction getParams(href) {\r\n    return href.slice(href.indexOf('?') + 1);\r\n}\r\n\r\n/**\r\n * Creates a query string\r\n * @param {Object} query \r\n * @returns {string} Query string\r\n * @memberof URI\r\n */\r\nexport function queryBuilder(query, ignoreNullOrEmpty = false) {\r\n    var str = [];\r\n\r\n    Object.keys(query).forEach((prop) => {\r\n        if (!ignoreNullOrEmpty || !isNullOrWhitespace(query[prop])) {\r\n            str.push(`${encode(prop)}=${encode(query[prop])}`);\r\n        }\r\n    });\r\n\r\n    return str.join('&');\r\n}","import { isNullOrUndefined, isString } from '@datatype/index.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => !isNullOrUndefined(obj) && obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLElement*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj) => isElementNode(obj) && obj instanceof HTMLElement;\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => !isNullOrUndefined(obj) && obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Creates a template with content\r\n * @param {string} html \r\n * @returns {HTMLTemplateElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createTemplate(html) {\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content;\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport function htmlToElement(html) {\r\n    if (!isString(html)) {\r\n        console.error(\"dom-parse>htmlToElement(html): html must be a string\");\r\n        return null;\r\n    }\r\n\r\n    var template = createTemplate(html);\r\n\r\n    return template.firstChild;\r\n}\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport function htmlToElements(html) {\r\n    if (!isString(html)) {\r\n        console.error(\"dom-parse>htmlToElements(html): html must be a string\");\r\n        return null;\r\n    }\r\n\r\n    var template = createTemplate(html);\r\n\r\n    return template.childNodes;\r\n}","import { isIterable, isString } from '@datatype/index.js';\r\nimport { all } from '@utils/index.js';\r\nimport { isNode, isElement, isHTMLCollection } from './dom-parse.js';\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        return null;\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {Element} parent\r\n * @param {!HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    if (!isNode(parent)) {\r\n        return null;\r\n    }\r\n    if (!isHTMLCollection(children) && !isIterable(children) || isString(children)) {\r\n        return null;\r\n    }\r\n\r\n    var fragment = document.createDocumentFragment();\r\n    \r\n    Array.from(children).forEach(element => {\r\n        fragment.appendChild(isNode(element) ? element : document.createTextNode(element.toString()));\r\n    });\r\n    parent.appendChild(fragment);\r\n\r\n    return parent;\r\n}","import { isNullOrWhitespace, isNullOrUndefined } from '@datatype/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} c class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (c) => c.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Transform a raw value to a valid class value\r\n * @param {string} c raw value\r\n * @returns {string} parsed value\r\n * @private\r\n */\r\nconst parseClass = (c) => {\r\n    if (isNullOrUndefined(c)) {\r\n        return \"\";\r\n    } else if (Array.isArray(c)) {\r\n        return c.join(' ');\r\n    } else {\r\n        return c.toString();\r\n    }\r\n};\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {!HTMLElement} element element\r\n * @param {string} className class\r\n * @returns {boolean} value indicating whether the element has the class\r\n * @memberof DOM\r\n */\r\nexport function hasClass(element, className) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    return element.className.split(\" \").includes(className);\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {!HTMLElement} element element\r\n * @param {string|Array} attrClass class\r\n * @memberof DOM\r\n */\r\nexport function removeClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    const remove = function (el, c) {\r\n        if (hasClass(el, c)) {\r\n            el.className = el.className.replace(c, '');\r\n        }\r\n    };\r\n\r\n    if (Array.isArray(attrClass)) {\r\n        attrClass.forEach((val) => remove(element, val));\r\n    } else {\r\n        remove(element, attrClass);\r\n    }\r\n    \r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {!HTMLElement} element Element\r\n * @param {string|string[]} attrClass classes\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function addClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var parsedClass = parseClass(attrClass);\r\n\r\n    if (isNullOrWhitespace(element.className)) {\r\n        element.className = parsedClass;\r\n    } else if (!hasClass(element, parsedClass)) {\r\n        element.className += \" \" + parsedClass;\r\n    }\r\n\r\n    element.className = formatClass(element.className);\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {!HTMLElement} element \r\n * @param {string} attrClass ClassName\r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function toggleClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    if (hasClass(element, attrClass)) {\r\n        removeClass(element, attrClass);\r\n    } else {\r\n        addClass(element, attrClass);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Sets classes to an element\r\n * @param {!HTMLElement} element \r\n * @param {string|string[]} attrClass classes \r\n * @returns {HTMLElement} the element\r\n * @memberof DOM\r\n */\r\nexport function setClass(element, attrClass) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    element.className = formatClass(parseClass(attrClass));\r\n\r\n    return element;\r\n}","import { setClass } from './element-class-manip.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n\r\n/**\r\n * Verifies that an object is an *HTML Select Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLSelectElement*\r\n * @private\r\n */\r\nexport const isHTMLSelectElement = (obj) => isHTMLElement(obj) && obj instanceof HTMLSelectElement;\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    const ATTR_MAP = {\r\n        // Global attributes\r\n        accesskey: [assign, 'accessKey'],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        editable: [assign, 'contenteditable'],\r\n        draggable: [assign],\r\n        hidden: [assign],\r\n        id: [assign],\r\n        lang: [assign],\r\n        html: [assign, 'innerHTML'],\r\n        style: [assign],\r\n        tabindex: [assign, 'tabIndex'],\r\n        title: [assign],\r\n        // Form attributes\r\n        accept: [assign],\r\n        disabled: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    if (!isHTMLSelectElement(select)) {\r\n        throw new Error(\"The given element is not a valid HTML Select element\");\r\n    }\r\n\r\n    var found = false;\r\n    var options = select.options;\r\n    for (let i = 0; !found && i < options.length; i++) {\r\n        let option = options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    return found;\r\n}\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {!HTMLElement} element Element\r\n * @memberof DOM\r\n */\r\nexport function conceal(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    Object.assign(element.style, {\r\n        position: 'absolute',\r\n        top: '-9999px',\r\n        left: '-9999px'\r\n    });\r\n\r\n    return element;\r\n}\r\n","import { isNode } from \"./dom-parse.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} [_attribute] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_children] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute, _children) {\r\n    var element = document.createElement(tagName);\r\n    if (_attribute) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n    if (_children) {\r\n        addContent(element, _children);\r\n    }\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport const createDocFragment = () => document.createDocumentFragment();\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} href \r\n * @param {string} rel \r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport function createLink(href, rel) {\r\n    var link = create(\"link\");\r\n\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = create.bind(null, 'template');\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createBlockQuotation(cite, attribute, children) {\r\n    var element = create('blockquote', attribute, children);\r\n\r\n    if (cite) {\r\n        element.cite = cite;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, _attribute, _children) {\r\n    var a = create('a', _attribute, _children);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, _attribute) {\r\n    var img = create('img', _attribute);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attribute, children) {\r\n    var audio = create('audio', attribute, children);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attribute, children) {\r\n    var video = create('video', attribute, children);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, _attribute, children) {\r\n    var quote = create('q', _attribute, children);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @param {string} datetime \r\n * @param {object} attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, _attribute) {\r\n    var element = create('time', _attribute);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\n\r\n/**\r\n * Creates an `<input>` element with a specified type and \r\n * optionally some attributes\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @memberof DOM\r\n */\r\nexport function createInputAs(type, _attribute) {\r\n    if (![\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n        \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n        \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"].includes(type)) {\r\n        console.error(`Input could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var input = create('input', _attribute);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\n\r\n/**\r\n * Creates a `<button>` element with a specified type and \r\n * optionally some attributes and children elements\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport function createButtonAs(type, _attribute, _children) {\r\n    if (![\"submit\", \"reset\", \"button\"].includes(type)) {\r\n        console.error(`Button could not be created: the given type ${type} is not valid.`);\r\n        return null;\r\n    }\r\n\r\n    var button = create(\"button\", _attribute, _children);\r\n    button.type = type;\r\n\r\n    return button;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableHeaderCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableDataCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} element element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(element, children);\r\n    } else if (isNode(children)) {\r\n        element.appendChild(children);\r\n    } else {\r\n        element.textContent = children.toString();\r\n    }\r\n\r\n    return element;\r\n}","ï»¿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\nimport { isElement } from './dom-parse.js';\r\n\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if(isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if(isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(el, dir, pred) {\r\n    var predicate = (el) => true;\r\n    if (isFunction(pred)) {\r\n        predicate = (el) => !isNullOrUndefined(el) && pred(el);\r\n    }\r\n\r\n    var sibling = el[dir];\r\n    while (!predicate(sibling)) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport function getPreviousElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"previousElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @param {*} predCb Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport function getNextElementSibling(el, predCb) { \r\n    return getElementSibling(el, \"nextElementSibling\", predCb); \r\n}\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, callback, max) {\r\n    if (!isElement(target)) {\r\n        return null;\r\n    }\r\n    if (!isFunction(callback)) {\r\n        return null;\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    if (max > 0) {\r\n        return findAncestorIter(parent, callback, max - 1);\r\n    }\r\n    return findAncestorInf(parent, callback);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, callback) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, callback);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} callback Decides whether the target is found\r\n * @param {number} [max] Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, callback, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (callback(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, callback, max - 1);\r\n}","import { getElement, getElements, removeClass, addClass, isHTMLElement } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isEmpty } from '@datatype/index.js';\r\n\r\nconst moveDown = (label) => addClass(label, 'down');\r\nconst moveUp = (label) => removeClass(label, 'down');\r\nconst addFocus = (element) => addClass(element, 'focused');\r\nconst removeFocus = (element) => removeClass(element, 'focused');\r\n\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isHTMLElement(input)) {\r\n                if (isNullOrWhitespace(input.placeholder)) {\r\n                    bindEvents(input, label);\r\n                    if (isEmpty(input.value)) {\r\n                        moveDown(label);\r\n                    }\r\n                } else {\r\n                    console.warn(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Input \"${label.htmlFor}\" contains a placeholder`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n                }\r\n            } else {\r\n                console.error(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Missing input for label \"${label.htmlFor}\"`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                console.log(\"focus called\");\r\n                input.placeholder = \"\";\r\n                moveUp(label);\r\n                addFocus(label.parentElement);\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                console.log(\"blur called\");\r\n                if (isEmpty(this.value)) {\r\n                    moveDown(label);\r\n                }\r\n                removeFocus(label.parentElement);\r\n            });\r\n            input.addEventListener('input', function (e) {\r\n                console.log(\"input called\");\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        moveDown(label);\r\n                    } else {\r\n                        moveUp(label);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { valOrDefault } from \"@datatype/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));","import { getElement } from '@dom/index.js';\r\nimport { valOrDefault, isNullOrWhitespace } from '@datatype/index.js';\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, isNull, valOrDefault, isUndefined } from '@datatype/index.js';\r\nimport { check, uncheck, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst SelectorFactory = {\r\n    create(container, callback) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Selector>%cSelectorFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var selector = null;\r\n        switch (getType(container)) {\r\n            case 'selector':\r\n                selector = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                selector = Object.create(FormSelector);\r\n                break;\r\n        }\r\n        Object.assign(selector, {\r\n            container: container,\r\n            querySelector: createDomQuery(selector),\r\n            callback: isFunction(callback) ? callback : function (val, el) { }\r\n        });\r\n\r\n\r\n        return selector;\r\n    }\r\n};\r\n\r\nconst BaseSelector = {\r\n    name: 'selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item) {\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback.call(this, item.dataset.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n\r\n            if (getState(item) === Status.ON) {\r\n                this.setCurrentItem(item);\r\n            }\r\n            if (!isUndefined(value) && item.dataset.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            item.addEventListener('click', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst FormSelector = {\r\n    name: 'form-selector',\r\n    container: null,\r\n    current: null,\r\n    callback: null,\r\n    setCurrentItem(item, _input) {\r\n        var input = valOrDefault(_input, getInput('radio', item));\r\n        input.checked = true;\r\n        this.current = item;\r\n        check(this.current, Status.ON);\r\n        this.callback.call(this, input.value, this.current);\r\n    },\r\n    activate() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n        var selectorItems = getElements('[data-selector]', this.container);\r\n        for (let i = 0, len = selectorItems.length; i < len; i++) {\r\n            let item = selectorItems[i];\r\n            let input = getInput('radio', item);\r\n            setState(item, input.checked ? Status.ON : Status.OFF);\r\n            if (input.checked) {\r\n                this.setCurrentItem(item, input);\r\n            }\r\n            if (input.value === value) {\r\n                defaultItem = item;\r\n            }\r\n            input.addEventListener('change', () => {\r\n                if (this.current) {\r\n                    uncheck(this.current, Status.OFF);\r\n                }\r\n                this.setCurrentItem(item, input);\r\n            });\r\n        }\r\n\r\n        if (isNull(this.current) && !isNull(defaultItem)) {\r\n            this.setCurrentItem(defaultItem);\r\n        }\r\n    }\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [createDomQuery(BaseSelector), createDomQuery(FormSelector)].join(',');\r\n\r\nfunction getSelectors(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSelector(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSelectors(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\nexport function Selector(container, _callback) {\r\n    const selectors = getSelectors(container);\r\n\r\n    if (selectors === NONE) {\r\n        return null;\r\n    }\r\n\r\n    for (let i = 0; i < selectors.length; i++) {\r\n        let selector = SelectorFactory.create(selectors[i], _callback);\r\n        selector.activate();\r\n    }\r\n\r\n    return selectors;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isString, isNullOrUndefined, isEmpty, valOrDefault } from '@datatype/index.js';\r\nimport { check, uncheck, setState, getState, getType } from './global.js';\r\nimport { getInput } from \"./utils.js\";\r\n\r\nconst NONE = -1;\r\nconst ERROR = -10;\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst SwitchFactory = {\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            console.error('%c@zenkai%c #Switch>%SwitchFactory:%c Container must be an HTML Element', \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n            return ERROR;\r\n        }\r\n\r\n        var widget = null;\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n        Object.assign(widget, options, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.container.dataset['value'];\r\n    },\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    activate() {\r\n        // Init\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        // Bind events\r\n        this.container.addEventListener('click', () => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                this.setChecked(!this.isChecked());\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n            \r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLInputElement} */\r\n    input: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.input.value;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        // return this.input.checked;\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        this.input.checked = isChecked;\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    activate() {\r\n        this.input = getInput('checkbox', this.container);\r\n        if (!isHTMLElement(this.input)) {\r\n            throw new Error(\"Missing input: FormSwitch requires an input in the container\");\r\n        }\r\n\r\n        // Init\r\n        if (this.input.checked) {\r\n            this.setChecked(true);\r\n        }\r\n\r\n        // Bind events\r\n        this.input.addEventListener('change', (e) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                this.setChecked(!this.isChecked());\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n            \r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nexport function Switch(container, _options) {\r\n    const switcheElements = getSliders(container);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (switcheElements === NONE) {\r\n        return null;\r\n    }\r\n\r\n    var switches = [];\r\n\r\n    for (let i = 0; i < switcheElements.length; i++) {\r\n        let $switch = SwitchFactory.create(switcheElements[i], options);\r\n        $switch.activate();\r\n        switches.push($switch);\r\n    }\r\n\r\n    return switches;\r\n}\r\n\r\nfunction getSliders(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isSwitch(container) ? [container] : getElements(domQuery, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getSliders(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(domQuery);\r\n    }\r\n\r\n    return NONE;\r\n}","/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) { element.style.display = \"block\"; }\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) { element.style.display = \"none\"; }","import { getElement, getElements, addClass, removeClass, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isString, isNullOrUndefined, isEmpty, isFunction, valOrDefault } from '@datatype/index.js';\r\nimport { show, hide } from './utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst NONE = -1;\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst toData = (name) => `[data-boost=${name}]`;\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    /** @returns {CollapsibleFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new Error(\"Missing container: A collapsible requires a container\");\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    name: 'collapsible',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement} */\r\n    header: null,\r\n    /** @type {HTMLElement} */\r\n    content: null,\r\n    /** @type {Function} */\r\n    beforeOpen: null,\r\n    /** @type {Function} */\r\n    afterOpen: null,\r\n    /** @type {Function} */\r\n    beforeClose: null,\r\n    /** @type {Function} */\r\n    afterClose: null,\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    /** Verifies that the container is collapsed (closed) */\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    /** Verifies that the container is expanded (open) */\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    isClosed: false,\r\n    isInitialized: false,\r\n    /** Opens the container and calls the defined pre/post operations */\r\n    open() {\r\n        if (this.isInitialized && !this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeOpen)) {\r\n            halt = this.beforeOpen(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(show, State.OPEN, addClass);\r\n\r\n        if (isFunction(this.afterOpen)) {\r\n            this.afterOpen(this);\r\n        }\r\n\r\n        this.isClosed = false;\r\n\r\n        return this;\r\n    },\r\n    /** Closes the container and calls the defined pre/post operations */\r\n    close() {\r\n        if (this.isInitialized && this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeClose)) {\r\n            halt = this.beforeClose(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(hide, State.CLOSED, removeClass);\r\n\r\n        if (isFunction(this.afterClose)) {\r\n            this.afterClose(this);\r\n        }\r\n\r\n        this.isClosed = true;\r\n\r\n        return this;\r\n    },\r\n    toggle(displayCb, state, classCb) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        classCb(this.container, 'expanded');\r\n    },\r\n    init() {\r\n        this.header = getElement(`[data-${this.name}-header]`, this.container);\r\n        this.content = getElement(`[data-${this.name}-content]`, this.container);\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.isClosed = true;\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n\r\n        this.isInitialized = true;\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.isCollapsed()) {\r\n                    this.open();\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    /** @returns {AccordionFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new Error(\"Missing container: A collapsible requires a container\");\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {CollapsibleFactory[]} */\r\n    sections: null,\r\n    /** @type {CollapsibleFactory} */\r\n    selectedSection: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    init() {\r\n        this.sections = [];\r\n\r\n        return this;\r\n    },\r\n    activate() {\r\n        this.init();\r\n\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let element = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create(element, {\r\n                name: 'accordion',\r\n                index: i,\r\n                afterOpen: (selected) => {\r\n                    if (isFunction(this.beforeChange)) {\r\n                        this.beforeChange(selected);\r\n                    }\r\n\r\n                    this.sections.filter((section) => section.index !== selected.index)\r\n                        .forEach((other) => other.close());\r\n\r\n                    if (isFunction(this.afterChange)) {\r\n                        this.afterChange(selected);\r\n                    }\r\n\r\n                    this.selectedSection = selected;\r\n                }\r\n            });\r\n            this.sections.push(collapsible);\r\n            collapsible.activate();\r\n        }\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\n/**\r\n * Makes a container collapsible\r\n * @param {!HTMLElement} container \r\n * @param {Object} [options]\r\n */\r\nexport function Collapsible(container, _options) {\r\n    var collapsibleElements = getCollapsibles(container);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (collapsibleElements === NONE) {\r\n        return null;\r\n    }\r\n\r\n    var collapsibles = [];\r\n\r\n    for (let i = 0; i < collapsibleElements.length; i++) {\r\n        let collapsible = CollapsibleFactory.create(collapsibleElements[i], options);\r\n        collapsible.activate();\r\n        collapsibles.push(collapsible);\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Transforms a container into an accordion\r\n * @param {!HTMLElement} container \r\n * @param {Object} [_options]\r\n */\r\nexport function Accordion(container, _options) {\r\n    var accordionElements = getAccordions(container);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (accordionElements === NONE) {\r\n        return null;\r\n    }\r\n\r\n    var accordions = [];\r\n\r\n    for (let i = 0; i < accordionElements.length; i++) {\r\n        let accordion = AccordionFactory.create(accordionElements[i], options);\r\n        accordion.activate();\r\n        accordions.push(accordion);\r\n    }\r\n\r\n    return accordions;\r\n}\r\n\r\n/**\r\n * Get all collapsibles within the specified container or on the page\r\n * @param {HTMLElement|string} [container] \r\n * @private\r\n */\r\nfunction getCollapsibles(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isCollapsible(container) ? [container] : getElements('[data-collapsible]', container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getCollapsibles(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements('[data-collapsible]');\r\n    }\r\n\r\n    return NONE;\r\n}\r\n\r\n/**\r\n * Get all accordions within the specified container or on the page\r\n * @param {HTMLElement|string} [container] \r\n * @private\r\n */\r\nfunction getAccordions(container) {\r\n    if (isHTMLElement(container)) {\r\n        return isAccordion(container) ? [container] : getElements(toData('accordion'), container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? NONE : getAccordions(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(toData('accordion'));\r\n    }\r\n\r\n    return NONE;\r\n}","import { valOrDefault } from \"./type-parse.js\";\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof TYPE\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof TYPE\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n","import { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Copy to clipboard\r\n * @param {HTMLElement|string} value \r\n * @returns {boolean} Value indicating whether the the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value,\r\n        readonly: true\r\n    });\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\n\r\n/**\r\n * Add a counter to an input element\r\n * @param {HTMLElement} container \r\n */\r\nexport function inputCounter(container) {\r\n    const counters = getElements('[data-counter]', container);\r\n\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let ref = counter.dataset['counter'];\r\n        let input = getElement(`#${ref}`);\r\n        if (isHTMLElement(input)) {\r\n            counter.dataset['counterMax'] = input.maxLength;\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            bindEvents(input, counter);\r\n        } else {\r\n            console.error(`%c@zenkai%c #InputCounter>%cinputCounter:%c Failed to add counter ${ref}. Input (referenced) was not found.`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLElement} counter \r\n     */\r\n    function bindEvents(input, counter) {\r\n        input.addEventListener('input', function (e) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n        });\r\n    }\r\n\r\n    return counters;\r\n}","import { isEmpty } from \"./type-parse.js\";\r\n\r\n/**\r\n * Inserts an item in an array at the specified index\r\n * @param {*[]} arr array\r\n * @param {number} index \r\n * @param {object} item \r\n * @returns {number} The new length of the array\r\n * @memberof TYPE\r\n */\r\nexport function insert(arr, index, item) {\r\n    arr.splice(index, 0, item);\r\n\r\n    return arr.length;\r\n}\r\n\r\n/**\r\n * Returns last element of array.\r\n * @param {*[]} arr array\r\n * @memberof TYPE\r\n */\r\nexport function last(arr) {\r\n    if (!Array.isArray(arr) || isEmpty(arr)) {\r\n        return undefined;\r\n    }\r\n\r\n    return arr[arr.length - 1];\r\n}","/**\r\n * @namespace MATH\r\n */\r\n\r\n/**\r\n * Return a random integer between min and max (inclusive).\r\n * @param {number} min \r\n * @param {number} [max] \r\n * @param {boolean} [secure] \r\n * @memberof MATH\r\n*/\r\nexport function random(min, max, secure = false) {\r\n    if (max == null) {\r\n        max = min;\r\n        min = 0;\r\n    }\r\n\r\n    return min + Math.floor((secure ? secureMathRandom() : Math.random()) * (max - min + 1));\r\n}\r\n\r\n/**\r\n * More secure implementation of `Math.random`\r\n * @private\r\n */\r\nfunction secureMathRandom() {\r\n    // Divide a random UInt32 by the maximum value (2^32 -1) to get a result between 0 and 1\r\n    return window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\r\n}","import { isFunction } from '@datatype/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfies the predicate function\r\n * @param {!Node} node \r\n * @param {Function} [callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, callback) {\r\n    if (!isNode(node)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isFunction(callback)) {\r\n        return removeAllChildren(node);\r\n    }\r\n\r\n    Array.from(node.childNodes).forEach(n => {\r\n        if (callback(n)) {\r\n            node.removeChild(n);\r\n        }\r\n    });\r\n\r\n\r\n    return node;\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","obj","Array","isArray","isString","length","isDate","Date","_typeof","Object","prototype","toString","call","String","isFunction","isIterable","Symbol","iterator","isNull","isNullOrWhitespace","str","test","resolveDate","date","_date","getTime","getTimezoneOffset","formatDate","format","twoDigits","val","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","MM","getMinutes","ss","getSeconds","replace","slice","trans","lang","key","isPlural","DICT","undefined","timeAgoResponse","time","unit","_lang","en","fr","hasOwnProperty","isPrototypeOf","defProp","defineProperty","hasOwn","cloneObject","temp","constructor","capitalize","toLowerCase","s","toUpperCase","pascalCase","trim","xhrHandler","type","url","successPred","successCb","failureCb","passCb","xhr","XMLHttpRequest","onreadystatechange","callback","status","content","readyState","State","response","responseText","message","open","setRequestHeader","HttpResponse","OK","Created","Accepted","NoContent","BadRequest","Unauthorized","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","UnsupportedMediaType","InternalServerError","NotImplemented","BadGateway","ServiceUnavaible","GatewayTimeout","findByIndex","match","prop","index","some","values","fn","min","getHitCount","i","all","counter","encode","encodeURIComponent","isElementNode","nodeType","Node","ELEMENT_NODE","isElement","Element","isNode","isHTMLElement","HTMLElement","isHTMLCollection","HTMLCollection","createTemplate","html","template","document","createElement","innerHTML","appendChildren","parent","children","fragment","createDocumentFragment","from","forEach","element","appendChild","createTextNode","formatClass","c","parseClass","join","hasClass","className","Error","split","includes","removeClass","attrClass","remove","el","addClass","parsedClass","setClass","echo","o","isHTMLSelectElement","HTMLSelectElement","addAttributes","attribute","ATTR_MAP","accesskey","assign","data","dataset","editable","draggable","hidden","id","style","tabindex","title","accept","disabled","placeholder","readonly","DEFAULT_MAP","keys","create","tagName","_attribute","_children","textContent","bind","createHeader","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createParagraph","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createSource","createPicture","createFigure","createFigureCaption","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createAbbreviation","createB","createI","createS","createU","createCite","createCode","createForm","createInputAs","console","error","input","createInput","createLabel","createFieldset","createLegend","createDataList","createSelect","createOption","createOptionGroup","createTextArea","createMeter","createProgress","createOutput","createButtonAs","button","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","isClassSelector","selector","isIdSelector","getElement","_container","container","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","getElementSibling","dir","pred","predicate","sibling","findAncestor","target","max","parentElement","findAncestorIter","findAncestorInf","moveDown","label","moveUp","getType","getState","setState","check","uncheck","getInput","htmlFor","NONE","Status","SelectorFactory","BaseSelector","FormSelector","createDomQuery","name","current","setCurrentItem","item","this","activate","defaultItem","selectorItems","_this","addEventListener","len","_input","checked","_this2","isSelector","RegExp","domQuery","isSwitch","SwitchFactory","options","widget","BaseSwitch","FormSwitch","beforeChange","afterChange","isChecked","setChecked","toggle","halt","e","show","display","hide","toData","isCollapsible","isAccordion","CollapsibleFactory","instance","header","beforeOpen","afterOpen","beforeClose","afterClose","isCollapsed","isExpanded","isClosed","isInitialized","close","displayCb","state","classCb","init","bindEvents","targetCollapsible","parentNode","AccordionFactory","sections","selectedSection","accordionElements","collapsible","selected","filter","section","other","push","_options","getAccordions","accordions","accordion","collapsibleElements","getCollapsibles","collapsibles","success","fail","_successPred","pass","send","_callback","selectors","getSelectors","switcheElements","getSliders","switches","$switch","path","ccString","charAt","select","found","option","deep","importNode","t1","t2","arr1","arr2","position","top","left","body","execCommand","href","a","src","audio","cite","alt","img","rel","link","quote","text","datetime","video","_separator","part","regex","REGEX_BRACKET_DIGIT","separator","me","parts","indexOf","form","labels","warn","log","activeElement","lastIndexOf","predCb","defValue","search","decodeURIComponent","window","location","params","searchParams","URLSearchParams","entries","pair","get","firstChild","childNodes","counters","ref","maxLength","arr","splice","insertAdjacentElement","child","getPrototypeOf","DOCUMENT_FRAGMENT_NODE","n","Number","isInteger","query","ignoreNullOrEmpty","secure","Math","floor","crypto","getRandomValues","Uint32Array","random","normalize","node","removeChild","hasChildNodes","lastChild","removeAllChildren","seconds","now","DAY","HOUR","WEEK","MINUTE","innerWidth","documentElement","clientWidth"],"mappings":"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"}