{"version":3,"file":"zenkai.min.js","sources":["../src/std/std-parse.js","../src/std/std-ajax.js","../src/std/std-datetime.js","../src/std/std-object.js","../src/std/std-string.js","../src/std/std-logic.js","../src/std/std-path.js","../src/dom/dom-stat.js","../src/dom/dom-parse.js","../src/dom/dom-append.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/ui/form/floating-label.js","../src/ui/form/utils.js","../src/ui/form/selector/base-selector.js","../src/ui/form/selector/form-selector.js","../src/ui/form/selector/factory.js","../src/ui/form/selector/index.js","../src/ui/form/switch.js","../src/ui/utils.js","../src/ui/collapsible.js","../src/utils/uri-utils.js","../src/std/std-convert.js","../src/dom/copy-to-clipboard.js","../src/ui/form/input-counter.js","../src/std/std-array.js","../src/std/std-math.js","../src/dom/dom-remove.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable] indicates whether the value can be assigned the value *NULL*\r\n * @memberof TYPE\r\n */\r\nexport function valOrDefault(arg, value, isNullable) {\r\n    if (isNullable === true) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isEmpty(obj) {\r\n    return (Array.isArray(obj) || isString(obj)) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {string} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrWhitespace(str) {\r\n    return (!str || isString(str) && (str.length === 0 || /^\\s*$/.test(str)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n * @memberof TYPE\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { isFunction, valOrDefault } from \"./std-parse.js\";\r\n\r\nconst HttpResponse = {\r\n    // Successful\r\n    OK: 200,\r\n    Created: 201,\r\n    Accepted: 202,\r\n    NoContent: 204,\r\n    // Client Error\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    MethodNotAllowed: 405,\r\n    NotAcceptable: 406,\r\n    UnsupportedMediaType: 415,\r\n    // Server Error\r\n    InternalServerError: 500,\r\n    NotImplemented: 501,\r\n    BadGateway: 502,\r\n    ServiceUnavaible: 503,\r\n    GatewayTimeout: 504\r\n};\r\n\r\nconst State = {\r\n    OPENED: 1,\r\n    RECEIVED: 2,\r\n    LOADING: 3,\r\n    DONE: 4\r\n};\r\n\r\n/**\r\n * An XHR resposne\r\n * @private\r\n * @typedef {Object} xhrResponse\r\n * @property {number} status - The response status code\r\n * @property {string} message - The response content\r\n */\r\n\r\n/**\r\n * @callback xhrCallback\r\n * @param  {xhrResponse} response - The XHR response object\r\n * @private\r\n */\r\n\r\n/**\r\n * This function creates and arranges the XMLHttpRequest object\r\n * @param {('GET'|'POST'|'PUT'|'DELETE')} type The HTTP method\r\n * @param {string} url The URL to send the request \r\n * @param {*} successPred The success condition\r\n * @param {xhrCallback} successCb A callback function to handle a successful request\r\n * @param {xhrCallback} passCb A callback function to handle a valid request\r\n * @param {xhrCallback} failureCb A callback function to handle a failed request\r\n * @private\r\n */\r\nconst xhrHandler = function (type, url, successPred, successCb, failureCb, passCb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        var callback;\r\n        if (xhr.readyState === State.DONE) {\r\n            let response = createResponse(xhr.status, xhr.responseText);\r\n            if (successPred(xhr.status)) {\r\n                callback = successCb;\r\n            } else {\r\n                callback = failureCb;\r\n                if (xhr.status >= 200 && xhr.status < 300 && isFunction(passCb)) {\r\n                    callback = passCb;\r\n                }\r\n            }\r\n            if (isFunction(callback)) {\r\n                callback(response);\r\n            }\r\n        }\r\n    };\r\n    xhr.open(type, url, true);\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n    return xhr;\r\n};\r\n\r\nfunction createResponse(status, content) {\r\n    return {\r\n        status: status,\r\n        message: content\r\n    };\r\n}\r\n\r\n/**\r\n * Sends a GET request\r\n * @param {string} url The URL to send the request \r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function GET(url, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => status === HttpResponse.OK;\r\n    var xhr = xhrHandler('GET', url, successPred, success, fail, options.pass);\r\n    xhr.send();\r\n}\r\n\r\n/**\r\n * Sends a POST request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function POST(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Created].includes(status);\r\n    var xhr = xhrHandler('POST', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a PUT request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function PUT(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('PUT', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a DELETE request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function DELETE(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Accepted, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('DELETE', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}","import { valOrDefault, isNullOrUndefined, isDate } from './std-parse.js';\r\n\r\n/**\r\n * Compare 2 times\r\n * @param {string} t1 time 1\r\n * @param {string} t2 time 2\r\n * @returns {number} 1, 0, -1 if t1 > t2, t1 = t2 and t1 < t2 respectively\r\n * @memberof STD\r\n */\r\nexport function compareTime(t1, t2) {\r\n    if (isNullOrUndefined(t1) || isNullOrUndefined(t2) || !t1.includes(\":\") || !t2.includes(\":\")) {\r\n        return null;\r\n    }\r\n\r\n    var arr1 = t1.split(':');\r\n    var arr2 = t2.split(':');\r\n\r\n    // hour comparison\r\n    if (+arr1[0] > +arr2[0]) {\r\n        return 1;\r\n    } else if (+arr1[0] < +arr2[0]) {\r\n        return -1;\r\n    } else {\r\n        // minute comparison\r\n        if (+arr1[1] > +arr2[1]) {\r\n            return 1;\r\n        } else if (+arr1[1] < +arr2[1]) {\r\n            return -1;\r\n        } else {\r\n            if (arr1.length == arr2.length && arr1.length == 3) {\r\n                // second comparison\r\n                if (+arr1[2] > +arr2[2]) {\r\n                    return 1;\r\n                } else if (+arr1[2] < +arr2[2]) {\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Resolves a date value\r\n * @param {*} [date] \r\n * @returns {Date}\r\n * @private\r\n */\r\nfunction resolveDate(date) {\r\n    if (isNullOrUndefined(date)) {\r\n        return new Date();\r\n    } else if (isDate(date)) {\r\n        return date;\r\n    }\r\n\r\n    var _date = new Date(date);\r\n    return new Date(_date.getTime() + _date.getTimezoneOffset() * 60000);\r\n}\r\n\r\n/**\r\n * Formats a date\r\n * @param {!Date} date \r\n * @param {!string} format \r\n * @returns {string} Formatted date\r\n * @memberof STD\r\n */\r\nexport function formatDate(date, format) {\r\n    var dd = date.getDate();\r\n    var mm = date.getMonth() + 1;   // January = 0\r\n    var yyyy = date.getFullYear().toString();\r\n    var hh = date.getHours();\r\n    var MM = date.getMinutes();\r\n    var ss = date.getSeconds();\r\n\r\n    const twoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\n    return format.replace('yyyy', yyyy)\r\n        .replace('yy', yyyy.slice(-2))\r\n        .replace('mm', twoDigits(mm))\r\n        .replace('m', mm)\r\n        .replace('dd', twoDigits(dd))\r\n        .replace('d', dd)\r\n        .replace('hh', twoDigits(hh))\r\n        .replace('h', hh)\r\n        .replace('MM', twoDigits(MM))\r\n        .replace('M', MM)\r\n        .replace('ss', twoDigits(ss))\r\n        .replace('s', ss);\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDate(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(date, 'yyyy-mm-dd');\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd hh:MM\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDateTime(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(new Date(date + date.getTimezoneOffset() * 60000), 'yyyy-mm-dd hh:MM');\r\n}\r\n\r\nexport function parseTime(n) {\r\n    var hh = +n | 0;\r\n    var mm = '00';\r\n\r\n    if (!Number.isInteger(+n)) {\r\n        mm = (n + '').split('.')[1] * 6;\r\n    }\r\n\r\n    return hh + ':' + mm;\r\n}\r\n\r\nconst DICT = {\r\n    'en': {\r\n        'second': 'second(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'hour(s)',\r\n        'day': 'day(s)',\r\n        'week': 'week(s)',\r\n        'month': 'month(s)',\r\n        'year': 'year(s)',\r\n    },\r\n    'fr': {\r\n        'second': 'seconde(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'heure(s)',\r\n        'day': 'jour(s)',\r\n        'week': 'semaine(s)',\r\n        'month': 'mois',\r\n        'year': 'année(s)',\r\n    },\r\n};\r\n\r\nconst trans = function translation(lang, key, isPlural) {\r\n    var value = DICT[lang][key];\r\n\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (isPlural) {\r\n        return value.replace(/\\(([a-z]+)\\)/g, '$1');\r\n    }\r\n\r\n    return value.replace(/\\([a-z]+\\)/g, '');\r\n};\r\n\r\nconst timeAgoResponse = function timeAgoResponseBuilder(time, unit, _lang) {\r\n    var lang = valOrDefault(_lang, 'en');\r\n    var isPlural = time === 1;\r\n    var msg = {\r\n        en: `${time} ${trans('en', unit, isPlural)} ago`,\r\n        fr: `il y a ${time} ${trans('fr', unit, isPlural)}`,\r\n    };\r\n\r\n    return msg[lang];\r\n};\r\n\r\n/**\r\n * Returns the ellapsed time between now and a point in time\r\n * @param {*} time \r\n * @param {*} _callback \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function timeAgo(time, _callback) {\r\n    var callback = valOrDefault(_callback, timeAgoResponse);\r\n\r\n    const seconds = Math.floor((Date.now() - resolveDate(time).getTime()) / 1000);\r\n    const MINUTE = 60;\r\n    const HOUR = MINUTE * 60;\r\n    const DAY = HOUR * 24;\r\n    const WEEK = DAY * 7;\r\n    const MONTH = DAY * 30;\r\n    const YEAR = WEEK * 52;\r\n\r\n    if (seconds < MINUTE) {\r\n        return callback(seconds, 'second');\r\n    } else if (seconds < HOUR) {\r\n        return callback(~~(seconds / MINUTE), 'minute');\r\n    } else if (seconds < DAY) {\r\n        return callback(~~(seconds / HOUR), 'hour');\r\n    } else if (seconds < WEEK) {\r\n        return callback(~~(seconds / DAY), 'day');\r\n    } else if (seconds < MONTH) {\r\n        return callback(~~(seconds / WEEK), 'week');\r\n    } else if (seconds < YEAR) {\r\n        return callback(~~(seconds / MONTH), 'month');\r\n    } else {\r\n        return callback(~~(seconds / YEAR), 'year');\r\n    }\r\n}","/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\nexport const defProp = Object.defineProperty;\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) { return hasOwnProperty.call(obj, key); };\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} obj \r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (obj === null || typeof (obj) !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return isNullOrWhitespace(str) ? str : str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Sequence\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { isNullOrUndefined } from \"./std-parse\";\r\n\r\n/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const some = function (values, pred) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that at the condition is satisfied for a a number of value\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @param {number} [max=-1] Minimum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const assert = function (values, pred, min, max) {\r\n    if (max < min) {\r\n        console.error(\"`max` must be greater than `min`\");\r\n        return;\r\n    }\r\n\r\n    var hitCount = getHitCount(values, pred);\r\n\r\n    if (all([min, max], Number.isInteger)) {\r\n        return hitCount >= min && hitCount <= max;\r\n    }\r\n    if(Number.isInteger(min)) {\r\n        return hitCount >= min;\r\n    }\r\n    if(Number.isInteger(max)) {\r\n        return hitCount <= max;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof STD\r\n */\r\nexport const all = function (values, pred) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (!pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const one = function (values, pred) {\r\n    return getHitCount(values, pred) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const no = function (values, pred) {\r\n    return getHitCount(values, pred) === 0;\r\n};\r\n\r\n/**\r\n * Verifies that at most one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at most one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const lone = function (values, pred) {\r\n    return getHitCount(values, pred) <= 1;\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} values \r\n * @param {*} pred \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, pred) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","import { isNullOrWhitespace, isNullOrUndefined, valOrDefault } from './std-parse.js';\r\nimport { cloneObject } from './std-object.js';\r\n\r\n/**\r\n * Append the path to the current path\r\n * @param {string} target \r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function addPath(target, path) { return isNullOrWhitespace(target) ? path : target + '.' + path; }\r\n\r\n/**\r\n * Returns the directory of the path\r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function getDir(path) { return path.substring(0, path.lastIndexOf('.')); }\r\n\r\n/**\r\n * Returns the directory of the path from the target\r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function getDirTarget(path, target) { return path.substring(0, path.lastIndexOf(target) - 1); }\r\n\r\nfunction findByIndex(obj, match, prop) {\r\n    const REGEX_DIGIT = /\\d+/g;\r\n    var index = +match[0].match(REGEX_DIGIT);\r\n    return obj[prop][index];\r\n}\r\n\r\n/**\r\n * Returns an element in an object using its path\r\n * @param {Object} obj\r\n * @param {string} path  \r\n * @param {string} [_separator=.]\r\n * @memberof STD\r\n */\r\nexport function findByPath(obj, path, _separator) {\r\n    const REGEX_BRACKET_DIGIT = /\\[\\d+\\]/g;\r\n    const REGEX_BRACKET_WORD = /\\[\\w+\\]/g;\r\n    \r\n    const separator = valOrDefault(_separator, '.');\r\n    var me = cloneObject(obj);\r\n\r\n    const findHandler = function (part, regex, callback) {\r\n        var match = part.match(regex);\r\n        var prop = part.substring(0, part.indexOf('['));\r\n        return callback(me, match, prop);\r\n    };\r\n\r\n    var parts = path.split(separator);\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n\r\n        if (REGEX_BRACKET_DIGIT.test(part)) {\r\n            me = findHandler(part, REGEX_BRACKET_DIGIT, findByIndex);\r\n        } else {\r\n            me = me[part];\r\n        }\r\n\r\n        if (isNullOrUndefined(me)) {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    return me;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport const windowWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\r\n/**\r\n * Gets the window's height\r\n * @memberof DOM\r\n */\r\nexport const windowHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;","import { isNullOrUndefined, isString, isIterable, hasOwn, pascalCase, isEmpty, all, some } from '@std/index.js';\r\nimport { windowWidth, windowHeight } from './dom-stat.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTML Element*\r\n * @param {Element} obj \r\n * @param {string|string[]|string[][]} [kind] \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj, kind) => {\r\n    if (!(isElementNode(obj) && obj instanceof HTMLElement)) {\r\n        return false;\r\n    }\r\n\r\n    if (isIterable(kind)) {\r\n        return isHTMLElementKind(obj, Array.isArray(kind) ? kind : [kind]);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst TagNameMapping = {\r\n    'a': \"Anchor\",\r\n    'br': \"BR\",\r\n    'dl': \"DList\",\r\n    'datalist': \"DataList\",\r\n    'fieldset': \"FieldSet\",\r\n    'frameset': \"FrameSet\",\r\n    'hr': \"HR\",\r\n    'h1': \"Heading\",\r\n    'h2': \"Heading\",\r\n    'h3': \"Heading\",\r\n    'h4': \"Heading\",\r\n    'h5': \"Heading\",\r\n    'h6': \"Heading\",\r\n    'li': \"LI\",\r\n    'ol': \"OList\",\r\n    'optgroup': \"OptGroup\",\r\n    'p': \"Paragraph\",\r\n    'q': \"Quote\",\r\n    'blockquote': \"Quote\",\r\n    'caption': \"TableCaption\",\r\n    'td': \"TableCell\",\r\n    'th': \"TableCell\",\r\n    'col': \"TableCol\",\r\n    'tr': \"TableRow\",\r\n    'tbody': \"TableSection\",\r\n    'thead': \"TableSection\",\r\n    'tfoot': \"TableSection\",\r\n    'textarea': \"TextArea\",\r\n    'ul': \"UList\",\r\n};\r\n\r\n/**\r\n * Verifies the tag of an *HTML Element*\r\n * @param {HTMLElement} element \r\n * @param {string[]|string[][]} kinds\r\n * @returns {boolean}\r\n */\r\nfunction isHTMLElementKind(element, kinds) {\r\n    const isInstanceOf = (obj) => element instanceof obj;\r\n    const hasTag = (tag) => element.tagName === tag.toUpperCase();\r\n    const isOfType = (type) => Array.isArray(type) ? type.includes(element.type) : element.type === type;\r\n\r\n    some(kinds, (kind) => {\r\n        if (!isIterable(kind)) {\r\n            return false;\r\n        }\r\n\r\n        var name = kind;\r\n        var type = null;\r\n        if (Array.isArray(kind)) {\r\n            [name, type] = kind;\r\n        }\r\n\r\n        var interfaceName = `HTML${hasOwn(TagNameMapping, name) ? TagNameMapping[name] : pascalCase(name)}Element`;\r\n\r\n        if (!(isInstanceOf(window[interfaceName]) || hasTag(name))) {\r\n            return false;\r\n        }\r\n\r\n        if (isIterable(type) && !isEmpty(type)) {\r\n            return isOfType(type);\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Creates a template with content\r\n * @param {string} html \r\n * @returns {HTMLTemplateElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createTemplate(html) {\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content;\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction _htmlToElement(prop, html) {\r\n    if (!isString(html)) {\r\n        return null;\r\n    }\r\n\r\n    var template = createTemplate(html);\r\n\r\n    return template[prop];\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElement = _htmlToElement.bind('firstChild');\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElements = _htmlToElement.bind('childNodes');\r\n\r\n/**\r\n * Verifies that an element is visible\r\n * @param {!HTMLElement} element \r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInViewport(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return top >= 0 && left >= 0 && bottom <= windowHeight() && right <= windowWidth();\r\n}\r\n\r\n/**\r\n * Verifies that an element is displayed inside a target element\r\n * @param {!HTMLElement} element \r\n * @param {!HTMLElement} target\r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInElement(element, target) {\r\n    if (!all([element, target], isHTMLElement)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top: top1, right: right1, bottom: bottom1, left: left1 } = element.getBoundingClientRect();\r\n    var { top: top2, right: right2, bottom: bottom2, left: left2 } = target.getBoundingClientRect();\r\n\r\n    return all([[top2, top1], [left2, left1], [right1, right2], [bottom1, bottom2]], (inner, outer) => inner <= outer);\r\n}","import { isIterable, isString, all } from '@std/index.js';\r\nimport { isNode, isElement, isHTMLCollection } from './dom-parse.js';\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new Error(\"The given element or target is not a valid HTML Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new Error(\"The given element or target is not a valid HTML Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {!HTMLElement} target \r\n * @param {!HTMLElement} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new Error(\"The given element or target is not a valid HTML Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {Element} parent\r\n * @param {!HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    if (!isNode(parent)) {\r\n        throw new Error(\"The given parent is not a valid Node\");\r\n    }\r\n    \r\n    if (!isHTMLCollection(children) && !isIterable(children) || isString(children)) {\r\n        throw new Error(\"The given children is not a valid HTMLCollection/HTMLElement array\");\r\n    }\r\n\r\n    var fragment = document.createDocumentFragment();\r\n    \r\n    Array.from(children).forEach(element => {\r\n        fragment.appendChild(isNode(element) ? element : document.createTextNode(element.toString()));\r\n    });\r\n    parent.appendChild(fragment);\r\n\r\n    return parent;\r\n}","import { isObject, isNullOrUndefined } from '@std/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/* istanbul ignore next */\r\nfunction echo(o) { }\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} c class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (c) => c.replace(/\\s+/g, ' ').trim();\r\n\r\n/**\r\n * Transform a raw value to a valid class value\r\n * @param {string} c raw value\r\n * @returns {string} parsed value\r\n * @private\r\n */\r\nconst parseClass = (c) => {\r\n    if (isNullOrUndefined(c)) {\r\n        return \"\";\r\n    } else if (Array.isArray(c)) {\r\n        return c.join(' ');\r\n    }\r\n\r\n    return c.toString();\r\n};\r\n\r\nfunction setClass(element, attrClass) {\r\n    element.className = formatClass(parseClass(attrClass));\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isObject(attribute)) {\r\n        return element;\r\n    }\r\n\r\n    const ATTR_MAP = {\r\n        // Global attributes\r\n        accesskey: [assign, 'accessKey'],\r\n        class: [setClass, element],\r\n        data: [Object.assign, element.dataset],\r\n        editable: [assign, 'contentEditable'],\r\n        draggable: [assign],\r\n        hidden: [assign],\r\n        id: [assign],\r\n        lang: [assign],\r\n        html: [assign, 'innerHTML'],\r\n        style: [assign],\r\n        target: [assign],\r\n        tabindex: [assign, 'tabIndex'],\r\n        text: [assign, 'textContent'],\r\n        title: [assign],\r\n        // Quote attributes\r\n        cite: [assign],\r\n        // Anchor attributes\r\n        href: [assign],\r\n        // Link attributes\r\n        alt: [assign],\r\n        src: [assign],\r\n        // Form attributes\r\n        accept: [assign],\r\n        disabled: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        value: [assign],\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attribute[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        element[key] = val;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {string} value option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, value) {\r\n    if (!isHTMLElement(select, \"select\")) {\r\n        throw new Error(\"The given select parameter is not a valid HTML Select element\");\r\n    }\r\n\r\n    if (isNullOrUndefined(value)) {\r\n        throw new Error(\"The given value parameter is a null or undefined\");\r\n    }\r\n\r\n    var options = select.options;\r\n    for (let i = 0; i < options.length; i++) {\r\n        let option = options[i];\r\n\r\n        if (option.value === value.toString()) {\r\n            option.selected = true;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { isNullOrUndefined } from \"@std/index.js\";\r\nimport { isNode, isHTMLElement } from \"./dom-parse.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n/**\r\n * Creates an element\r\n * @param {string} tagName \r\n * @param {object} [_attribute] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_children] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction create(tagName, _attribute, _children) {\r\n    var element = document.createElement(tagName);\r\n\r\n    if (!isNullOrUndefined(_attribute)) {\r\n        addAttributes(element, _attribute);\r\n    }\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(element, _children);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment(_children) {\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(fragment, _children);\r\n    }\r\n\r\n    return fragment;\r\n}\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @param {string} href \r\n * @param {string} rel \r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport function createLink(href, rel) {\r\n    var link = create(\"link\");\r\n\r\n    if (href) {\r\n        link.href = href;\r\n    }\r\n\r\n    if (rel) {\r\n        link.rel = rel;\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = create.bind(null, 'template');\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = create.bind(null, 'header');\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = create.bind(null, 'footer');\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = create.bind(null, 'main');\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = create.bind(null, 'article');\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = create.bind(null, 'section');\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = create.bind(null, 'nav');\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = create.bind(null, 'aside');\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = create.bind(null, 'h1');\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = create.bind(null, 'h2');\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = create.bind(null, 'h3');\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = create.bind(null, 'h4');\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = create.bind(null, 'h5');\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = create.bind(null, 'h6');\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = create.bind(null, 'div');\r\n\r\n/**\r\n * Creates a `br` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @returns {HTMLBRElement}\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = () => create('br');\r\n\r\n/**\r\n * Creates a `hr` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @returns {HTMLHRElement}\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = () => create('hr');\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = create.bind(null, 'p');\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function createBlockQuotation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createBlockQuotation = create.bind(null, 'blockquote');\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = create.bind(null, 'ul');\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = create.bind(null, 'ol');\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = create.bind(null, 'li');\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = create.bind(null, 'dl');\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = create.bind(null, 'dt');\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = create.bind(null, 'dd');\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport function createAnchor(href, _attribute, _children) {\r\n    var a = create('a', _attribute, _children);\r\n\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createImage(src, alt, _attribute) {\r\n    var img = create('img', _attribute);\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createAudio(src, attribute, children) {\r\n    var audio = create('audio', attribute, children);\r\n\r\n    if (src) {\r\n        audio.src = src;\r\n    }\r\n\r\n    return audio;\r\n}\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @param {string} src\r\n  * @param {object} attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport function createVideo(src, attribute, children) {\r\n    var video = create('video', attribute, children);\r\n\r\n    if (src) {\r\n        video.src = src;\r\n    }\r\n\r\n    return video;\r\n}\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = create.bind(null, \"source\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = create.bind(null, \"picture\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = create.bind(null, \"figure\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = create.bind(null, \"figcaption\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = create.bind(null, \"span\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = create.bind(null, \"strong\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = create.bind(null, \"em\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = create.bind(null, \"mark\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = create.bind(null, \"samp\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = create.bind(null, \"sub\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = create.bind(null, \"sup\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport function createQuote(cite, _attribute, children) {\r\n    var quote = create('q', _attribute, children);\r\n\r\n    if (cite) {\r\n        quote.cite = cite;\r\n    }\r\n\r\n    return quote;\r\n}\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = create.bind(null, \"abbr\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = create.bind(null, \"b\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = create.bind(null, \"i\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = create.bind(null, 's');\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = create.bind(null, 'u');\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = create.bind(null, \"cite\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @param {string} datetime \r\n * @param {object} attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport function createTime(datetime, _attribute) {\r\n    var element = create('time', _attribute);\r\n\r\n    if (datetime) {\r\n        element.datetime = datetime;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = create.bind(null, \"code\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = create.bind(null, 'form');\r\n\r\nconst inputTypes = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\r\n\r\n/**\r\n * Creates an `<input>` element with a specified type and \r\n * optionally some attributes\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @memberof DOM\r\n */\r\nexport function createInputAs(type, _attribute) {\r\n    if (!inputTypes.includes(type)) {\r\n        return null;\r\n    }\r\n\r\n    var input = create('input', _attribute);\r\n    input.type = type;\r\n\r\n    return input;\r\n}\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createInputAs.bind(null, \"text\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = create.bind(null, 'label');\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = create.bind(null, 'fieldset');\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = create.bind(null, 'legend');\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = create.bind(null, 'datalist');\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = create.bind(null, 'select');\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = create.bind(null, 'option');\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = create.bind(null, 'optgroup');\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = create.bind(null, 'textarea');\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = create.bind(null, 'meter');\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = create.bind(null, 'progress');\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = create.bind(null, 'output');\r\n\r\nconst buttonTypes = [\"button\", \"submit\", \"reset\"];\r\n\r\n/**\r\n * Creates a `<button>` element with a specified type and \r\n * optionally some attributes and children elements\r\n * @param {string} type\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport function createButtonAs(type, _attribute, _children) {\r\n    if (!buttonTypes.includes(type)) {\r\n        return null;\r\n    }\r\n\r\n    var button = create(\"button\", _attribute, _children);\r\n    button.type = type;\r\n\r\n    return button;\r\n}\r\n\r\n/**\r\n * Creates a `<button>` element with some attributes\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @memberof DOM\r\n */\r\nexport const createButton = createButtonAs.bind(null, \"button\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = create.bind(null, \"table\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = create.bind(null, \"caption\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = create.bind(null, \"thead\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = create.bind(null, \"tbody\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = create.bind(null, \"tfoot\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = create.bind(null, \"col\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = create.bind(null, \"colgroup\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = create.bind(null, \"tr\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = create.bind(null, \"th\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = create.bind(null, \"td\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} element element\r\n * @param {HTMLCollection} children children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, children) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    if (isNullOrUndefined(children)) {\r\n        return element;\r\n    }\r\n\r\n    if (Array.isArray(children)) {\r\n        appendChildren(element, children);\r\n    } else if (isNode(children)) {\r\n        element.appendChild(children);\r\n    } else {\r\n        element.textContent = children.toString();\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@std/index.js';\r\nimport { isElement } from './dom-parse.js';\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (container instanceof DocumentFragment) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {string} dir sibling direction\r\n * @param {HTMLElement} element element\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(dir, element, pred) {\r\n    var sibling = element[dir];\r\n\r\n    if (isFunction(pred)) {\r\n        while (isElement(sibling) && pred(sibling)) {\r\n            sibling = sibling[dir];\r\n        }\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @function getPreviousElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport const getPreviousElementSibling = getElementSibling.bind(null, \"previousElementSibling\");\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @function getNextElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport const getNextElementSibling = getElementSibling.bind(null, \"nextElementSibling\");\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} [_max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, pred, _max) {\r\n    if (!isElement(target)) {\r\n        throw new Error(\"The given target parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isFunction(pred)) {\r\n        throw new Error(\"The given pred parameter is not a valid Function\");\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n    \r\n    if (_max > 0) {\r\n        return findAncestorIter(parent, pred, _max - 1);\r\n    }\r\n\r\n    return findAncestorInf(parent, pred);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, pred) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, pred);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} max Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, pred, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, pred, max - 1);\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isEmpty } from '@std/index.js';\r\n\r\n/**\r\n * Update class related to the action *move label down*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveDown = (label) => label.classList.add('down');\r\n\r\n/**\r\n * Update class related to the action *move label up*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveUp = (label) => label.classList.remove('down');\r\n\r\n/**\r\n * Update class related to the action *add focus to element*\r\n * @param {HTMLElement} element \r\n */\r\nconst addFocus = (element) => element.classList.add('focused');\r\n\r\n/**\r\n * Update class related to the action *remove focus from element*\r\n * @param {HTMLElement} element \r\n */\r\nconst removeFocus = (element) => element.classList.remove('focused');\r\n\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isHTMLElement(input)) {\r\n                if (isNullOrWhitespace(input.placeholder)) {\r\n                    bindEvents(input, label);\r\n                    if (isEmpty(input.value)) {\r\n                        moveDown(label);\r\n                    }\r\n                } else {\r\n                    console.warn(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Input \"${label.htmlFor}\" contains a placeholder`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n                }\r\n            } else {\r\n                console.error(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Missing input for label \"${label.htmlFor}\"`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                console.log(\"focus called\");\r\n                input.placeholder = \"\";\r\n                moveUp(label);\r\n                addFocus(label.parentElement);\r\n            });\r\n            input.addEventListener('blur', function (e) {\r\n                console.log(\"blur called\");\r\n                if (isEmpty(this.value)) {\r\n                    moveDown(label);\r\n                }\r\n                removeFocus(label.parentElement);\r\n            });\r\n            input.addEventListener('input', function (e) {\r\n                console.log(\"input called\");\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        moveDown(label);\r\n                    } else {\r\n                        moveUp(label);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { isHTMLElement, getElements, getElement } from \"@dom/index.js\";\r\nimport { valOrDefault, isString, isNullOrUndefined, isNullOrWhitespace, isEmpty } from \"@std/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));\r\n\r\nexport function getComponentElement(container, pred, selector) {\r\n    if (isHTMLElement(container)) {\r\n        return pred(container) ? [container] : getElements(selector, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? null : getComponentElement(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(selector);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    \r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { isFunction, isNullOrUndefined, isNull, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { check, uncheck, getState } from '../utils.js';\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nexport const BaseSelectorItem = {\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {number} */\r\n    index: null,\r\n    /** @returns {string} */\r\n    get value() { return this.container.dataset['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return getState(this.container) === Status.ON; },\r\n    /** @returns {boolean} */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n};\r\n\r\nexport const BaseSelector = {\r\n    name: 'selector',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.selectedItem.value;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n    init() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n            if (item.value === value) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            const target = event.target;\r\n            if (!hasOwn(target.dataset, 'selector')) {\r\n                return;\r\n            }\r\n            \r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            const item = this.items.find((i) => i.index === +valOrDefault(target.dataset.selectorIndex, -1));\r\n            if(isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, isNull, valOrDefault } from '@std/index.js';\r\nimport { check, uncheck, getState } from '../utils.js';\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nexport const FormSelectorItem = {\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLInputElement} */\r\n    input: null,\r\n    /** @type {number} */\r\n    index: null,\r\n    /** @returns {string} */\r\n    get value() { return this.input['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return this.input.checked; },\r\n    /**\r\n     * Set the state of the item\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} Value indicating the success of the operation\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            this.input.checked = true;\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            this.input.checked = false;\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n};\r\n\r\nexport const FormSelector = {\r\n    name: 'form-selector',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {FormSelectorItem[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.selectedItem.value;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n    init() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n            if (item.value === value) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('change', (event) => {\r\n            const target = event.target;            \r\n\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                target.checked = false;\r\n                this.items[this.selectedIndex].setChecked(true);\r\n                return;\r\n            }\r\n\r\n            const item = this.items.find((i) => i.index === +valOrDefault(target.dataset.selectorIndex, -1));\r\n            if(isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { getElements, isHTMLElement, isNodeList, createListItem } from '@dom/index.js';\r\nimport { getInput, getType } from \"../utils.js\";\r\nimport { BaseSelector, BaseSelectorItem } from './base-selector.js';\r\nimport { FormSelector, FormSelectorItem } from './form-selector.js';\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER: 'BAD_CONTAINER',\r\n    BAD_INPUT: 'BAD_INPUT'\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nexport const DOMQuerySelector = {\r\n    BaseSelector: createDomQuery(BaseSelector),\r\n    FormSelector: createDomQuery(FormSelector)\r\n};\r\n\r\nexport const Factory = {\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var itemContainers = getElements('[data-selector]', container);\r\n        if (!isNodeList(itemContainers)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var widget = null;\r\n        var items = null;\r\n        var type = getType(container);\r\n\r\n        switch (type) {\r\n            case 'selector':\r\n                items = createSelectorItem(itemContainers, type, false);\r\n                widget = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                items = createSelectorItem(itemContainers, type, true);\r\n                widget = Object.create(FormSelector);\r\n                break;\r\n        }\r\n\r\n        Object.assign(widget, options, {\r\n            container: container,\r\n            items: items,\r\n            querySelector: createDomQuery(widget),\r\n        });\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nfunction createSelectorItem(itemContainers, type, hasInput) {\r\n    var items = [];\r\n\r\n    var typeHandler = {\r\n        'selector': Object.create(BaseSelectorItem),\r\n        'form-selector': Object.create(FormSelectorItem),\r\n    };\r\n\r\n    for (let i = 0; i < itemContainers.length; i++) {\r\n        let itemContainer = itemContainers[i];\r\n        itemContainer.dataset.selectorIndex = i;\r\n\r\n        let args = {\r\n            container: itemContainer,\r\n            index: i\r\n        };\r\n\r\n        if (hasInput) {\r\n            let input = getInput('radio', itemContainer);\r\n            if (!isHTMLElement(input)) {\r\n                return ErrorCode.BAD_INPUT;\r\n            }\r\n            input.dataset.selectorIndex = i;\r\n            \r\n            Object.assign(args, { input: input });\r\n        }\r\n\r\n        let item = typeHandler[type]().init(args);\r\n\r\n        items.push(item);\r\n    }\r\n\r\n    return items;\r\n}","import { isNullOrUndefined, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { getComponentElement } from '../utils.js';\r\nimport { Factory, DOMQuerySelector } from \"./factory.js\";\r\n\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER: new Error(\"Missing container: A selector requires a container\"),\r\n    BAD_INPUT: new Error(\"Missing input: FormSelector requires an input in the container\"),\r\n};\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [DOMQuerySelector.BaseSelector, DOMQuerySelector.FormSelector].join(',');\r\n\r\nexport function Selector(container, _options) {\r\n    const selectorElements = getComponentElement(container, isSelector, domQuery);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(selectorElements)) {\r\n        return null;\r\n    }\r\n\r\n    var selectors = [];\r\n\r\n    for (let i = 0; i < selectorElements.length; i++) {\r\n        let selector = Factory.create(selectorElements[i], options);\r\n        if (hasOwn(ErrorHandler, selector)) {\r\n            throw ErrorHandler[selector];\r\n        }\r\n        selector.init();\r\n\r\n        selectors.push(selector);\r\n    }\r\n\r\n    return selectors;\r\n}\r\n\r\nexport const SelectorFactory = Factory; ","import { isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isNullOrUndefined, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { check, uncheck, getState, getType, getComponentElement, getInput } from \"./utils.js\";\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER: 'BAD_CONTAINER',\r\n    BAD_INPUT: 'BAD_INPUT'\r\n};\r\n\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER: new Error(\"Missing container: A switch requires a container\"),\r\n    BAD_INPUT: new Error(\"Missing input: FormSwitch requires an input in the container\"),\r\n};\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst SwitchFactory = {\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var widget = null;\r\n        var input = null;\r\n\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                input = getInput('checkbox', container);\r\n                if (!isHTMLElement(input)) {\r\n                    return ErrorCode.BAD_INPUT;\r\n                }\r\n                options.input = input;\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n\r\n        Object.assign(widget, options, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.container.dataset['value'];\r\n    },\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLInputElement} */\r\n    input: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.input.value;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        this.input.checked = isChecked;\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.input.checked) {\r\n            this.setChecked(true);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.input.addEventListener('change', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                this.input.checked = !this.input.checked;   // revert input checked state\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nexport function Switch(container, _options) {\r\n    const switcheElements = getComponentElement(container, isSwitch, domQuery);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(switcheElements)) {\r\n        return null;\r\n    }\r\n\r\n    var switches = [];\r\n\r\n    for (let i = 0; i < switcheElements.length; i++) {\r\n        let $switch = SwitchFactory.create(switcheElements[i], options);\r\n        if (hasOwn(ErrorHandler, $switch)) {\r\n            throw ErrorHandler[$switch];\r\n        }\r\n        $switch.init();\r\n\r\n        switches.push($switch);\r\n    }\r\n\r\n    return switches;\r\n}","/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) { element.style.display = \"block\"; }\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) { element.style.display = \"none\"; }","import { getElement, getElements, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isNullOrUndefined, isFunction, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { show, hide } from './utils.js';\r\nimport { getComponentElement } from './form/utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER_COLLAPSIBLE: 'BAD_CONTAINER_COLLAPSIBLE',\r\n    BAD_CONTAINER_ACCORDION: 'BAD_CONTAINER_ACCORDION',\r\n};\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER_COLLAPSIBLE: new Error(\"Missing container: A collapsible requires a container\"),\r\n    BAD_CONTAINER_ACCORDION: new Error(\"Missing container: An accordion requires a container\"),\r\n};\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    /** @returns {CollapsibleFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_COLLAPSIBLE;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    name: 'collapsible',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement} */\r\n    header: null,\r\n    /** @type {HTMLElement} */\r\n    content: null,\r\n    /** @type {Function} */\r\n    beforeOpen: null,\r\n    /** @type {Function} */\r\n    afterOpen: null,\r\n    /** @type {Function} */\r\n    beforeClose: null,\r\n    /** @type {Function} */\r\n    afterClose: null,\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    /** Verifies that the container is collapsed (closed) */\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    /** Verifies that the container is expanded (open) */\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    isClosed: false,\r\n    isInitialized: false,\r\n    /** Opens the container and calls the defined pre/post operations */\r\n    open() {\r\n        if (this.isInitialized && !this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeOpen)) {\r\n            halt = this.beforeOpen(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(show, State.OPEN, 'add');\r\n\r\n        if (isFunction(this.afterOpen)) {\r\n            this.afterOpen(this);\r\n        }\r\n\r\n        this.isClosed = false;\r\n\r\n        return this;\r\n    },\r\n    /** Closes the container and calls the defined pre/post operations */\r\n    close() {\r\n        if (this.isInitialized && this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeClose)) {\r\n            halt = this.beforeClose(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(hide, State.CLOSED, 'remove');\r\n\r\n        if (isFunction(this.afterClose)) {\r\n            this.afterClose(this);\r\n        }\r\n\r\n        this.isClosed = true;\r\n\r\n        return this;\r\n    },\r\n    toggle(displayCb, state, action) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        this.container.classList[action]('expanded');\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        this.header = getElement(`[data-${this.name}-header]`, this.container);\r\n        this.content = getElement(`[data-${this.name}-content]`, this.container);\r\n\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.isClosed = true;\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n\r\n        this.isInitialized = true;\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.isCollapsed()) {\r\n                    this.open();\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    /** @returns {AccordionFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_ACCORDION;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {CollapsibleFactory[]} */\r\n    sections: null,\r\n    /** @type {CollapsibleFactory} */\r\n    selectedSection: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    init() {\r\n        this.sections = [];\r\n\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let element = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create(element, {\r\n                name: 'accordion',\r\n                index: i,\r\n                afterOpen: (selected) => {\r\n                    if (isFunction(this.beforeChange)) {\r\n                        this.beforeChange(selected);\r\n                    }\r\n\r\n                    this.sections.filter((section) => section.index !== selected.index)\r\n                        .forEach((other) => other.close());\r\n\r\n                    if (isFunction(this.afterChange)) {\r\n                        this.afterChange(selected);\r\n                    }\r\n\r\n                    this.selectedSection = selected;\r\n                }\r\n            });\r\n            if (hasOwn(ErrorCode, collapsible)) {\r\n                return collapsible;\r\n            }\r\n            this.sections.push(collapsible);\r\n            collapsible.init();\r\n        }\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\n/**\r\n * Makes a container collapsible\r\n * @param {!HTMLElement} container \r\n * @param {Object} [options]\r\n */\r\nexport function Collapsible(container, _options) {\r\n    var collapsibleElements = getComponentElement(container, isCollapsible, '[data-collapsible]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(collapsibleElements)) {\r\n        return null;\r\n    }\r\n\r\n    var collapsibles = [];\r\n\r\n    for (let i = 0; i < collapsibleElements.length; i++) {\r\n        let collapsible = CollapsibleFactory.create(collapsibleElements[i], options);\r\n        if (hasOwn(ErrorHandler, collapsible)) {\r\n            throw ErrorHandler[collapsible];\r\n        }\r\n        collapsible.init();\r\n\r\n        collapsibles.push(collapsible);\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Transforms a container into an accordion\r\n * @param {!HTMLElement} container \r\n * @param {Object} [_options]\r\n */\r\nexport function Accordion(container, _options) {\r\n    var accordionElements = getComponentElement(container, isAccordion, '[data-boost=accordion]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(accordionElements)) {\r\n        return null;\r\n    }\r\n\r\n    var accordions = [];\r\n\r\n    for (let i = 0; i < accordionElements.length; i++) {\r\n        let accordion = AccordionFactory.create(accordionElements[i], options);\r\n        if (hasOwn(ErrorHandler, accordion)) {\r\n            throw ErrorHandler[accordion];\r\n        }\r\n        accordion.init();\r\n        accordions.push(accordion);\r\n    }\r\n\r\n    return accordions;\r\n}\r\n","/**\r\n * @namespace URI\r\n */\r\n\r\nimport { isNullOrWhitespace, valOrDefault } from '@std/index.js';\r\n\r\nconst encode = encodeURIComponent;\r\n\r\n/**\r\n * Extracts and returns the protocol and host of a given url\r\n * @param {string} url \r\n * @memberof URI\r\n */\r\nexport function getRootUrl(url) {\r\n    return url.toString().replace(/^(.*\\/\\/[^/?#]*).*$/, \"$1\");\r\n}\r\n\r\n/**\r\n * Extracts and returns the parameters of a URL\r\n * @param {string} [prop] Searched parameter\r\n * @param {string} [defValue] Searched parameter default value\r\n * @memberof URI\r\n */\r\nexport function getUrlParams(prop, defValue) {\r\n    var search = decodeURIComponent(window.location.search);\r\n\r\n    if (isNullOrWhitespace(search)) {\r\n        return null;\r\n    }\r\n\r\n    var params = {};\r\n    if ('URLSearchParams' in window) {\r\n        let searchParams = new URLSearchParams(search.substring(1));\r\n        for (const pair of searchParams.entries()) {\r\n            params[pair[0]] = pair[1];\r\n        }\r\n        if (prop) {\r\n            return searchParams.get(prop);\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    var defs = search.substring(1).split('&');\r\n    defs.forEach((val) => {\r\n        var parts = val.split('=', 2);\r\n        params[parts[0]] = parts[1];\r\n    });\r\n    \r\n    if (prop) {\r\n        return valOrDefault(params[prop], defValue);\r\n    }\r\n\r\n    return params;\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction getParams(href) {\r\n    return href.slice(href.indexOf('?') + 1);\r\n}\r\n\r\n/**\r\n * Creates a query string\r\n * @param {Object} query \r\n * @returns {string} Query string\r\n * @memberof URI\r\n */\r\nexport function queryBuilder(query, ignoreNullOrEmpty = false) {\r\n    var str = [];\r\n\r\n    Object.keys(query).forEach((prop) => {\r\n        if (!ignoreNullOrEmpty || !isNullOrWhitespace(query[prop])) {\r\n            str.push(`${encode(prop)}=${encode(query[prop])}`);\r\n        }\r\n    });\r\n\r\n    return str.join('&');\r\n}","import { valOrDefault } from \"./std-parse.js\";\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof STD\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof STD\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n","import { isNullOrUndefined } from '@std/index.js';\r\nimport { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Copy content to clipboard\r\n * @param {HTMLElement|string} value\r\n * @returns {boolean} Value indicating whether the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value.toString(),\r\n        readonly: true\r\n    });\r\n\r\n    if(!isHTMLElement(element)) {\r\n        return false;\r\n    }\r\n\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\n\r\n/**\r\n * Add a counter to an input element\r\n * @param {HTMLElement} container \r\n */\r\nexport function inputCounter(container) {\r\n    const counters = getElements('[data-counter]', container);\r\n\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let ref = counter.dataset['counter'];\r\n        let input = getElement(`#${ref}`);\r\n        if (isHTMLElement(input)) {\r\n            counter.dataset['counterMax'] = input.maxLength;\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            bindEvents(input, counter);\r\n        } else {\r\n            console.error(`%c@zenkai%c #InputCounter>%cinputCounter:%c Failed to add counter ${ref}. Input (referenced) was not found.`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLElement} counter \r\n     */\r\n    function bindEvents(input, counter) {\r\n        input.addEventListener('input', function (e) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n        });\r\n    }\r\n\r\n    return counters;\r\n}","import { isEmpty } from \"./std-parse.js\";\r\n\r\n/**\r\n * Inserts an item in an array at the specified index\r\n * @param {*[]} arr array\r\n * @param {number} index \r\n * @param {object} item \r\n * @returns {number} The new length of the array\r\n * @memberof STD\r\n */\r\nexport function insert(arr, index, item) {\r\n    arr.splice(index, 0, item);\r\n\r\n    return arr.length;\r\n}\r\n\r\n/**\r\n * Returns last element of array.\r\n * @param {*[]} arr array\r\n * @memberof STD\r\n */\r\nexport function last(arr) {\r\n    if (!Array.isArray(arr) || isEmpty(arr)) {\r\n        return undefined;\r\n    }\r\n\r\n    return arr[arr.length - 1];\r\n}","import { isNullOrUndefined } from \"./std-parse\";\r\n\r\n/**\r\n * Return a random integer between min and max (inclusive).\r\n * @param {number} min \r\n * @param {number} [max] \r\n * @param {boolean} [secure] \r\n * @memberof STD\r\n*/\r\nexport function random(min, max, secure = false) {\r\n    if (isNullOrUndefined(max)) {\r\n        max = min;\r\n        min = 0;\r\n    }\r\n\r\n    return min + Math.floor((secure ? secureMathRandom() : Math.random()) * (max - min + 1));\r\n}\r\n\r\n/**\r\n * More secure implementation of `Math.random`\r\n * @private\r\n */\r\nfunction secureMathRandom() {\r\n    // Divide a random UInt32 by the maximum value (2^32 -1) to get a result between 0 and 1\r\n    return window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\r\n}","import { isFunction } from '@std/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfy the predicate function if given\r\n * @param {!Node} node \r\n * @param {Function} [_callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, _callback) {\r\n    if (!isNode(node)) {\r\n        throw new Error(\"The given node parameter is not a valid Node\");\r\n    }\r\n\r\n    if (isFunction(_callback)) {\r\n        Array.from(node.childNodes).forEach(n => {\r\n            if (_callback(n)) {\r\n                node.removeChild(n);\r\n            }\r\n        });\r\n\r\n        return node;\r\n    }\r\n\r\n    return removeAllChildren(node);\r\n\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}"],"names":["valOrDefault","arg","value","isNullable","isUndefined","isNullOrUndefined","isEmpty","obj","Array","isArray","isString","length","isDate","Date","_typeof","Object","prototype","toString","call","String","isFunction","isObject","isIterable","Symbol","iterator","isNull","isNullOrWhitespace","str","test","HttpResponse","OK","Created","Accepted","NoContent","BadRequest","Unauthorized","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","UnsupportedMediaType","InternalServerError","NotImplemented","BadGateway","ServiceUnavaible","GatewayTimeout","State","xhrHandler","type","url","successPred","successCb","failureCb","passCb","xhr","XMLHttpRequest","onreadystatechange","callback","status","content","readyState","response","responseText","message","open","setRequestHeader","resolveDate","date","_date","getTime","getTimezoneOffset","formatDate","format","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","MM","getMinutes","ss","getSeconds","twoDigits","val","replace","slice","DICT","trans","lang","key","isPlural","undefined","timeAgoResponse","time","unit","_lang","en","fr","hasOwnProperty","isPrototypeOf","defProp","defineProperty","hasOwn","cloneObject","temp","constructor","capitalize","toLowerCase","s","toUpperCase","CaseHandler","camelCase","pascalCase","ccString","charAt","trim","some","values","pred","i","all","getHitCount","counter","findByIndex","match","prop","index","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","windowHeight","innerHeight","clientHeight","isElementNode","nodeType","Node","ELEMENT_NODE","isNode","isNodeList","NodeList","isElement","Element","isHTMLElement","kind","HTMLElement","element","kinds","name","tag","interfaceName","TagNameMapping","tagName","includes","isHTMLCollection","HTMLCollection","_htmlToElement","html","template","createElement","innerHTML","htmlToElement","bind","htmlToElements","appendChildren","parent","children","Error","fragment","createDocumentFragment","from","forEach","appendChild","createTextNode","echo","o","formatClass","c","parseClass","join","setClass","attrClass","className","addAttributes","attribute","ATTR_MAP","accesskey","assign","data","dataset","editable","draggable","hidden","id","style","target","tabindex","text","title","cite","href","alt","src","accept","disabled","placeholder","readonly","DEFAULT_MAP","keys","create","_attribute","_children","addContent","createTemplate","createHeader","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createParagraph","createBlockQuotation","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createSource","createPicture","createFigure","createFigureCaption","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createAbbreviation","createB","createI","createS","createU","createCite","createCode","createForm","inputTypes","createInputAs","input","createInput","createLabel","createFieldset","createLegend","createDataList","createSelect","createOption","createOptionGroup","createTextArea","createMeter","createProgress","createOutput","buttonTypes","createButtonAs","button","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","textContent","isClassSelector","selector","isIdSelector","getElement","_container","container","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","getElementSibling","dir","sibling","getPreviousElementSibling","getNextElementSibling","findAncestor","_max","parentElement","findAncestorIter","max","findAncestorInf","moveDown","label","classList","add","moveUp","remove","getType","getState","setState","check","uncheck","getComponentElement","getInput","htmlFor","Status","BaseSelectorItem","init","args","this","isChecked","setChecked","BaseSelector","items","selectedIndex","selectedItem","beforeChange","afterChange","setSelectedItem","item","defaultItem","bindEvents","addEventListener","event","halt","_this","find","selectorIndex","FormSelectorItem","checked","FormSelector","ErrorCode","createDomQuery","DOMQuerySelector","Factory","options","itemContainers","widget","createSelectorItem","hasInput","typeHandler","itemContainer","push","ErrorHandler","BAD_CONTAINER","BAD_INPUT","isSelector","RegExp","domQuery","SelectorFactory","isSwitch","SwitchFactory","BaseSwitch","FormSwitch","toggle","_this2","show","display","hide","BAD_CONTAINER_COLLAPSIBLE","BAD_CONTAINER_ACCORDION","isCollapsible","el","isAccordion","CollapsibleFactory","instance","header","beforeOpen","afterOpen","beforeClose","afterClose","isCollapsed","isExpanded","isClosed","isInitialized","close","displayCb","state","action","e","targetCollapsible","parentNode","AccordionFactory","sections","selectedSection","accordionElements","collapsible","selected","filter","section","other","encode","encodeURIComponent","_options","accordions","accordion","collapsibleElements","collapsibles","success","fail","_successPred","pass","send","selectorElements","selectors","switcheElements","switches","$switch","path","min","hitCount","Number","isInteger","console","error","select","option","deep","importNode","t1","t2","arr1","split","arr2","execCommand","a","audio","img","rel","link","quote","datetime","video","_separator","part","regex","REGEX_BRACKET_DIGIT","separator","me","parts","len","indexOf","form","labels","warn","log","activeElement","casing","lastIndexOf","defValue","search","decodeURIComponent","location","params","searchParams","URLSearchParams","entries","pair","get","counters","ref","maxLength","arr","splice","insertAdjacentElement","child","getPrototypeOf","DOCUMENT_FRAGMENT_NODE","getBoundingClientRect","top1","top","right1","right","bottom1","bottom","left1","left","top2","right2","bottom2","left2","inner","outer","n","query","ignoreNullOrEmpty","secure","Math","floor","crypto","getRandomValues","Uint32Array","random","normalize","node","_callback","childNodes","removeChild","hasChildNodes","lastChild","removeAllChildren","seconds","now","DAY","HOUR","WEEK","MINUTE"],"mappings":"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"}