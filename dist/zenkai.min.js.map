{"version":3,"file":"zenkai.min.js","sources":["../src/std/std-parse.js","../src/std/std-ajax.js","../src/std/std-datetime.js","../src/std/std-object.js","../src/std/std-string.js","../src/std/std-logic.js","../src/std/std-path.js","../src/dom/dom-stat.js","../src/dom/dom-parse.js","../src/dom/dom-append.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/ui/form/floating-label.js","../src/ui/form/utils.js","../src/ui/form/selector/factory.js","../src/ui/form/selector/base-selector.js","../src/ui/form/selector/form-selector.js","../src/ui/form/selector/index.js","../src/ui/form/switch.js","../src/ui/utils.js","../src/ui/collapsible.js","../src/utils/uri-utils.js","../src/std/std-convert.js","../src/dom/copy-to-clipboard.js","../src/std/std-array.js","../src/ui/form/input-counter.js","../src/std/std-math.js","../src/dom/dom-remove.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable=false] indicates whether the value can be assigned the value *NULL*\r\n * @memberof STD\r\n */\r\nexport function valOrDefault(arg, value, isNullable = false) {\r\n    if (isNullable) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isEmpty(obj) {\r\n    return isIterable(obj) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is a non-string iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isCollection(obj) {\r\n    return isIterable(obj) && !isString(obj);\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} value string\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrWhitespace(value) {\r\n    return (!value || isString(value) && (value.length === 0 || /^\\s*$/.test(value)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { isFunction, valOrDefault } from \"./std-parse.js\";\r\n\r\n\r\nconst HttpResponse = {\r\n    // Successful\r\n    OK: 200,\r\n    Created: 201,\r\n    Accepted: 202,\r\n    NoContent: 204,\r\n    // Client Error\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    MethodNotAllowed: 405,\r\n    NotAcceptable: 406,\r\n    UnsupportedMediaType: 415,\r\n    // Server Error\r\n    InternalServerError: 500,\r\n    NotImplemented: 501,\r\n    BadGateway: 502,\r\n    ServiceUnavaible: 503,\r\n    GatewayTimeout: 504\r\n};\r\n\r\nconst State = {\r\n    OPENED: 1,\r\n    RECEIVED: 2,\r\n    LOADING: 3,\r\n    DONE: 4\r\n};\r\n\r\n/**\r\n * An XHR resposne\r\n * @private\r\n * @typedef {Object} xhrResponse\r\n * @property {number} status - The response status code\r\n * @property {string} message - The response content\r\n */\r\n\r\n/**\r\n * @callback xhrCallback\r\n * @param  {xhrResponse} response - The XHR response object\r\n * @private\r\n */\r\n\r\n/**\r\n * This function creates and arranges the XMLHttpRequest object\r\n * @param {('GET'|'POST'|'PUT'|'DELETE')} type The HTTP method\r\n * @param {string} url The URL to send the request \r\n * @param {*} successPred The success condition\r\n * @param {xhrCallback} successCb A callback function to handle a successful request\r\n * @param {xhrCallback} passCb A callback function to handle a valid request\r\n * @param {xhrCallback} failureCb A callback function to handle a failed request\r\n * @private\r\n */\r\nconst xhrHandler = function (type, url, successPred, successCb, failureCb, passCb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        var callback;\r\n        if (xhr.readyState === State.DONE) {\r\n            let response = createResponse(xhr.status, xhr.responseText);\r\n            if (successPred(xhr.status)) {\r\n                callback = successCb;\r\n            } else {\r\n                callback = failureCb;\r\n                if (xhr.status >= 200 && xhr.status < 300 && isFunction(passCb)) {\r\n                    callback = passCb;\r\n                }\r\n            }\r\n            if (isFunction(callback)) {\r\n                callback(response);\r\n            }\r\n        }\r\n    };\r\n    xhr.open(type, url, true);\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n    return xhr;\r\n};\r\n\r\nfunction createResponse(status, content) {\r\n    return {\r\n        status: status,\r\n        message: content\r\n    };\r\n}\r\n\r\n/**\r\n * Sends a GET request\r\n * @param {string} url The URL to send the request \r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function GET(url, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => status === HttpResponse.OK;\r\n    var xhr = xhrHandler('GET', url, successPred, success, fail, options.pass);\r\n    xhr.send();\r\n}\r\n\r\n/**\r\n * Sends a POST request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function POST(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Created].includes(status);\r\n    var xhr = xhrHandler('POST', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a PUT request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function PUT(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('PUT', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Sends a DELETE request\r\n * @param {string} url The URL to send the request \r\n * @param {*} data The data to be sent in the request\r\n * @param {xhrCallback} [success] A callback function to handle a successful request\r\n * @param {xhrCallback} [fail] A callback function to handle a failed request\r\n * @memberof STD\r\n */\r\nexport function DELETE(url, data, success, fail, options) {\r\n    options = valOrDefault(options, {});\r\n    var _successPred = options.successPred;\r\n    const successPred = isFunction(_successPred) ? _successPred : (status) => [HttpResponse.OK, HttpResponse.Accepted, HttpResponse.NoContent].includes(status);\r\n    var xhr = xhrHandler('DELETE', url, successPred, success, fail, options.pass);\r\n    xhr.send(data);\r\n}\r\n\r\n/**\r\n * Creates a fetch request with a time limit to resolve the request\r\n * @param {URI} uri \r\n * @param {*} options \r\n * @param {number} time \r\n * @memberof STD\r\n */\r\nexport function fetchWithTimeout(uri, options = {}, time = 5000) {\r\n    // Lets set up our `AbortController`, and create a request options object\r\n    // that includes the controller's `signal` to pass to `fetch`.\r\n    const controller = new AbortController()\r\n    const config = { ...options, signal: controller.signal }\r\n\r\n    // Set a timeout limit for the request using `setTimeout`. If the body of this\r\n    // timeout is reached before the request is completed, it will be cancelled.\r\n    const timeout = setTimeout(() => {\r\n        controller.abort()\r\n    }, time)\r\n\r\n    return fetch(uri, config)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`${response.status}: ${response.statusText}`)\r\n            }\r\n\r\n            return response\r\n        })\r\n        .catch(error => {\r\n            // When we abort our `fetch`, the controller conveniently throws a named\r\n            // error, allowing us to handle them separately from other errors.\r\n            if (error.name === 'AbortError') {\r\n                throw new Error('Response timed out')\r\n            }\r\n\r\n            throw new Error(error.message)\r\n        })\r\n}","import { isNullOrUndefined, isDate } from './std-parse.js';\r\n\r\n\r\n/**\r\n * Compare 2 times\r\n * @param {string} t1 time 1\r\n * @param {string} t2 time 2\r\n * @param {string} [separator=\":\"]\r\n * @returns {number} 1, 0, -1 if t1 > t2, t1 = t2 and t1 < t2 respectively\r\n * @memberof STD\r\n */\r\nexport function compareTime(t1, t2, separator = \":\") {\r\n    if (isNullOrUndefined(t1) || isNullOrUndefined(t2) || !t1.includes(separator) || !t2.includes(separator)) {\r\n        return null;\r\n    }\r\n\r\n    var arr1 = t1.split(separator);\r\n    var arr2 = t2.split(separator);\r\n\r\n    // hour comparison\r\n    if (+arr1[0] > +arr2[0]) {\r\n        return 1;\r\n    } else if (+arr1[0] < +arr2[0]) {\r\n        return -1;\r\n    } else {\r\n        // minute comparison\r\n        if (+arr1[1] > +arr2[1]) {\r\n            return 1;\r\n        } else if (+arr1[1] < +arr2[1]) {\r\n            return -1;\r\n        } else {\r\n            if (arr1.length == arr2.length && arr1.length == 3) {\r\n                // second comparison\r\n                if (+arr1[2] > +arr2[2]) {\r\n                    return 1;\r\n                } else if (+arr1[2] < +arr2[2]) {\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Resolves a date value\r\n * @param {*} [value] \r\n * @returns {Date}\r\n  * @memberof STD\r\n */\r\nexport function resolveDate(value, useOffset = true) {\r\n    if (isNullOrUndefined(value)) {\r\n        return new Date();\r\n    } else if (isDate(value)) {\r\n        return value;\r\n    }\r\n\r\n    var date = new Date(value);\r\n    var time = date.getTime();\r\n\r\n    if (Number.isNaN(time)) {\r\n        return new Date();\r\n    }\r\n\r\n    if (useOffset) {\r\n        return new Date(time + date.getTimezoneOffset() * 60000);\r\n    }\r\n\r\n    return date;\r\n}\r\n\r\n/**\r\n * Formats a date\r\n * @param {!Date} date \r\n * @param {!string} format \r\n * @returns {string} Formatted date\r\n * @memberof STD\r\n */\r\nexport function formatDate(date, format) {\r\n    var dd = date.getDate();\r\n    var mm = date.getMonth() + 1;   // January = 0\r\n    var yyyy = date.getFullYear().toString();\r\n    var hh = date.getHours();\r\n    var MM = date.getMinutes();\r\n    var ss = date.getSeconds();\r\n\r\n    const twoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\n    return format.replace('yyyy', yyyy)\r\n        .replace('yy', yyyy.slice(-2))\r\n        .replace('mm', twoDigits(mm))\r\n        .replace('m', mm)\r\n        .replace('dd', twoDigits(dd))\r\n        .replace('d', dd)\r\n        .replace('hh', twoDigits(hh))\r\n        .replace('h', hh)\r\n        .replace('MM', twoDigits(MM))\r\n        .replace('M', MM)\r\n        .replace('ss', twoDigits(ss))\r\n        .replace('s', ss);\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDate(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(date, 'yyyy-mm-dd');\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd hh:MM\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDateTime(_date) {\r\n    var date = resolveDate(_date, false);\r\n\r\n    return formatDate(date, 'yyyy-mm-dd hh:MM');\r\n}","import { isObject, isNullOrUndefined } from \"./std-parse.js\";\r\n\r\n\r\n/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) {\r\n    return hasOwnProperty.call(obj, key);\r\n};\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * Creates a clone of an object\r\n * @param {*} obj Object\r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (isNullOrUndefined(obj) || !isObject(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    if(isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    if(isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Casing (camel, pascal, upper, lower)\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}","import { isFunction } from \"./std-parse.js\";\r\n\r\n\r\n/**\r\n * Verifies that the condition is satisfied for a specified number (range) of value\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @param {number} [max] Maximum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether the condition is satisfied for the specified range\r\n * @memberof STD\r\n */\r\nexport const assert = function (values, pred, min, max) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    var hitCount = getHitCount(values, pred);\r\n\r\n    if (all([min, max], Number.isInteger)) {\r\n        if (max < min) {\r\n            throw new Error(\"Bad argument: max must be greater than min\");\r\n        }\r\n\r\n        return hitCount >= min && hitCount <= max;\r\n    }\r\n\r\n    if (Number.isInteger(min)) {\r\n        return hitCount >= min;\r\n    }\r\n\r\n    if (Number.isInteger(max)) {\r\n        return hitCount <= max;\r\n    }\r\n\r\n    return hitCount > 0;\r\n};\r\n\r\n/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const some = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof STD\r\n */\r\nexport const all = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (!pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const one = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const no = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) === 0;\r\n};\r\n\r\n/**\r\n * Verifies that at most one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at most one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const lone = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) <= 1;\r\n};\r\n\r\n/**\r\n * Gets the number of values that satisfy the condition\r\n * @param {*[]} values \r\n * @param {Function} pred \r\n * @returns {number}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, pred) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","import { isNullOrWhitespace, isNullOrUndefined } from './std-parse.js';\r\nimport { cloneObject } from './std-object.js';\r\n\r\n\r\n/**\r\n * Append the path to the current path\r\n * @param {string} target \r\n * @param {string} path \r\n * @param {string} [separator=\".\"] \r\n * @memberof STD\r\n */\r\nexport function addPath(target, path, separator = \".\") {\r\n    return isNullOrWhitespace(target) ? path : `${target}${separator}${path}`;\r\n}\r\n\r\n/**\r\n * Returns the directory of the path\r\n * @param {string} path \r\n * @param {string} [separator=\".\"] \r\n * @memberof STD\r\n */\r\nexport function getDir(path, separator = \".\") {\r\n    return path.substring(0, path.lastIndexOf(separator));\r\n}\r\n\r\n/**\r\n * Returns the directory of the path from the target\r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function getDirTarget(path, target) {\r\n    return path.substring(0, path.lastIndexOf(target) - 1);\r\n}\r\n\r\nfunction findByIndex(obj, match, prop) {\r\n    const REGEX_DIGIT = /\\d+/g;\r\n    var index = +match[0].match(REGEX_DIGIT);\r\n    return obj[prop][index];\r\n}\r\n\r\n/**\r\n * Returns an element in an object using its path\r\n * @param {Object} obj\r\n * @param {string} path  \r\n * @param {string} [separator=.]\r\n * @memberof STD\r\n */\r\nexport function findByPath(obj, path, separator = \".\") {\r\n    const REGEX_BRACKET_DIGIT = /\\[\\d+\\]/g;\r\n    const REGEX_BRACKET_WORD = /\\[\\w+\\]/g;\r\n\r\n    var me = cloneObject(obj);\r\n\r\n    const findHandler = function (part, regex, callback) {\r\n        var match = part.match(regex);\r\n        var prop = part.substring(0, part.indexOf('['));\r\n        return callback(me, match, prop);\r\n    };\r\n\r\n    var parts = path.split(separator);\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n\r\n        if (REGEX_BRACKET_DIGIT.test(part)) {\r\n            me = findHandler(part, REGEX_BRACKET_DIGIT, findByIndex);\r\n        } else {\r\n            me = me[part];\r\n        }\r\n\r\n        if (isNullOrUndefined(me)) {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    return me;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport const windowWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\r\n/**\r\n * Gets the window's height\r\n * @memberof DOM\r\n */\r\nexport const windowHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;","import { isNullOrUndefined, isString, isIterable, hasOwn, pascalCase, isEmpty, all, some, isCollection } from '@std/index.js';\r\nimport { windowWidth, windowHeight } from './dom-stat.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTML Element*\r\n * @param {Element} obj \r\n * @param {string|string[]|string[][]} [kind] \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj, kind) => {\r\n    if (!(isElementNode(obj) && obj instanceof HTMLElement)) {\r\n        return false;\r\n    }\r\n\r\n    if (isIterable(kind)) {\r\n        return isHTMLElementKind(obj, Array.isArray(kind) ? kind : [kind]);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst TagNameMapping = {\r\n    'a': \"Anchor\",\r\n    'br': \"BR\",\r\n    'dl': \"DList\",\r\n    'datalist': \"DataList\",\r\n    'fieldset': \"FieldSet\",\r\n    'frameset': \"FrameSet\",\r\n    'hr': \"HR\",\r\n    'h1': \"Heading\",\r\n    'h2': \"Heading\",\r\n    'h3': \"Heading\",\r\n    'h4': \"Heading\",\r\n    'h5': \"Heading\",\r\n    'h6': \"Heading\",\r\n    'li': \"LI\",\r\n    'ol': \"OList\",\r\n    'optgroup': \"OptGroup\",\r\n    'p': \"Paragraph\",\r\n    'q': \"Quote\",\r\n    'blockquote': \"Quote\",\r\n    'caption': \"TableCaption\",\r\n    'td': \"TableCell\",\r\n    'th': \"TableCell\",\r\n    'col': \"TableCol\",\r\n    'tr': \"TableRow\",\r\n    'tbody': \"TableSection\",\r\n    'thead': \"TableSection\",\r\n    'tfoot': \"TableSection\",\r\n    'textarea': \"TextArea\",\r\n    'ul': \"UList\",\r\n};\r\n\r\n/**\r\n * Verifies the tag of an *HTML Element*\r\n * @param {HTMLElement} element \r\n * @param {string[]|string[][]} kinds\r\n * @returns {boolean}\r\n * @private\r\n */\r\nfunction isHTMLElementKind(element, kinds) {\r\n    const isInstanceOf = (obj) => element instanceof obj;\r\n    const hasTag = (tag) => element.tagName === tag.toUpperCase();\r\n    const isOfType = (type) => Array.isArray(type) ? type.includes(element.type) : element.type === type;\r\n    \r\n    return kinds.some((kind) => {\r\n        if (!isIterable(kind)) {\r\n            return false;\r\n        }\r\n\r\n        var name = kind;\r\n        var type = null;\r\n        \r\n        if (Array.isArray(kind)) {\r\n            [name, type] = kind;\r\n        }\r\n\r\n        name = name.toLowerCase();\r\n        var interfaceName = `HTML${hasOwn(TagNameMapping, name) ? TagNameMapping[name] : pascalCase(name)}Element`;\r\n\r\n        if (!(isInstanceOf(window[interfaceName]) || hasTag(name))) {\r\n            return false;\r\n        }\r\n\r\n        if (isCollection(type) && !isEmpty(type)) {\r\n            return isOfType(type);\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Converts an html string to an HTML Element or a list of HTML Elements\r\n * @param {!string} prop \r\n * @param {!string} html \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction _htmlToElement(prop, html) {\r\n    if (!isString(html)) {\r\n        return null;\r\n    }\r\n\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content[prop];\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElement = _htmlToElement.bind(null, 'firstChild');\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElements = _htmlToElement.bind(null, 'childNodes');\r\n\r\n/**\r\n * Verifies that an element is visible\r\n * @param {!HTMLElement} element \r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInViewport(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return top >= 0 && left >= 0 && bottom <= windowHeight() && right <= windowWidth();\r\n}\r\n\r\n/**\r\n * Verifies that an element is displayed inside a target element\r\n * @param {!HTMLElement} element \r\n * @param {!HTMLElement} target\r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInElement(element, target) {\r\n    if (!all([element, target], isHTMLElement)) {\r\n        throw new Error(\"The given element is not a valid HTML Element\");\r\n    }\r\n\r\n    var { top: top1, right: right1, bottom: bottom1, left: left1 } = element.getBoundingClientRect();\r\n    var { top: top2, right: right2, bottom: bottom2, left: left2 } = target.getBoundingClientRect();\r\n\r\n    return all([[top2, top1], [left2, left1], [right1, right2], [bottom1, bottom2]], (inner, outer) => inner <= outer);\r\n}","import { isCollection, all, isNullOrUndefined } from '@std/index.js';\r\nimport { isNode, isElement, isHTMLCollection, isDocumentFragment } from './dom-parse.js';\r\n\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {!Element} target \r\n * @param {!Element} element \r\n * @memberof DOM\r\n */\r\nexport function insertBeforeElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new TypeError(\"Bad argument: The given `element` or `target` is not a valid Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('beforebegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {!Element} target \r\n * @param {!Element} element \r\n * @memberof DOM\r\n */\r\nexport function insertAfterElement(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new TypeError(\"Bad argument: The given `element` or `target` is not a valid Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterend', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {!Element} target \r\n * @param {!Element} element \r\n * @memberof DOM\r\n */\r\nexport function preprendChild(target, element) {\r\n    if (!all([target, element], isElement)) {\r\n        throw new TypeError(\"Bad argument: The given `element` or `target` is not a valid Element\");\r\n    }\r\n\r\n    target.insertAdjacentElement('afterbegin', element);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {!Element} parent\r\n * @param {!HTMLElement[]|HTMLCollection} children\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function appendChildren(parent, children) {\r\n    if (!isNode(parent)) {\r\n        throw new TypeError(\"Bad argument: The given `parent` is not a valid Node\");\r\n    }\r\n\r\n    if (!(isHTMLCollection(children) || isCollection(children))) {\r\n        throw new TypeError(\"Bad argument: The given `children` is not a valid HTMLCollection/HTMLElement array\");\r\n    }\r\n\r\n    const createText = (obj) => document.createTextNode(obj.toString());\r\n\r\n    var fragment = isDocumentFragment(parent) ? parent : document.createDocumentFragment();\r\n\r\n    Array.from(children).forEach(element => {\r\n        if (!isNullOrUndefined(element)) {\r\n            fragment.appendChild(isNode(element) ? element : createText(element.toString()));\r\n        }\r\n    });\r\n\r\n    if (parent !== fragment) {\r\n        parent.appendChild(fragment);\r\n    }\r\n\r\n    return parent;\r\n}","import { isObject, isNullOrUndefined } from '@std/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Add classes to an element\r\n * @param {HTMLElement} element \r\n * @param {string|string[]} value \r\n * @memberof DOM\r\n */\r\nfunction addClass(element, value) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"Bad argument: The passed `element` argument is not a valid HTML Element\");\r\n    }\r\n\r\n    element.classList.add(...(Array.isArray(value) ? value : [value]));\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {string} value \r\n * @private\r\n */\r\nfunction assign(element, key, value) {\r\n    element[key] = value;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignObject(element, key, value) {\r\n    Object.assign(element[key], value);\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignAttribute(element, key, value) {\r\n    element.setAttribute(key, value);\r\n}\r\n\r\nconst GLOBAL_ATTRIBUTES = \"accesskey,autocapitalize,class,dataset,editable,draggable,hidden,id,inputmode,lang,html,style,tabindex,text,title\";\r\n\r\nconst AttributeHandler = {\r\n    // Global attributes\r\n    accesskey: [assign, 'accessKey'],\r\n    autocapitalize: [assign, 'autocapitalize'],\r\n    class: [addClass],\r\n    dataset: [assignObject, 'dataset'],\r\n    draggable: [assign, 'draggable'],\r\n    editable: [assign, 'contentEditable'],\r\n    hidden: [assign, 'hidden'],\r\n    id: [assign, 'id'],\r\n    inputmode: [assign, 'inputMode'],\r\n    lang: [assign, 'lang'],\r\n    html: [assign, 'innerHTML'],\r\n    style: [assign, 'style'],\r\n    tabindex: [assign, 'tabIndex'],\r\n    text: [assign, 'textContent'],\r\n    title: [assign, 'title'],\r\n    // Object attributes\r\n    data: [assign, 'data'],\r\n    // Quote attributes\r\n    cite: [assign, 'cite'],\r\n    // Anchor attributes\r\n    download: [assign, 'download'],\r\n    ping: [assign, 'ping'],\r\n    target: [assign, 'target'],\r\n    // Area attributes\r\n    coords: [assign, 'coords'],\r\n    shape: [assign, 'shape'],\r\n    // Audio/Video attributes\r\n    autoplay: [assign, 'autoplay'],\r\n    buffered: [assign, 'buffered'],\r\n    controls: [assign, 'controls'],\r\n    loop: [assign, 'loop'],\r\n    muted: [assign, 'muted'],\r\n    playsinline: [assignAttribute, 'playsinline'],\r\n    poster: [assign, 'poster'],\r\n    preload: [assign, 'preload'],\r\n    // Image attributes\r\n    crossorigin: [assign, 'crossOrigin'],\r\n    decoding: [assign, 'decoding'],\r\n    height: [assign, 'height'],\r\n    ismap: [assign, 'isMap'],\r\n    loading: [assign, 'loading'],\r\n    srcset: [assign, 'srcset'],\r\n    width: [assign, 'width'],\r\n    // Link attributes\r\n    alt: [assign, 'alt'],\r\n    as: [assign, 'as'],\r\n    media: [assign, 'media'],\r\n    rel: [assign, 'rel'],\r\n    src: [assign, 'src'],\r\n    sizes: [assign, 'sizes'],\r\n    // List attributes\r\n    reversed: [assign, 'reversed'],\r\n    start: [assign, 'start'],\r\n    // Form attributes\r\n    accept: [assign, 'accept'],\r\n    \"accept-charset\": [assign, 'acceptCharset'],\r\n    action: [assign, 'action'],\r\n    autocomplete: [assign, 'autocomplete'],\r\n    autofocus: [assign, 'autofocus'],\r\n    capture: [assign, 'capture'],\r\n    checked: [assign, 'checked'],\r\n    cols: [assign, 'cols'],\r\n    disabled: [assign, 'disabled'],\r\n    dirname: [assign, 'dirName'],\r\n    enctype: [assign, 'enctype'],\r\n    for: [assign, 'for'],\r\n    form: [assign, 'form'],\r\n    formaction: [assign, 'formAction'],\r\n    formenctype: [assign, 'formEnctype'],\r\n    formmethod: [assign, 'formMethod'],\r\n    formnovalidate: [assign, 'formNoValidate'],\r\n    formtarget: [assign, 'formTarget'],\r\n    high: [assign, 'high'],\r\n    label: [assign, 'label'],\r\n    list: [assign, 'list'],\r\n    low: [assign, 'low'],\r\n    max: [assign, 'max'],\r\n    maxlength: [assign, 'maxLength'],\r\n    method: [assign, 'method'],\r\n    min: [assign, 'min'],\r\n    minlength: [assign, 'minLength'],\r\n    multiple: [assign, 'multiple'],\r\n    name: [assign, 'name'],\r\n    novalidate: [assign, 'noValidate'],\r\n    optimum: [assign, 'optimum'],\r\n    pattern: [assign, 'pattern'],\r\n    placeholder: [assign, 'placeholder'],\r\n    readonly: [assign, 'readOnly'],\r\n    required: [assign, 'required'],\r\n    rows: [assign, 'rows'],\r\n    selected: [assign, 'selected'],\r\n    size: [assign, 'size'],\r\n    spellcheck: [assignAttribute, 'spellcheck'],\r\n    step: [assign, 'step'],\r\n    wrap: [assign, 'wrap'],\r\n    // Track attributes\r\n    default: [assign, 'default'],\r\n    kind: [assign, 'kind'],\r\n    srclang: [assign, 'srclang'],\r\n    // Table attributes\r\n    abbr: [assign, 'abbr'],\r\n    colspan: [assign, 'colSpan'],\r\n    span: [assign, 'span'],\r\n    rowspan: [assign, 'rowSpan'],\r\n    scope: [assign, 'scope'],\r\n    // Mix attributes\r\n    href: [assign, 'href'],\r\n    hreflang: [assign, 'hreflang'],\r\n    datetime: [assign, 'dateTime'],\r\n    type: [assign, 'type'],\r\n    value: [assign, 'value'],\r\n    usemap: [assign, 'useMap'],\r\n};\r\n\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute, validAttributes = \"\") {\r\n    if (!isHTMLElement(element)) {\r\n        throw new Error(\"Bad argument: The given element argument is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isObject(attribute)) {\r\n        return element;\r\n    }\r\n\r\n    const isValid = (key) => GLOBAL_ATTRIBUTES.includes(key) || validAttributes.includes(key);\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attribute)) {\r\n        if (isValid(key)) {\r\n            let value = attribute[key];\r\n            let args = AttributeHandler[key].slice(0);\r\n            let fn = args.shift();\r\n            fn(element, ...args, value);\r\n        }\r\n    }\r\n\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {string} value option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectValue(select, value) {\r\n    if (!isHTMLElement(select, \"select\")) {\r\n        throw new Error(\"Bad argument: The given select argument is not a valid HTML Select element\");\r\n    }\r\n\r\n    if (isNullOrUndefined(value)) {\r\n        throw new Error(\"The given value parameter is a null or undefined\");\r\n    }\r\n\r\n    var options = select.options;\r\n    for (let i = 0; i < options.length; i++) {\r\n        let option = options[i];\r\n\r\n        if (option.value === value.toString()) {\r\n            option.selected = true;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { isNullOrUndefined, isFunction, isObject, valOrDefault } from \"@std/index.js\";\r\nimport { isHTMLElement } from \"./dom-parse.js\";\r\nimport { appendChildren } from \"./dom-append.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n\r\n/**\r\n * Creates an empty element with attributes\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {object} [_attributes] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createEmptyElement(tagName, _validAttributes, _attributes) {\r\n    var element = document.createElement(tagName);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (isObject(_attributes)) {\r\n        addAttributes(element, _attributes, valOrDefault(_validAttributes, \"\"));\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates an element with attributes and content\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {Function} [contentResolver] \r\n * @param {object} [_attributes] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_content] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createElement(tagName, _validAttributes, _attributes, _content) {\r\n    var element = createEmptyElement(tagName, _validAttributes, _attributes);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isNullOrUndefined(_content)) {\r\n        addContent(element, _content);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates an element with attributes and content\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {Function} [contentResolver] \r\n * @param {object} [_attributes] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_content] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createElementX(tagName, _validAttributes, contentResolver, _attributes, _content) {\r\n    var element = createEmptyElement(tagName, _validAttributes, _attributes);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isNullOrUndefined(_content)) {\r\n        addContent(element, _content, contentResolver);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n// TODO: createMeta\r\n\r\n// TODO: createScript\r\n\r\n// TODO: createStyle\r\n\r\n// TODO: createTitle\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment(_children) {\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(fragment, _children);\r\n    }\r\n\r\n    return fragment;\r\n}\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport const createLink = createEmptyElement.bind(null, \"link\", \"as,crossorigin,disabled,href,hreflang,media,rel,sizes,type\");\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = createElement.bind(null, \"template\", \"\");\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = createElement.bind(null, \"header\", \"\");\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = createElement.bind(null, \"footer\", \"\");\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = createElement.bind(null, \"main\", \"\");\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = createElement.bind(null, \"article\", \"\");\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = createElement.bind(null, \"section\", \"\");\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = createElement.bind(null, \"nav\", \"\");\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = createElement.bind(null, \"aside\", \"\");\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = createElement.bind(null, \"h1\", \"\");\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = createElement.bind(null, \"h2\", \"\");\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = createElement.bind(null, \"h3\", \"\");\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = createElement.bind(null, \"h4\", \"\");\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = createElement.bind(null, \"h5\", \"\");\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = createElement.bind(null, \"h6\", \"\");\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = createElement.bind(null, \"div\", \"\");\r\n\r\n/**\r\n * Creates a `<object>` element with some attributes\r\n * @function createObject\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLObjectElement}\r\n * @memberof DOM\r\n */\r\nexport const createObject = createElement.bind(null, \"object\", \"data,height,name,type,usemap,width\");\r\n\r\n/**\r\n * Creates a `<embed>` element with some attributes\r\n * @function createEmbed\r\n * @param {object} _attribute \r\n * @returns {HTMLEmbedElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmbed = createEmptyElement.bind(null, \"embed\", \"height,src,type,width\");\r\n\r\n/**\r\n * Creates a `<br>` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @returns {HTMLBRElement}\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = createEmptyElement.bind(null, \"br\", \"\");\r\n\r\n/**\r\n * Creates a `<hr>` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @returns {HTMLHRElement}\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = createEmptyElement.bind(null, \"hr\", \"\");\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = createElement.bind(null, \"p\", \"\");\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function createBlockQuotation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createBlockQuotation = createElement.bind(null, \"blockquote\", \"cite\");\r\n\r\nconst listItemResolver = (item) => isHTMLElement(item, \"li\") ? item : createListItem(null, item);\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = createElementX.bind(null, \"ul\", \"\", listItemResolver);\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = createElementX.bind(null, \"ol\", \"reversed,start,type\", listItemResolver);\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = createElement.bind(null, \"li\", \"value\");\r\n\r\n\r\n// const descriptionContentResolver = (item) => isHTMLElement(item, [\"dt\", \"dd\"]) ? item : createListItem(null, item);\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = createElement.bind(null, \"dl\", \"\");\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = createElement.bind(null, \"dt\", \"\");\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = createElement.bind(null, \"dd\", \"\");\r\n\r\n// Inline Element\r\n//-----------------------------------------------------------------------------\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @function createAnchor\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport const createAnchor = createElement.bind(null, \"a\", \"download,href,hreflang,ping,rel,target,type\");\r\n\r\n/**\r\n * Creates an `<area>` element with some attributes\r\n * @function createArea\r\n * @param {object} _attribute \r\n * @returns {HTMLAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createArea = createEmptyElement.bind(null, \"area\", \"alt,coords,download,href,hreflang,media,ping,rel,shape,target\");\r\n\r\n/**\r\n * Creates an `<base>` element with some attributes\r\n * @function createBase\r\n * @param {object} _attribute \r\n * @returns {HTMLBaseElement}\r\n * @memberof DOM\r\n */\r\nexport const createBase = createEmptyElement.bind(null, \"base\", \"href,target\");\r\n\r\n/**\r\n  * Creates a `<img>` element with some attributes\r\n  * @function createImage\r\n  * @param {object} _attribute \r\n  * @returns {HTMLImageElement}\r\n  * @memberof DOM\r\n  */\r\nexport const createImage = createEmptyElement.bind(null, \"img\", \"alt,crossorigin,decoding,height,ismap,loading,sizes,src,srcset,usemap,width\");\r\n\r\n/**\r\n  * Creates a `<audio>` element with some attributes\r\n  * @function createAudio\r\n  * @param {object} _attribute\r\n  * @param {Text|HTMLElement|HTMLElement[]} _children\r\n  * @returns {HTMLAudioElement}\r\n  * @memberof DOM\r\n  */\r\nexport const createAudio = createElement.bind(null, \"audio\", \"autoplay,controls,crossorigin,loop,muted,preload,src\");\r\n\r\n/**\r\n  * Creates a `<video>` element with some attributes\r\n  * @function createVideo\r\n  * @param {object} _attribute \r\n  * @param {Text|HTMLElement|HTMLElement[]} _children \r\n  * @returns {HTMLVideoElement}\r\n  * @memberof DOM\r\n  */\r\nexport const createVideo = createElement.bind(null, \"video\", \"autoplay,controls,crossorigin,height,loop,muted,playsinline,poster,preload,src,width\");\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = createEmptyElement.bind(null, \"source\", \"media,sizes,src,srcset,type\");\r\n\r\n/**\r\n * Creates a `<track>` element with some attributes\r\n * @function createTrack\r\n * @param {object} _attribute \r\n * @returns {HTMLTrackElement}\r\n * @memberof DOM\r\n */\r\nexport const createTrack = createEmptyElement.bind(null, \"track\", \"default,kind,label,src,srclang\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = createElement.bind(null, \"picture\", \"\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = createElement.bind(null, \"figure\", \"\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = createElement.bind(null, \"figcaption\", \"\");\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = createElement.bind(null, \"span\", \"\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = createElement.bind(null, \"strong\", \"\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = createElement.bind(null, \"em\", \"\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = createElement.bind(null, \"mark\", \"\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = createElement.bind(null, \"samp\", \"\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = createElement.bind(null, \"sub\", \"\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = createElement.bind(null, \"sup\", \"\");\r\n\r\n/**\r\n * Creates a `<del>` element with some attributes\r\n * @function createDeletedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createDeletedPart = createElement.bind(null, \"del\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<ins>` element with some attributes\r\n * @function createInsertedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createInsertedPart = createElement.bind(null, \"ins\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createQuote = createElement.bind(null, \"q\", \"cite\");\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = createElement.bind(null, \"abbr\", \"\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = createElement.bind(null, \"b\", \"\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = createElement.bind(null, \"i\", \"\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = createElement.bind(null, \"s\", \"\");\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = createElement.bind(null, \"u\", \"\");\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = createElement.bind(null, \"cite\", \"\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @function createTime\r\n * @param {object} _attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport const createTime = createElement.bind(null, \"time\", \"datetime\");\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = createElement.bind(null, \"code\", \"\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFormElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = createElement.bind(null, \"form\", \"accept-charset,action,autocomplete,enctype,method,name,novalidate,rel,target\");\r\n\r\nconst inputTypes = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createEmptyElement.bind(null, \"input\", \"accept,alt,autocomplete,autofocus,capture,checked,dirname,disabled,height,max,maxlength,minlength,min,multiple,name,pattern,placeholder,readonly,required,size,src,step,type,value,width\");\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = createElement.bind(null, \"textarea\", \"autocomplete,autofocus,cols,disabled,maxlength,minlength,name,placeholder,readonly,required,rows,spellcheck,value,wrap\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = createElement.bind(null, \"label\", \"for\");\r\n\r\n/**\r\n * Resolves a select element content\r\n * @param {*} item \r\n * @returns {HTMLOptionElement|HTMLOptGroupElement}\r\n * @private\r\n */\r\nconst selectContentResolver = (item) => {\r\n    if (isHTMLElement(item, [\"option\", \"optgroup\"])) {\r\n        return item;\r\n    }\r\n\r\n    if (Array.isArray(item)) {\r\n        return createOptionGroup(null, item);\r\n    }\r\n\r\n    return createOption(null, item);\r\n};\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSelectElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = createElementX.bind(null, 'select', \"autocomplete,autofocus,disabled,multiple,name,required,size\", selectContentResolver);\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = createElement.bind(null, \"option\", \"disabled,label,selected,value\");\r\n\r\nconst optiongroupContentResolver = (item) => isHTMLElement(item, \"option\") ? item : createOption(null, item);\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptGroupElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = createElementX.bind(null, \"optgroup\", \"disabled,label\", optiongroupContentResolver);\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFieldSetElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = createElement.bind(null, \"fieldset\", \"disabled,name\");\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = createElement.bind(null, \"legend\", \"\");\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = createElementX.bind(null, \"datalist\", \"\", optiongroupContentResolver);\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = createElement.bind(null, \"meter\", \"high,low,max,min,optimum,value\");\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = createElement.bind(null, \"progress\", \"max,value\");\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = createElement.bind(null, \"output\", \"name,value\");\r\n\r\nconst buttonTypes = [\"button\", \"submit\", \"reset\"];\r\n\r\n/**\r\n * Creates a `<button>` element with optionally some attributes and children elements\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLButtonElement}\r\n * @memberof DOM\r\n */\r\nexport const createButton = createElement.bind(null, \"button\", \"autofocus,disabled,formaction,formenctype,formmethod,formnovalidate,formtarget,name,type,value\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = createElement.bind(null, \"table\", \"\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = createElement.bind(null, \"caption\", \"\");\r\n\r\nconst tablerowContentResolver = (item) => isHTMLElement(item, \"tr\") ? item : createTableRow(null, item);\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = createElementX.bind(null, \"thead\", \"\", tablerowContentResolver);\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = createElementX.bind(null, \"tbody\", \"\", tablerowContentResolver);\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = createElementX.bind(null, \"tfoot\", \"\", tablerowContentResolver);\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = createEmptyElement.bind(null, \"col\", \"span\");\r\n\r\nconst tablecolContentResolver = (item) => isHTMLElement(item, \"col\") ? item : null;\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = createElementX.bind(null, \"colgroup\", \"span\", tablecolContentResolver);\r\n\r\nconst tablecellContentResolver = (item) => isHTMLElement(item, [\"th\", \"td\"]) ? item : createTableCell(null, item);\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = createElementX.bind(null, \"tr\", \"\", tablecellContentResolver);\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = createElement.bind(null, \"th\", \"abbr,colspan,rowspan,scope\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = createElement.bind(null, \"td\", \"colspan,rowspan\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {Node} element element\r\n * @param {HTMLCollection} content children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, content, resolver) {\r\n    var children = Array.isArray(content) ? content : [content];\r\n\r\n    if (isFunction(resolver)) {\r\n        children = children.map(child => resolver(child));\r\n    }\r\n\r\n    appendChildren(element, children);\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@std/index.js';\r\nimport { isElement, isHTMLElement, isDocumentFragment } from './dom-parse.js';\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    var container = valOrDefault(_container, document);\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {string} dir sibling direction\r\n * @param {HTMLElement} element element\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(dir, element, pred) {\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    var sibling = element[dir];\r\n\r\n    if (isFunction(pred)) {\r\n        while (isElement(sibling) && !pred(sibling)) {\r\n            sibling = sibling[dir];\r\n        }\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @function getPreviousElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport const getPreviousElementSibling = getElementSibling.bind(null, \"previousElementSibling\");\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @function getNextElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport const getNextElementSibling = getElementSibling.bind(null, \"nextElementSibling\");\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {!Element} target \r\n * @param {!Function} pred Decides whether the target is found\r\n * @param {number} [_max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, pred, _max) {\r\n    if (!isElement(target)) {\r\n        throw new TypeError(\"Bad argument: The given target parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isFunction(pred)) {\r\n        throw new TypeError(\"Bad argument: The given pred parameter is not a valid Function\");\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n\r\n    if (_max > 0) {\r\n        return findAncestorIter(parent, pred, _max - 1);\r\n    }\r\n\r\n    return findAncestorInf(parent, pred);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, pred) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, pred);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} max Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, pred, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, pred, max - 1);\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isEmpty } from '@std/index.js';\r\n\r\n/**\r\n * Update class related to the action *move label down*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveDown = (label) => label.classList.add('down');\r\n\r\n/**\r\n * Update class related to the action *move label up*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveUp = (label) => label.classList.remove('down');\r\n\r\n/**\r\n * Update class related to the action *add focus to element*\r\n * @param {HTMLElement} element \r\n */\r\nconst addFocus = (element) => element.classList.add('focused');\r\n\r\n/**\r\n * Update class related to the action *remove focus from element*\r\n * @param {HTMLElement} element \r\n */\r\nconst removeFocus = (element) => element.classList.remove('focused');\r\n\r\n/**\r\n * Activate floating label in given scope\r\n * @param {HTMLElement} form \r\n */\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isHTMLElement(input)) {\r\n                if (isNullOrWhitespace(input.placeholder)) {\r\n                    bindEvents(input, label);\r\n                    if (isEmpty(input.value)) {\r\n                        moveDown(label);\r\n                    }\r\n                } else {\r\n                    console.warn(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Input \"${label.htmlFor}\" contains a placeholder`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n                }\r\n            } else {\r\n                console.error(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Missing input for label \"${label.htmlFor}\"`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                moveUp(label);\r\n                addFocus(label.parentElement);\r\n            });\r\n\r\n            input.addEventListener('blur', function (e) {\r\n                if (isEmpty(this.value)) {\r\n                    moveDown(label);\r\n                }\r\n                removeFocus(label.parentElement);\r\n            });\r\n            \r\n            input.addEventListener('input', function (e) {\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        moveDown(label);\r\n                    } else {\r\n                        moveUp(label);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { isHTMLElement, getElements, getElement } from \"@dom/index.js\";\r\nimport { valOrDefault, isString, isNullOrUndefined, isNullOrWhitespace, isEmpty } from \"@std/index.js\";\r\n\r\nconst TYPE = 'type';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));\r\n\r\nexport function getComponentElement(container, pred, selector) {\r\n    if (isHTMLElement(container)) {\r\n        return pred(container) ? [container] : getElements(selector, container);\r\n    } else if (isString(container) && !isEmpty(container)) {\r\n        let _container = getElement(container);\r\n        return isNullOrUndefined(_container) ? null : getComponentElement(_container);\r\n    } else if (isNullOrUndefined(container)) {\r\n        return getElements(selector);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getInput(type, label) {\r\n    if (isNullOrWhitespace(label.htmlFor)) {\r\n        return getElement(`input[type='${valOrDefault(type, 'text')}']`, label);\r\n    }\r\n    \r\n    return getElement(`#${label.htmlFor}`);\r\n}\r\n\r\nexport const toData = (name) => `[data-type=${name}]`;\r\n\r\nexport const isSelector = (element, type) => element.dataset['type'] === type;","import { getElements, isHTMLElement, isNodeList } from '@dom/index.js';\r\nimport { getInput, getType } from \"../utils.js\";\r\nimport { BaseSelector, BaseSelectorItem } from './base-selector.js';\r\nimport { FormSelector, FormSelectorItem } from './form-selector.js';\r\n\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER: 'BAD_CONTAINER',\r\n    BAD_INPUT: 'BAD_INPUT'\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nexport const DOMQuerySelector = {\r\n    BaseSelector: createDomQuery(BaseSelector),\r\n    FormSelector: createDomQuery(FormSelector)\r\n};\r\n\r\nexport const Factory = {\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var itemContainers = getElements('[data-selector]', container);\r\n        if (!isNodeList(itemContainers)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var widget = null;\r\n        var items = null;\r\n        var type = getType(container);\r\n\r\n        switch (type) {\r\n            case 'selector':\r\n                items = createSelectorItem(itemContainers, type, false);\r\n                widget = Object.create(BaseSelector);\r\n                break;\r\n            case 'form-selector':\r\n                items = createSelectorItem(itemContainers, type, true);\r\n                widget = Object.create(FormSelector);\r\n                break;\r\n        }\r\n\r\n        Object.assign(widget, options, {\r\n            container: container,\r\n            items: items,\r\n            querySelector: createDomQuery(widget),\r\n        });\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nfunction createSelectorItem(itemContainers, type, hasInput) {\r\n    var items = [];\r\n\r\n    var typeHandler = {\r\n        'selector': () => Object.create(BaseSelectorItem),\r\n        'form-selector': () => Object.create(FormSelectorItem),\r\n    };\r\n\r\n    for (let i = 0; i < itemContainers.length; i++) {\r\n        let itemContainer = itemContainers[i];\r\n        itemContainer.dataset.selectorIndex = i;\r\n\r\n        let args = {\r\n            container: itemContainer,\r\n            index: i\r\n        };\r\n\r\n        if (hasInput) {\r\n            let input = getInput('radio', itemContainer);\r\n            if (!isHTMLElement(input)) {\r\n                return ErrorCode.BAD_INPUT;\r\n            }\r\n            \r\n            input.dataset.selectorIndex = i;\r\n\r\n            Object.assign(args, { input: input });\r\n        }\r\n\r\n        let item = typeHandler[type]().init(args);\r\n\r\n        items.push(item);\r\n    }\r\n\r\n    return items;\r\n}","import { isFunction, isNullOrUndefined, isNull, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { check, uncheck, getState } from '../utils.js';\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nexport const BaseSelectorItem = {\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {number} */\r\n    index: null,\r\n    /** @returns {string} */\r\n    get value() { return this.container.dataset['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return getState(this.container) === Status.ON; },\r\n    /** @returns {boolean} */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n};\r\n\r\nexport const BaseSelector = {\r\n    name: 'selector',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.selectedItem.value;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n    init() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n            if (item.value === value) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            const target = event.target;\r\n            if (!hasOwn(target.dataset, 'selector')) {\r\n                return;\r\n            }\r\n            \r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            const item = this.items.find((i) => i.index === +valOrDefault(target.dataset.selectorIndex, -1));\r\n            if(isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, isNull, valOrDefault } from '@std/index.js';\r\nimport { check, uncheck, getState } from '../utils.js';\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nexport const FormSelectorItem = {\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLInputElement} */\r\n    input: null,\r\n    /** @type {number} */\r\n    index: null,\r\n    /** @returns {string} */\r\n    get value() { return this.input['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return this.input.checked; },\r\n    /**\r\n     * Set the state of the item\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} Value indicating the success of the operation\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            this.input.checked = true;\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            this.input.checked = false;\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n};\r\n\r\nexport const FormSelector = {\r\n    name: 'form-selector',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {FormSelectorItem[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.selectedItem.value;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n    init() {\r\n        var value = this.container.dataset['value'];\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n            if (item.value === value) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('change', (event) => {\r\n            const target = event.target;            \r\n\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                target.checked = false;\r\n                this.items[this.selectedIndex].setChecked(true);\r\n                return;\r\n            }\r\n\r\n            const item = this.items.find((i) => i.index === +valOrDefault(target.dataset.selectorIndex, -1));\r\n            if(isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isNullOrUndefined, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { getComponentElement } from '../utils.js';\r\nimport { Factory, DOMQuerySelector } from \"./factory.js\";\r\n\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER: new Error(\"Missing container: A selector requires a container\"),\r\n    BAD_INPUT: new Error(\"Missing input: FormSelector requires an input in the container\"),\r\n};\r\n\r\nconst isSelector = (element) => RegExp('selector|form-selector').test(element.dataset['type']);\r\n\r\nconst domQuery = [DOMQuerySelector.BaseSelector, DOMQuerySelector.FormSelector].join(',');\r\n\r\nexport function Selector(container, _options) {\r\n    const selectorElements = getComponentElement(container, isSelector, domQuery);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(selectorElements)) {\r\n        return null;\r\n    }\r\n\r\n    var selectors = [];\r\n\r\n    for (let i = 0; i < selectorElements.length; i++) {\r\n        let selector = Factory.create(selectorElements[i], options);\r\n        if (hasOwn(ErrorHandler, selector)) {\r\n            throw ErrorHandler[selector];\r\n        }\r\n        selector.init();\r\n\r\n        selectors.push(selector);\r\n    }\r\n\r\n    return selectors;\r\n}\r\n\r\nexport const SelectorFactory = Factory; ","import { isHTMLElement } from '@dom/index.js';\r\nimport { isFunction, isNullOrUndefined, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { check, uncheck, getState, getType, getComponentElement, getInput } from \"./utils.js\";\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER: 'BAD_CONTAINER',\r\n    BAD_INPUT: 'BAD_INPUT'\r\n};\r\n\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER: new Error(\"Missing container: A switch requires a container\"),\r\n    BAD_INPUT: new Error(\"Missing input: FormSwitch requires an input in the container\"),\r\n};\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\nconst createDomQuery = (selector) => `[data-type=\"${selector.name}\"]`;\r\n\r\nconst isSwitch = (element) => RegExp('switch|form-switch').test(element.dataset['type']);\r\n\r\nconst SwitchFactory = {\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER;\r\n        }\r\n\r\n        var widget = null;\r\n        var input = null;\r\n\r\n        switch (getType(container)) {\r\n            case 'switch':\r\n                widget = Object.create(BaseSwitch);\r\n                break;\r\n            case 'form-switch':\r\n                input = getInput('checkbox', container);\r\n                if (!isHTMLElement(input)) {\r\n                    return ErrorCode.BAD_INPUT;\r\n                }\r\n                options.input = input;\r\n                widget = Object.create(FormSwitch);\r\n                break;\r\n        }\r\n\r\n        Object.assign(widget, options, {\r\n            container: container,\r\n            querySelector: createDomQuery(widget),\r\n        });\r\n\r\n\r\n        return widget;\r\n    }\r\n};\r\n\r\nconst BaseSwitch = {\r\n    name: 'switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.container.dataset['value'];\r\n    },\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst FormSwitch = {\r\n    name: 'form-switch',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLInputElement} */\r\n    input: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    get value() {\r\n        return this.input.value;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @param {boolean} check \r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /**\r\n     * Changes the state of the switch\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} A value indicating whether the operation was a success\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        this.input.checked = isChecked;\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n        }\r\n\r\n        return true;\r\n    },\r\n    toggle() {\r\n        if (this.isChecked()) {\r\n            this.setChecked(false);\r\n        } else {\r\n            this.setChecked(true);\r\n        }\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.input.checked) {\r\n            this.setChecked(true);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        this.input.addEventListener('change', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                this.input.checked = !this.input.checked;   // revert input checked state\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst domQuery = [createDomQuery(BaseSwitch), createDomQuery(FormSwitch)].join(',');\r\n\r\nexport function Switch(container, _options) {\r\n    const switcheElements = getComponentElement(container, isSwitch, domQuery);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(switcheElements)) {\r\n        return null;\r\n    }\r\n\r\n    var switches = [];\r\n\r\n    for (let i = 0; i < switcheElements.length; i++) {\r\n        let $switch = SwitchFactory.create(switcheElements[i], options);\r\n        if (hasOwn(ErrorHandler, $switch)) {\r\n            throw ErrorHandler[$switch];\r\n        }\r\n        $switch.init();\r\n\r\n        switches.push($switch);\r\n    }\r\n\r\n    return switches;\r\n}","/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) { element.style.display = \"block\"; }\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) { element.style.display = \"none\"; }","import { getElement, getElements, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isNullOrUndefined, isFunction, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { show, hide } from './utils.js';\r\nimport { getComponentElement } from './form/utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER_COLLAPSIBLE: 'BAD_CONTAINER_COLLAPSIBLE',\r\n    BAD_CONTAINER_ACCORDION: 'BAD_CONTAINER_ACCORDION',\r\n};\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER_COLLAPSIBLE: new Error(\"Missing container: A collapsible requires a container\"),\r\n    BAD_CONTAINER_ACCORDION: new Error(\"Missing container: An accordion requires a container\"),\r\n};\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    /** @returns {CollapsibleFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_COLLAPSIBLE;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    name: 'collapsible',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement} */\r\n    header: null,\r\n    /** @type {HTMLElement} */\r\n    content: null,\r\n    /** @type {Function} */\r\n    beforeOpen: null,\r\n    /** @type {Function} */\r\n    afterOpen: null,\r\n    /** @type {Function} */\r\n    beforeClose: null,\r\n    /** @type {Function} */\r\n    afterClose: null,\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    /** Verifies that the container is collapsed (closed) */\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    /** Verifies that the container is expanded (open) */\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    isClosed: false,\r\n    isInitialized: false,\r\n    /** Opens the container and calls the defined pre/post operations */\r\n    open() {\r\n        if (this.isInitialized && !this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeOpen)) {\r\n            halt = this.beforeOpen(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(show, State.OPEN, 'add');\r\n\r\n        if (isFunction(this.afterOpen)) {\r\n            this.afterOpen(this);\r\n        }\r\n\r\n        this.isClosed = false;\r\n\r\n        return this;\r\n    },\r\n    /** Closes the container and calls the defined pre/post operations */\r\n    close() {\r\n        if (this.isInitialized && this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeClose)) {\r\n            halt = this.beforeClose(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(hide, State.CLOSED, 'remove');\r\n\r\n        if (isFunction(this.afterClose)) {\r\n            this.afterClose(this);\r\n        }\r\n\r\n        this.isClosed = true;\r\n\r\n        return this;\r\n    },\r\n    toggle(displayCb, state, action) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        this.container.classList[action]('expanded');\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        this.header = getElement(`[data-${this.name}-header]`, this.container);\r\n        this.content = getElement(`[data-${this.name}-content]`, this.container);\r\n\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.isClosed = true;\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n\r\n        this.isInitialized = true;\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.isCollapsed()) {\r\n                    this.open();\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    /** @returns {AccordionFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_ACCORDION;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {CollapsibleFactory[]} */\r\n    sections: null,\r\n    /** @type {CollapsibleFactory} */\r\n    selectedSection: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    init() {\r\n        this.sections = [];\r\n\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let element = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create(element, {\r\n                name: 'accordion',\r\n                index: i,\r\n                afterOpen: (selected) => {\r\n                    if (isFunction(this.beforeChange)) {\r\n                        this.beforeChange(selected);\r\n                    }\r\n\r\n                    this.sections.filter((section) => section.index !== selected.index)\r\n                        .forEach((other) => other.close());\r\n\r\n                    if (isFunction(this.afterChange)) {\r\n                        this.afterChange(selected);\r\n                    }\r\n\r\n                    this.selectedSection = selected;\r\n                }\r\n            });\r\n            if (hasOwn(ErrorCode, collapsible)) {\r\n                return collapsible;\r\n            }\r\n            this.sections.push(collapsible);\r\n            collapsible.init();\r\n        }\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\n/**\r\n * Makes a container collapsible\r\n * @param {!HTMLElement} container \r\n * @param {Object} [options]\r\n */\r\nexport function Collapsible(container, _options) {\r\n    var collapsibleElements = getComponentElement(container, isCollapsible, '[data-collapsible]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(collapsibleElements)) {\r\n        return null;\r\n    }\r\n\r\n    var collapsibles = [];\r\n\r\n    for (let i = 0; i < collapsibleElements.length; i++) {\r\n        let collapsible = CollapsibleFactory.create(collapsibleElements[i], options);\r\n        if (hasOwn(ErrorHandler, collapsible)) {\r\n            throw ErrorHandler[collapsible];\r\n        }\r\n        collapsible.init();\r\n\r\n        collapsibles.push(collapsible);\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Transforms a container into an accordion\r\n * @param {!HTMLElement} container \r\n * @param {Object} [_options]\r\n */\r\nexport function Accordion(container, _options) {\r\n    var accordionElements = getComponentElement(container, isAccordion, '[data-boost=accordion]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(accordionElements)) {\r\n        return null;\r\n    }\r\n\r\n    var accordions = [];\r\n\r\n    for (let i = 0; i < accordionElements.length; i++) {\r\n        let accordion = AccordionFactory.create(accordionElements[i], options);\r\n        if (hasOwn(ErrorHandler, accordion)) {\r\n            throw ErrorHandler[accordion];\r\n        }\r\n        accordion.init();\r\n        accordions.push(accordion);\r\n    }\r\n\r\n    return accordions;\r\n}\r\n","/**\r\n * @namespace URI\r\n */\r\n\r\nimport { isNullOrWhitespace, valOrDefault } from '@std/index.js';\r\n\r\nconst encode = encodeURIComponent;\r\n\r\n/**\r\n * Extracts and returns the protocol and host of a given url\r\n * @param {string} url \r\n * @memberof URI\r\n */\r\nexport function getRootUrl(url) {\r\n    return url.toString().replace(/^(.*\\/\\/[^/?#]*).*$/, \"$1\");\r\n}\r\n\r\n/**\r\n * Extracts and returns the parameters of a URL\r\n * @param {string} [prop] Searched parameter\r\n * @param {string} [defValue] Searched parameter default value\r\n * @memberof URI\r\n */\r\nexport function getUrlParams(prop, defValue) {\r\n    var search = decodeURIComponent(window.location.search);\r\n\r\n    if (isNullOrWhitespace(search)) {\r\n        return null;\r\n    }\r\n\r\n    var params = {};\r\n    if ('URLSearchParams' in window) {\r\n        let searchParams = new URLSearchParams(search.substring(1));\r\n        for (const pair of searchParams.entries()) {\r\n            params[pair[0]] = pair[1];\r\n        }\r\n        if (prop) {\r\n            return searchParams.get(prop);\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    var defs = search.substring(1).split('&');\r\n    defs.forEach((val) => {\r\n        var parts = val.split('=', 2);\r\n        params[parts[0]] = parts[1];\r\n    });\r\n    \r\n    if (prop) {\r\n        return valOrDefault(params[prop], defValue);\r\n    }\r\n\r\n    return params;\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction getParams(href) {\r\n    return href.slice(href.indexOf('?') + 1);\r\n}\r\n\r\n/**\r\n * Creates a query string\r\n * @param {Object} query \r\n * @returns {string} Query string\r\n * @memberof URI\r\n */\r\nexport function queryBuilder(query, ignoreNullOrEmpty = false) {\r\n    var str = [];\r\n\r\n    Object.keys(query).forEach((prop) => {\r\n        if (!ignoreNullOrEmpty || !isNullOrWhitespace(query[prop])) {\r\n            str.push(`${encode(prop)}=${encode(query[prop])}`);\r\n        }\r\n    });\r\n\r\n    return str.join('&');\r\n}","import { valOrDefault, isString } from \"./std-parse.js\";\r\n\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof STD\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof STD\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return (isString(val) && val.toLowerCase() === \"true\") || (Number.isInteger(val) && val === 1) || val === true;\r\n}\r\n","import { isNullOrUndefined } from '@std/index.js';\r\nimport { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Copies selected content to clipboard\r\n * @param {HTMLElement|string} value\r\n * @returns {boolean} Value indicating whether the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value.toString(),\r\n        readonly: true\r\n    });\r\n\r\n    if(!isHTMLElement(element)) {\r\n        return false;\r\n    }\r\n\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { isEmpty } from \"./std-parse.js\";\r\n\r\n\r\n/**\r\n * Inserts an item in an array at the specified index\r\n * @param {*[]} array array\r\n * @param {number} index \r\n * @param {object} item \r\n * @returns {number} The new length of the array\r\n * @memberof STD\r\n */\r\nexport function insert(array, index, item) {\r\n    if (!(Array.isArray(array) && Number.isInteger(index))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    array.splice(index, 0, item);\r\n\r\n    return array.length;\r\n}\r\n\r\n/**\r\n * Returns the last element of an array.\r\n * @param {*[]} array array\r\n * @memberof STD\r\n */\r\nexport function last(array) {\r\n    if (!Array.isArray(array)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    if (isEmpty(array)) {\r\n        return undefined;\r\n    }\r\n\r\n    return array[array.length - 1];\r\n}\r\n\r\n/**\r\n * Returns the first element of an array.\r\n * @param {*[]} array array\r\n * @memberof STD\r\n */\r\nexport function first(array) {\r\n    if (!Array.isArray(array)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return array[0];\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\n\r\n/**\r\n * Add a counter to an input element\r\n * @param {HTMLElement} container \r\n */\r\nexport function inputCounter(container) {\r\n    const counters = getElements('[data-counter]', container);\r\n\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let ref = counter.dataset['counter'];\r\n        let input = getElement(`#${ref}`);\r\n        if (isHTMLElement(input)) {\r\n            counter.dataset['counterMax'] = input.maxLength;\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            bindEvents(input, counter);\r\n        } else {\r\n            console.error(`%c@zenkai%c #InputCounter>%cinputCounter:%c Failed to add counter ${ref}. Input (referenced) was not found.`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLElement} counter \r\n     */\r\n    function bindEvents(input, counter) {\r\n        input.addEventListener('input', function (e) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n        });\r\n    }\r\n\r\n    return counters;\r\n}","/**\r\n * Return a random integer between min and max (inclusive).\r\n * @param {number} min \r\n * @param {number} [max] \r\n * @param {boolean} [secure] \r\n * @memberof STD\r\n*/\r\nexport function random(min, max, secure = false) {\r\n    if (!Number.isInteger(min)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    if (!Number.isInteger(max)) {\r\n        max = min;\r\n        min = 0;\r\n    }\r\n\r\n    if (max < min) {\r\n        throw new Error(\"Bad argument: max must be greater than min\");\r\n    }\r\n\r\n    return min + Math.floor((secure ? secureMathRandom() : Math.random()) * (max - min + 1));\r\n}\r\n\r\n/**\r\n * More secure implementation of `Math.random`\r\n * @private\r\n */\r\nfunction secureMathRandom() {\r\n    // Divide a random UInt32 by the maximum value (2^32 -1) to get a result between 0 and 1\r\n    return window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\r\n}","import { isFunction } from '@std/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfy the predicate function if given\r\n * @param {!Node} node \r\n * @param {Function} [_callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, _callback) {\r\n    if (!isNode(node)) {\r\n        throw new TypeError(\"Bad argument: The given `node` is not a valid Node\");\r\n    }\r\n\r\n    if (isFunction(_callback)) {\r\n        Array.from(node.childNodes).forEach(n => {\r\n            if (_callback(n)) {\r\n                node.removeChild(n);\r\n            }\r\n        });\r\n\r\n        return node;\r\n    }\r\n\r\n    return removeAllChildren(node);\r\n\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}"],"names":["valOrDefault","arg","value","isUndefined","isNullOrUndefined","isEmpty","obj","isIterable","length","isDate","Date","_typeof","Object","prototype","toString","call","isString","String","isFunction","isObject","Symbol","iterator","isCollection","isNull","isNullOrWhitespace","test","xhrHandler","type","url","successPred","successCb","failureCb","passCb","xhr","XMLHttpRequest","onreadystatechange","callback","status","content","readyState","State","response","responseText","message","open","setRequestHeader","HttpResponse","OK","Created","Accepted","NoContent","BadRequest","Unauthorized","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","UnsupportedMediaType","InternalServerError","NotImplemented","BadGateway","ServiceUnavaible","GatewayTimeout","resolveDate","useOffset","date","time","getTime","Number","isNaN","getTimezoneOffset","formatDate","format","twoDigits","val","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","MM","getMinutes","ss","getSeconds","replace","slice","hasOwnProperty","isPrototypeOf","hasOwn","key","cloneObject","temp","constructor","capitalize","str","toLowerCase","s","toUpperCase","CaseHandler","camelCase","pascalCase","ccString","charAt","trim","all","values","pred","Array","isArray","TypeError","i","getHitCount","counter","findByIndex","match","prop","index","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","windowHeight","innerHeight","clientHeight","isElementNode","nodeType","Node","ELEMENT_NODE","isNodeList","NodeList","isElement","Element","isNode","isHTMLElement","kind","HTMLElement","element","some","name","tag","interfaceName","TagNameMapping","tagName","includes","isHTMLCollection","HTMLCollection","isDocumentFragment","DOCUMENT_FRAGMENT_NODE","DocumentFragment","_htmlToElement","html","template","createElement","innerHTML","htmlToElement","bind","htmlToElements","appendChildren","parent","children","fragment","createDocumentFragment","from","forEach","appendChild","createTextNode","assign","assignAttribute","setAttribute","GLOBAL_ATTRIBUTES","AttributeHandler","accesskey","autocapitalize","Error","classList","add","dataset","draggable","editable","hidden","id","inputmode","lang","style","tabindex","text","title","data","cite","download","ping","target","coords","shape","autoplay","buffered","controls","loop","muted","playsinline","poster","preload","crossorigin","decoding","height","ismap","loading","srcset","width","alt","as","media","rel","src","sizes","reversed","start","accept","action","autocomplete","autofocus","capture","checked","cols","disabled","dirname","enctype","form","formaction","formenctype","formmethod","formnovalidate","formtarget","high","label","list","low","max","maxlength","method","min","minlength","multiple","novalidate","optimum","pattern","placeholder","readonly","required","rows","selected","size","spellcheck","step","wrap","srclang","abbr","colspan","span","rowspan","scope","href","hreflang","datetime","usemap","addAttributes","attribute","validAttributes","keys","args","shift","createEmptyElement","_validAttributes","_attributes","_content","addContent","createElementX","contentResolver","listItemResolver","item","createListItem","optiongroupContentResolver","createOption","tablerowContentResolver","createTableRow","createLink","createTemplate","createHeader","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createObject","createEmbed","createLineBreak","createThematicBreak","createParagraph","createBlockQuotation","createUnorderedList","createOrderedList","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createAnchor","createArea","createBase","createImage","createAudio","createVideo","createSource","createTrack","createPicture","createFigure","createFigureCaption","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createDeletedPart","createInsertedPart","createQuote","createAbbreviation","createB","createI","createS","createU","createCite","createTime","createCode","createForm","createInput","createTextArea","createLabel","createSelect","createOptionGroup","createFieldset","createLegend","createDataList","createMeter","createProgress","createOutput","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableCell","createTableHeaderCell","resolver","map","child","isClassSelector","selector","isIdSelector","getElement","_container","container","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","getElementSibling","dir","sibling","getPreviousElementSibling","getNextElementSibling","findAncestor","_max","parentElement","findAncestorIter","findAncestorInf","moveDown","moveUp","remove","getType","getState","setState","check","uncheck","getComponentElement","getInput","htmlFor","createDomQuery","Status","BaseSelectorItem","init","this","isChecked","setChecked","BaseSelector","items","selectedIndex","selectedItem","beforeChange","afterChange","setSelectedItem","defaultItem","bindEvents","addEventListener","event","halt","_this","find","selectorIndex","FormSelectorItem","input","FormSelector","ErrorCode","DOMQuerySelector","Factory","create","options","itemContainers","widget","createSelectorItem","hasInput","typeHandler","itemContainer","push","isSelector","RegExp","ErrorHandler","BAD_CONTAINER","BAD_INPUT","domQuery","join","isSwitch","SelectorFactory","SwitchFactory","BaseSwitch","FormSwitch","toggle","_this2","show","display","hide","isCollapsible","el","isAccordion","BAD_CONTAINER_COLLAPSIBLE","BAD_CONTAINER_ACCORDION","CollapsibleFactory","instance","header","beforeOpen","afterOpen","beforeClose","afterClose","isCollapsed","isExpanded","isClosed","isInitialized","close","displayCb","state","e","targetCollapsible","parentNode","AccordionFactory","sections","selectedSection","accordionElements","collapsible","filter","section","other","encode","encodeURIComponent","_options","accordions","accordion","collapsibleElements","collapsibles","success","fail","_successPred","pass","send","selectorElements","selectors","switcheElements","switches","$switch","path","separator","hitCount","isInteger","select","option","deep","importNode","t1","t2","arr1","split","arr2","textContent","execCommand","_children","uri","controller","AbortController","config","signal","setTimeout","abort","fetch","then","ok","statusText","error","part","regex","REGEX_BRACKET_DIGIT","me","parts","len","indexOf","array","labels","console","warn","activeElement","casing","lastIndexOf","defValue","search","decodeURIComponent","location","params","searchParams","URLSearchParams","entries","pair","get","counters","ref","maxLength","splice","insertAdjacentElement","getPrototypeOf","getBoundingClientRect","top1","top","right1","right","bottom1","bottom","left1","left","top2","right2","bottom2","left2","inner","outer","query","ignoreNullOrEmpty","secure","Math","floor","crypto","getRandomValues","Uint32Array","random","normalize","node","_callback","childNodes","n","removeChild","hasChildNodes","lastChild","removeAllChildren","_date"],"mappings":"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"}