{"version":3,"file":"dom-utils.min.js","sources":["../src/datatype/type-manip.js","../src/dom/dom-manip.js","../src/datatype/type-string.js","../src/dom/dom-effects.js","../src/dom/dom-create.js"],"sourcesContent":["/** @module type/manip */\r\n\r\nexport function valOrDefault(arg, val) { return isUndefined(arg) ? val : arg; }\r\n\r\n/**\r\n * Converts a boolean to an integer\r\n * @param {boolean} val \r\n * @returns {int} 1 or 0\r\n */\r\nexport function boolToInt(val) { return val ? 1 : 0; }\r\n\r\n/**\r\n * Converts to boolean\r\n */\r\nexport function toBoolean(val) {\r\n    val = valOrDefault(val, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is an Integer\r\n * @returns {boolean}\r\n */\r\nexport function isInt(n) { return n % 1 === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @returns {boolean}\r\n */\r\nexport function isNull(value) {\r\n    return value === null;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @returns {boolean}\r\n */\r\nexport function isUndefined(value) {\r\n    return typeof value === 'undefined';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @returns {boolean}\r\n */\r\nexport function isNullOrUndefined(value) {\r\n    return isNull(value) || isUndefined(value);\r\n}","ï»¿/** @module dom/manip */\r\n\r\nimport { valOrDefault } from './../datatype/type-manip.js';\r\nimport { isNullOrWhitespace } from './../datatype/type-string.js';\r\n\r\nconst isClassName = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first Element within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [el] Container queried\r\n * @returns {HTMLElement|null} The first Element matches that matches the specified set of CSS selectors.\r\n */\r\nexport function getElement(selector, el) {\r\n    el = valOrDefault(el, document);\r\n\r\n    if (el instanceof DocumentFragment) {\r\n        el.querySelector(selector);\r\n    }\r\n\r\n    if (/^#[a-zA-Z0-9_-]+$/.test(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n    if (isClassName(selector)) {\r\n        return el.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return el.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [el] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n */\r\nexport function getElements(selector, el) {\r\n    el = valOrDefault(el, document);\r\n\r\n    if (el instanceof DocumentFragment) {\r\n        el.querySelectorAll(selector);\r\n    }\r\n\r\n    return isClassName(selector) ?\r\n        el.getElementsByClassName(selector.substring(1)) :\r\n        el.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [el] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n */\r\nexport function getTemplate(selector, el) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, el) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {HTMLElement} The template's clone.\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the window's width\r\n */\r\nexport function windowWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n */\r\nexport function getPreviousElementSibling(el) { return getElementSibling(el, \"previousElementSibling\"); }\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @param {HTMLElement} el element\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n */\r\nexport function getNextElementSibling(el) { return getElementSibling(el, \"nextElementSibling\"); }\r\n\r\n/**\r\n * Inserts a given element before the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n */\r\nexport function insertBeforeElement(target, el) { target.insertAdjacentElement('beforebegin', el); }\r\n\r\n/**\r\n * Inserts a given element after the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n */\r\nexport function insertAfterElement(target, el) { target.insertAdjacentElement('afterend', el); }\r\n\r\n/**\r\n * Inserts a givern element as the first children of the targetted element\r\n * @param {HTMLElement} target \r\n * @param {HTMLElement} el \r\n */\r\nexport function preprendChild(target, el) { target.insertAdjacentElement('afterbegin', el); }\r\n\r\n/**\r\n * Verifies that an element has a class\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n */\r\nexport function hasClass(e, c) {\r\n    var classes = e.className.split(\" \");\r\n    for (let i = 0, len = classes.length; i < len; i++) {\r\n        if (c == classes[i])\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Removes a class from an element if it exists\r\n * @param {HTMLElement} e element\r\n * @param {string} c class\r\n */\r\nexport function removeClass(e, c) {\r\n    if (hasClass(e, c)) {\r\n        var classes = e.className.split(\" \");\r\n        var classes2 = \"\";\r\n        for (let i = 0, len = classes.length; i < len; i++) {\r\n            if (c != classes[i])\r\n                classes2 += \" \" + classes[i];\r\n        }\r\n        e.className = classes2.trim();\r\n    }\r\n}\r\n\r\n/**\r\n * Adds one or many classes to an element if it doesn't exist\r\n * @param {HTMLElement} el Element\r\n * @param {string} c classes\r\n */\r\nexport function addClass(el, c) {\r\n    // If c is an Array => Format c as a space-separated string\r\n    if (Array.isArray(c)) {\r\n        c = c.map(function (c) { return valOrDefault(c.class, c); }).join(' ');\r\n    }\r\n    var strClass = valOrDefault(c.class, c);\r\n\r\n    if (isNullOrWhitespace(el.className))\r\n        el.className = strClass;\r\n    else if (!hasClass(el, c))\r\n        el.className += \" \" + strClass;\r\n}\r\n\r\n/**\r\n * Adds or removes a class from an element depending on the class's presence.\r\n * @param {HTMLElement} el \r\n * @param {string} c ClassName\r\n */\r\nexport function toggleClass(el, c) {\r\n    if (hasClass(el, c))\r\n        removeClass(el, c);\r\n    else\r\n        addClass(el, c);\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {Node} node \r\n */\r\nexport function removeChildren(node) {\r\n    while (node.hasChildNodes())\r\n        node.removeChild(node.lastChild);\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {HTMLElement} el element\r\n * @param {string} dir sibling direction\r\n * @returns {(Element|null)} Element or null\r\n */\r\nexport function getElementSibling(el, dir) {\r\n    var sibling = el[dir];\r\n\r\n    while (sibling && hasClass(sibling, \"autocomplete\")) {\r\n        sibling = sibling[dir];\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a <select> element\r\n * @param {HTMLSelectElement} select\r\n * @param {string} val option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n */\r\nexport function changeSelectValue(select, val) {\r\n    var found = false;\r\n    for (let i = 0, len = select.options.length; !found && i < len; i++) {\r\n        let option = select.options[i];\r\n        if (option.value == val) {\r\n            option.selected = true;\r\n            found = true;\r\n        }\r\n    }\r\n    return found;\r\n}\r\n\r\nfunction stickyHeader(header, target) {\r\n    const css_sticky = 'sticky';\r\n    var sticky = target.offsetTop + target.clientHeight;\r\n    var timeout;\r\n    window.addEventListener('scroll', function (e) {\r\n        if (timeout) window.cancelAnimationFrame(timeout);\r\n        timeout = window.requestAnimationFrame(function () {\r\n            if (window.pageYOffset >= sticky)\r\n                addClass(header, css_sticky);\r\n            else\r\n                removeClass(header, css_sticky);\r\n        });\r\n    }, false);\r\n}","/** @module type/string */\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n */\r\nexport function isNullOrWhitespace(str) { return (!str || str.length === 0 || /^\\s*$/.test(str)); }\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n */\r\nexport function capitalize(str) { return str.replace(/\\b\\w/, function (s) { return s.toUpperCase(); }); }\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n */\r\nexport function capitalizeFirstLetter(str) { \r\n    if(isNullOrWhitespace(str)){\r\n        return str;\r\n    }\r\n    return str.charAt(0).toUpperCase() + str.slice(1); \r\n}\r\n\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    return str.replace(/[Ã Ã¢Ã¤Ã¦]/gi, 'a')\r\n        .replace(/[Ã§]/gi, 'c')\r\n        .replace(/[Ã©Ã¨Ãª]/gi, 'e')\r\n        .replace(/[Ã®Ã¯]/gi, 'i')\r\n        .replace(/[Ã´Å]/gi, 'o')\r\n        .replace(/[Ã¹Ã»Ã¼]/gi, 'u');\r\n}\r\n\r\n/** @ignore */\r\nfunction compare(str1, str2) {\r\n    return str1.toUpperCase().indexOf(str2.toUpperCase()) > -1;\r\n}\r\n\r\n/** @ignore */\r\nfunction replacein(str, searchVal, newValue) {\r\n    return str.toLowerCase().replace(searchVal, newValue);\r\n}","/** @module dom/effects */\r\n\r\nimport { removeClass, addClass } from './dom-manip.js';\r\n\r\nconst Elements = ['BUTTON', 'COMMAND', 'FIELDSET', 'INPUT', 'KEYGEN', 'OPTGROUP', 'OPTION', 'SELECT', 'TEXTAREA'];\r\n\r\n/** @enum */\r\nconst UI = {\r\n    COLLAPSE: 'collapse',\r\n    CHECKED: 'checked',\r\n    DISABLED: 'disabled',\r\n    EMPTY: 'empty',\r\n    HIDDEN: 'hidden',\r\n    SELECTED: 'selected',\r\n};\r\n\r\n/**\r\n * Shows an element\r\n * @param {Element} el Element\r\n */\r\nexport function show(el) { removeClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Hides an element\r\n * @param {Element} el element\r\n */\r\nexport function hide(el) { addClass(el, UI.HIDDEN); }\r\n\r\n/**\r\n * Moves an element out of screen\r\n * @param {HTMLElement} el Element\r\n */\r\nexport function fakeHide(el) { return Object.assign(el, { position: 'absolute', top: '-9999px', left: '-9999px' }); }\r\n\r\n/**\r\n * Applies highlighting style to an element\r\n * @param {HTMLElement} el Element\r\n */\r\nexport function highlight(el) { addClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Removes highlighting style of an element\r\n * @param {HTMLElement} el Element\r\n */\r\nexport function unhighlight(el) { removeClass(el, UI.SELECTED); }\r\n\r\n/**\r\n * Enable an element\r\n * @param {HTMLElement} el Element\r\n */\r\nexport function enable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val === false;\r\n    }\r\n\r\n    el.dataset.disabled = val === false;\r\n}\r\n\r\n/**\r\n * Disable an element\r\n * @param {HTMLElement} el \r\n */\r\nexport function disable(el, val) {\r\n    if (Elements.indexOf(el.tagName) !== -1) {\r\n        el.disabled = val !== false;\r\n    }\r\n\r\n    el.dataset.disabled = val !== false;\r\n}","/** @module dom/create */\r\n\r\nimport { addClass } from './dom-manip.js';\r\nimport { disable } from './dom-effects.js';\r\n\r\nconst create = (tagName) => document.createElement(tagName);\r\n\r\n/**\r\n * Creates the element for the specified tagName\r\n * @param {string} tagName element\r\n * @returns {HTMLElement}\r\n */\r\nexport function createElement(tagName, eId, eClass) {\r\n    var el = document.createElement(tagName);\r\n    if (eId) {\r\n        el.id = eId;\r\n    }\r\n    if (eClass) {\r\n        addClass(el, eClass);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Creates a document fragment\r\n */\r\nexport function createDocFragment() { return document.createDocumentFragment(); }\r\n\r\nexport function createTextNode(str) { return document.createTextNode(str); }\r\n\r\n/**\r\n * Creates a <link> element with some attributes\r\n * @param {string} rel \r\n * @param {string} href \r\n * @param {object} attr \r\n */\r\nexport function createLink(rel, href, attr) {\r\n    var link = create(\"link\");\r\n    link.rel = rel;\r\n    link.href = href;\r\n\r\n    if (attr) {\r\n        addAttributes(link, attr);\r\n    }\r\n\r\n    return link;\r\n}\r\n\r\n\r\nexport function createHeader(attr) {\r\n    var header = create('header');\r\n\r\n    if (attr) {\r\n        addAttributes(header, attr);\r\n    }\r\n\r\n    return header;\r\n}\r\n\r\n/**\r\n * Creates a <div> element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLDivElement}\r\n */\r\nexport function createDiv(attr, children) {\r\n    var div = create(\"div\");\r\n\r\n    if (attr) {\r\n        addAttributes(div, attr);\r\n    }\r\n    if (children) {\r\n        addChildren(div, children);\r\n    }\r\n\r\n    return div;\r\n}\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLElement}\r\n */\r\nexport function createAside(attr) {\r\n    var aside = create('aside');\r\n\r\n    if (attr) {\r\n        addAttributes(aside, attr);\r\n    }\r\n\r\n    return aside;\r\n}\r\n\r\nexport function createLineBreak() { return create('br'); }\r\n\r\n/**\r\n * Creates a <h[1..6]> (heading) element with some attributes\r\n * @param {string} lvl Level\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLHeadingElement}\r\n */\r\nexport function createHeading(lvl, attr) {\r\n    var h = create(lvl);\r\n\r\n    if (attr) {\r\n        addAttributes(h, attr);\r\n    }\r\n\r\n    return h;\r\n}\r\n\r\n/**\r\n * Creates a <p> element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLParagraphElement}\r\n */\r\nexport function createP(attr) {\r\n    var p = create(\"p\");\r\n\r\n    if (attr) {\r\n        addAttributes(p, attr);\r\n    }\r\n\r\n    return p;\r\n}\r\n\r\n/**\r\n * Creates a <ul> element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLUListElement}\r\n */\r\nexport function createUl(attr) {\r\n    var ul = create(\"ul\");\r\n\r\n    if (attr) {\r\n        addAttributes(ul, attr);\r\n    }\r\n\r\n    return ul;\r\n}\r\n\r\n/**\r\n * Creates a <li> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createLi(attr, el) {\r\n    var li = create('li');\r\n\r\n    if (attr) {\r\n        addAttributes(li, attr);\r\n    }\r\n\r\n    if (el) {\r\n        addChildren(li, el);\r\n    }\r\n\r\n    return li;\r\n}\r\n\r\n// Inline Element\r\n\r\n/**\r\n * Creates an <a> (hyperlink) element with some attributes\r\n * @param {string} href URL or a URL fragment that the hyperlink points to\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLAnchorElement}\r\n */\r\nexport function createAnchor(href, attr) {\r\n    var a = create('a');\r\n    if (href) {\r\n        a.href = href;\r\n    }\r\n    if (attr) {\r\n        addAttributes(a, attr);\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n/**\r\n  * Creates a <img> element with some attributes\r\n  * @param {string} src\r\n  * @param {string} alt\r\n  * @param {Object} [attr] attributes\r\n  * @returns {HTMLImageElement}\r\n  */\r\nexport function createImage(src, alt, attr) {\r\n    var img = create('img');\r\n\r\n    if (src) {\r\n        img.src = src;\r\n    }\r\n    if (alt) {\r\n        img.alt = alt;\r\n    }\r\n    if (attr) {\r\n        addAttributes(img, attr);\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\n/**\r\n * Creates a <span> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createSpan(attr) {\r\n    var span = create(\"span\");\r\n\r\n    if (attr) {\r\n        addAttributes(span, attr);\r\n    }\r\n\r\n    return span;\r\n}\r\n\r\n/**\r\n * Creates a <strong> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createStrong(attr) {\r\n    var strong = create(\"strong\");\r\n\r\n    if (attr) {\r\n        addAttributes(strong, attr);\r\n    }\r\n\r\n    return strong;\r\n}\r\n\r\n/**\r\n * Creates a <em> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createEm(attr) {\r\n    var em = create(\"em\");\r\n\r\n    if (attr) {\r\n        addAttributes(em, attr);\r\n    }\r\n\r\n    return em;\r\n}\r\n\r\n// Form Element\r\n\r\n/**\r\n * Creates a <input> element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLInputElement}\r\n */\r\nexport function createInput(attr) {\r\n    var input = create('input');\r\n\r\n    if (attr) {\r\n        addAttributes(input, attr);\r\n    }\r\n\r\n    return input;\r\n}\r\n\r\n[\"checkbox\", \"hidden\", \"file\"].forEach(function (type) {\r\n    createInput[type] = function (attr) {\r\n        var input = createInput(attr);\r\n        input.type = type;\r\n        return input;\r\n    };\r\n});\r\n\r\n/**\r\n * Creates a <label> element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLLabelElement}\r\n */\r\nexport function createLabel(attr) {\r\n    var label = create('label');\r\n\r\n    if (attr) {\r\n        addAttributes(label, attr);\r\n    }\r\n\r\n    return label;\r\n}\r\n\r\n/**\r\n * Creates a <textarea> element with some attributes\r\n * @param {Object} [attr] attributes\r\n * @returns {HTMLTextAreaElement}\r\n */\r\nexport function createTextArea(attr) {\r\n    var textArea = create('textarea');\r\n\r\n    if (attr) {\r\n        addAttributes(textArea, attr);\r\n    }\r\n\r\n    return textArea;\r\n}\r\n\r\n/**\r\n * Creates a <button> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createButton(attr) {\r\n    var btn = create(\"button\");\r\n    btn.type = \"button\";\r\n\r\n    if (attr) {\r\n        addAttributes(btn, attr);\r\n    }\r\n\r\n    return btn;\r\n}\r\n\r\n/**\r\n * Creates a <table> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createTable(attr) {\r\n    var table = create(\"table\");\r\n\r\n    if (attr) {\r\n        addAttributes(table, attr);\r\n    }\r\n\r\n    return table;\r\n}\r\n\r\n/**\r\n * Creates a <thead> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createTableHeader(attr) {\r\n    var thead = create(\"thead\");\r\n\r\n    if (attr) {\r\n        addAttributes(thead, attr);\r\n    }\r\n\r\n    return thead;\r\n}\r\n\r\n/**\r\n * Creates a <tbody> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createTableBody(attr) {\r\n    var tbody = create(\"tbody\");\r\n\r\n    if (attr) {\r\n        addAttributes(tbody, attr);\r\n    }\r\n\r\n    return tbody;\r\n}\r\n\r\n/**\r\n * Creates a <tfoot> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createTableFooter(attr) {\r\n    var tfoot = create(\"tfoot\");\r\n\r\n    if (attr) {\r\n        addAttributes(tfoot, attr);\r\n    }\r\n\r\n    return tfoot;\r\n}\r\n\r\n/**\r\n * Creates a <tr> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createTableRow(attr) {\r\n    var tr = create(\"tr\");\r\n\r\n    if (attr) {\r\n        addAttributes(tr, attr);\r\n    }\r\n\r\n    return tr;\r\n}\r\n\r\n/**\r\n * Creates a <th> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createTableHeaderCell(attr) {\r\n    var th = create(\"th\");\r\n\r\n    if (attr) {\r\n        addAttributes(th, attr);\r\n    }\r\n\r\n    return th;\r\n}\r\n\r\n/**\r\n * Creates a <td> element with some attributes\r\n * @param {Object} [attr] attributes\r\n */\r\nexport function createTableCell(attr) {\r\n    var td = create(\"td\");\r\n\r\n    if (attr) {\r\n        addAttributes(td, attr);\r\n    }\r\n\r\n    return td;\r\n}\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {HTMLElement} el element\r\n * @param {Object} attr attribute\r\n */\r\nexport function addAttributes(el, attr) {\r\n    const ATTR_MAP = {\r\n        id: [assign],\r\n        text: [assign, 'textContent'],\r\n        html: [assign, 'innerHTML'],\r\n        accept: [assign],\r\n        disabled: [disable, el],\r\n        class: [addClass, el],\r\n        value: [assign],\r\n        placeholder: [assign],\r\n        readonly: [assign, 'readOnly'],\r\n        data: [Object.assign, el.dataset]\r\n    };\r\n    const DEFAULT_MAP = [echo, ''];\r\n\r\n    // HTML attributes\r\n    for (const key of Object.keys(attr)) {\r\n        var val = ATTR_MAP[key] || DEFAULT_MAP;\r\n        val[0](val[1] || key, attr[key]);\r\n    }\r\n\r\n    function assign(key, val) {\r\n        el[key] = val;\r\n    }\r\n}\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {HTMLElement} el element\r\n * @param {HTMLCollection} children children elements\r\n */\r\nfunction addChildren(el, children) {\r\n    if (Array.isArray(children)) {\r\n        appendChildren(el, children);\r\n    } else if (children instanceof Element) {\r\n        el.appendChild(children);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Append a list of elements to a node.\r\n * @param {HTMLElement} parent\r\n * @param {HTMLElement[]} children\r\n */\r\nexport function appendChildren(parent, children) {\r\n    var fragment = createDocFragment();\r\n    children.forEach(element => {\r\n        fragment.appendChild(element);\r\n    });\r\n    parent.appendChild(fragment);\r\n    fragment = null;\r\n\r\n    return parent;\r\n}\r\n\r\nfunction echo(o) { o; }"],"names":["valOrDefault","arg","val","isClassName","selector","test","getElement","el","document","DocumentFragment","querySelector","getElementById","substring","getElementsByClassName","hasClass","e","c","classes","className","split","i","len","length","removeClass","classes2","trim","addClass","Array","isArray","map","class","join","str","strClass","getElementSibling","dir","sibling","Elements","UI","disable","indexOf","tagName","disabled","dataset","create","createElement","createDocFragment","createDocumentFragment","createInput","attr","input","addAttributes","ATTR_MAP","id","assign","text","html","accept","value","placeholder","readonly","data","Object","DEFAULT_MAP","echo","keys","key","addChildren","children","appendChildren","Element","appendChild","parent","fragment","forEach","element","o","type","select","found","options","option","selected","template","deep","importNode","content","href","a","aside","btn","div","eId","eClass","em","header","lvl","h","src","alt","img","label","li","rel","link","p","span","strong","table","tbody","td","tfoot","thead","th","tr","textArea","createTextNode","ul","position","top","left","querySelectorAll","target","insertAdjacentElement","node","hasChildNodes","removeChild","lastChild","window","innerWidth","documentElement","clientWidth","body"],"mappings":"mCAEO,SAASA,EAAaC,EAAKC,eAyDN,IAzDgCD,EAAOC,EAAMD,ECGzE,IAAME,EAAc,SAACC,SAAa,qBAAqBC,KAAKD,IAQrD,SAASE,EAAWF,EAAUG,UACjCA,EAAKP,EAAaO,EAAIC,qBAEJC,kBACdF,EAAGG,cAAcN,GAGjB,oBAAoBC,KAAKD,GAClBI,SAASG,eAAeP,EAASQ,UAAU,IAElDT,EAAYC,GACLG,EAAGM,uBAAuBT,EAASQ,UAAU,IAAI,GAGrDL,EAAGG,cAAcN,GAwFrB,SAASU,EAASC,EAAGC,WACpBC,EAAUF,EAAEG,UAAUC,MAAM,KACvBC,EAAI,EAAGC,EAAMJ,EAAQK,OAAQF,EAAIC,EAAKD,OACvCJ,GAAKC,EAAQG,GACb,OAAO,SAER,EAQJ,SAASG,EAAYR,EAAGC,MACvBF,EAASC,EAAGC,GAAI,SACZC,EAAUF,EAAEG,UAAUC,MAAM,KAC5BK,EAAW,GACNJ,EAAI,EAAGC,EAAMJ,EAAQK,OAAQF,EAAIC,EAAKD,IACvCJ,GAAKC,EAAQG,KACbI,GAAY,IAAMP,EAAQG,IAElCL,EAAEG,UAAYM,EAASC,QASxB,SAASC,EAASnB,EAAIS,GAErBW,MAAMC,QAAQZ,KACdA,EAAIA,EAAEa,IAAI,SAAUb,UAAYhB,EAAagB,EAAEc,MAAOd,KAAOe,KAAK,UC/IvCC,EDiJ3BC,EAAWjC,EAAagB,EAAEc,MAAOd,KCjJNgB,EDmJRzB,EAAGW,YCnJ2C,IAAfc,EAAIV,QAAgB,QAAQjB,KAAK2B,GDoJnFzB,EAAGW,UAAYe,EACTnB,EAASP,EAAIS,KACnBT,EAAGW,WAAa,IAAMe,GA8BvB,SAASC,EAAkB3B,EAAI4B,WAC9BC,EAAU7B,EAAG4B,GAEVC,GAAWtB,EAASsB,EAAS,iBAChCA,EAAUA,EAAQD,UAGfC,EE7LX,IAAMC,EAAW,CAAC,SAAU,UAAW,WAAY,QAAS,SAAU,WAAY,SAAU,SAAU,YAGhGC,EAKM,SALNA,EAMQ,WAiDP,SAASC,EAAQhC,EAAIL,IACc,IAAlCmC,EAASG,QAAQjC,EAAGkC,WACpBlC,EAAGmC,UAAmB,IAARxC,GAGlBK,EAAGoC,QAAQD,UAAmB,IAARxC,EC9D1B,IAAM0C,EAAS,SAACH,UAAYjC,SAASqC,cAAcJ,IAsB5C,SAASK,WAA6BtC,SAASuC,yBAgO/C,SAASC,EAAYC,OACpBC,EAAQN,EAAO,gBAEfK,GACAE,EAAcD,EAAOD,GAGlBC,EA+JJ,SAASC,EAAc5C,EAAI0C,WACxBG,EAAW,CACbC,GAAI,CAACC,GACLC,KAAM,CAACD,EAAQ,eACfE,KAAM,CAACF,EAAQ,aACfG,OAAQ,CAACH,GACTZ,SAAU,CAACH,EAAShC,GACpBuB,MAAO,CAACJ,EAAUnB,GAClBmD,MAAO,CAACJ,GACRK,YAAa,CAACL,GACdM,SAAU,CAACN,EAAQ,YACnBO,KAAM,CAACC,OAAOR,OAAQ/C,EAAGoC,UAEvBoB,EAAc,CAACC,EAAM,MAGTF,OAAOG,KAAKhB,sBAAO,KAA1BiB,OACHhE,EAAMkD,EAASc,IAAQH,EAC3B7D,EAAI,GAAGA,EAAI,IAAMgE,EAAKjB,EAAKiB,aAGtBZ,EAAOY,EAAKhE,GACjBK,EAAG2D,GAAOhE,GASlB,SAASiE,EAAY5D,EAAI6D,UACjBzC,MAAMC,QAAQwC,GACdC,EAAe9D,EAAI6D,GACZA,aAAoBE,SAC3B/D,EAAGgE,YAAYH,GAGZ7D,EAQJ,SAAS8D,EAAeG,EAAQJ,OAC/BK,EAAW3B,WACfsB,EAASM,QAAQ,SAAAC,GACbF,EAASF,YAAYI,KAEzBH,EAAOD,YAAYE,GACnBA,EAAW,KAEJD,EAGX,SAASR,EAAKY,UArNd,CAAC,WAAY,SAAU,QAAQF,QAAQ,SAAUG,GAC7C7B,EAAY6B,GAAQ,SAAU5B,OACtBC,EAAQF,EAAYC,UACxBC,EAAM2B,KAAOA,EACN3B,2EH/DR,SAA2B4B,EAAQ5E,WAClC6E,GAAQ,EACH3D,EAAI,EAAGC,EAAMyD,EAAOE,QAAQ1D,QAASyD,GAAS3D,EAAIC,EAAKD,IAAK,KAC7D6D,EAASH,EAAOE,QAAQ5D,GACxB6D,EAAOvB,OAASxD,IAEhB6E,EADAE,EAAOC,UAAW,UAInBH,mBAnJJ,SAAuBI,EAAUC,UAC7BD,EAAW3E,SAAS6E,WAAWF,EAASG,QAAStF,EAAaoF,GAAM,IAASD,kBGsGjF,SAAsBI,EAAMtC,OAC3BuC,EAAI5C,EAAO,YACX2C,IACAC,EAAED,KAAOA,GAETtC,GACAE,EAAcqC,EAAGvC,GAGduC,iBA7FJ,SAAqBvC,OACpBwC,EAAQ7C,EAAO,gBAEfK,GACAE,EAAcsC,EAAOxC,GAGlBwC,kBAqNJ,SAAsBxC,OACrByC,EAAM9C,EAAO,iBACjB8C,EAAIb,KAAO,SAEP5B,GACAE,EAAcuC,EAAKzC,GAGhByC,eAtPJ,SAAmBzC,EAAMmB,OACxBuB,EAAM/C,EAAO,cAEbK,GACAE,EAAcwC,EAAK1C,GAEnBmB,GACAD,EAAYwB,EAAKvB,GAGduB,yCA/DJ,SAAuBlD,EAASmD,EAAKC,OACpCtF,EAAKC,SAASqC,cAAcJ,UAC5BmD,IACArF,EAAG8C,GAAKuC,GAERC,GACAnE,EAASnB,EAAIsF,GAGVtF,cAqNJ,SAAkB0C,OACjB6C,EAAKlD,EAAO,aAEZK,GACAE,EAAc2C,EAAI7C,GAGf6C,kBA/LJ,SAAsB7C,OACrB8C,EAASnD,EAAO,iBAEhBK,GACAE,EAAc4C,EAAQ9C,GAGnB8C,mBA4CJ,SAAuBC,EAAK/C,OAC3BgD,EAAIrD,EAAOoD,UAEX/C,GACAE,EAAc8C,EAAGhD,GAGdgD,iBA8EJ,SAAqBC,EAAKC,EAAKlD,OAC9BmD,EAAMxD,EAAO,cAEbsD,IACAE,EAAIF,IAAMA,GAEVC,IACAC,EAAID,IAAMA,GAEVlD,GACAE,EAAciD,EAAKnD,GAGhBmD,iCA2EJ,SAAqBnD,OACpBoD,EAAQzD,EAAO,gBAEfK,GACAE,EAAckD,EAAOpD,GAGlBoD,cAxIJ,SAAkBpD,EAAM1C,OACvB+F,EAAK1D,EAAO,aAEZK,GACAE,EAAcmD,EAAIrD,GAGlB1C,GACA4D,EAAYmC,EAAI/F,GAGb+F,qBA/DJ,kBAAoC1D,EAAO,oBAxD3C,SAAoB2D,EAAKhB,EAAMtC,OAC9BuD,EAAO5D,EAAO,eAClB4D,EAAKD,IAAMA,EACXC,EAAKjB,KAAOA,EAERtC,GACAE,EAAcqD,EAAMvD,GAGjBuD,aAsEJ,SAAiBvD,OAChBwD,EAAI7D,EAAO,YAEXK,GACAE,EAAcsD,EAAGxD,GAGdwD,gBAmFJ,SAAoBxD,OACnByD,EAAO9D,EAAO,eAEdK,GACAE,EAAcuD,EAAMzD,GAGjByD,kBAOJ,SAAsBzD,OACrB0D,EAAS/D,EAAO,iBAEhBK,GACAE,EAAcwD,EAAQ1D,GAGnB0D,iBA2FJ,SAAqB1D,OACpB2D,EAAQhE,EAAO,gBAEfK,GACAE,EAAcyD,EAAO3D,GAGlB2D,qBAqBJ,SAAyB3D,OACxB4D,EAAQjE,EAAO,gBAEfK,GACAE,EAAc0D,EAAO5D,GAGlB4D,qBAiDJ,SAAyB5D,OACxB6D,EAAKlE,EAAO,aAEZK,GACAE,EAAc2D,EAAI7D,GAGf6D,uBAjDJ,SAA2B7D,OAC1B8D,EAAQnE,EAAO,gBAEfK,GACAE,EAAc4D,EAAO9D,GAGlB8D,uBAnCJ,SAA2B9D,OAC1B+D,EAAQpE,EAAO,gBAEfK,GACAE,EAAc6D,EAAO/D,GAGlB+D,2BAiDJ,SAA+B/D,OAC9BgE,EAAKrE,EAAO,aAEZK,GACAE,EAAc8D,EAAIhE,GAGfgE,oBArBJ,SAAwBhE,OACvBiE,EAAKtE,EAAO,aAEZK,GACAE,EAAc+D,EAAIjE,GAGfiE,oBA5FJ,SAAwBjE,OACvBkE,EAAWvE,EAAO,mBAElBK,GACAE,EAAcgE,EAAUlE,GAGrBkE,oBA3QJ,SAAwBnF,UAAcxB,SAAS4G,eAAepF,eAsG9D,SAAkBiB,OACjBoE,EAAKzE,EAAO,aAEZK,GACAE,EAAckE,EAAIpE,GAGfoE,wBDxFJ,SAAgB9G,EAAIL,IACe,IAAlCmC,EAASG,QAAQjC,EAAGkC,WACpBlC,EAAGmC,UAAmB,IAARxC,GAGlBK,EAAGoC,QAAQD,UAAmB,IAARxC,cAvBnB,SAAkBK,UAAauD,OAAOR,OAAO/C,EAAI,CAAE+G,SAAU,WAAYC,IAAK,UAAWC,KAAM,gEFI/F,SAAqBpH,EAAUG,UAClCA,EAAKP,EAAaO,EAAIC,qBAEJC,kBACdF,EAAGkH,iBAAiBrH,GAGjBD,EAAYC,GACfG,EAAGM,uBAAuBT,EAASQ,UAAU,IAC7CL,EAAGkH,iBAAiBrH,4BA0CrB,SAA+BG,UAAa2B,EAAkB3B,EAAI,mDAPlE,SAAmCA,UAAa2B,EAAkB3B,EAAI,yCA1BtE,SAAqBH,EAAUG,SAC3B,YAAaC,SAASqC,cAAc,YAAcvC,EAAWF,EAAUG,GAAM,0BE7BjF,SAAcA,GAAMmB,EAASnB,EAAI+B,gBAYjC,SAAmB/B,GAAMmB,EAASnB,EAAI+B,yBF+DtC,SAA4BoF,EAAQnH,GAAMmH,EAAOC,sBAAsB,WAAYpH,0BAPnF,SAA6BmH,EAAQnH,GAAMmH,EAAOC,sBAAsB,cAAepH,oBAcvF,SAAuBmH,EAAQnH,GAAMmH,EAAOC,sBAAsB,aAAcpH,qBAmEhF,SAAwBqH,QACpBA,EAAKC,iBACRD,EAAKE,YAAYF,EAAKG,mCE7JvB,SAAcxH,GAAMgB,EAAYhB,EAAI+B,kBFgJpC,SAAqB/B,EAAIS,GACxBF,EAASP,EAAIS,GACbO,EAAYhB,EAAIS,GAEhBU,EAASnB,EAAIS,kBE5Hd,SAAqBT,GAAMgB,EAAYhB,EAAI+B,kBF2B3C,kBACI0F,OAAOC,YAAczH,SAAS0H,gBAAgBC,aAAe3H,SAAS4H,KAAKD"}