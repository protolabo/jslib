{"version":3,"file":"type-utils.min.js","sources":["../src/datatype/type-manip.js","../src/datatype/type-datetime.js","../src/datatype/type-object.js","../src/datatype/type-string.js","../src/datatype/type-array.js","../src/datatype/type-iterable.js"],"sourcesContent":["/** @module type/manip */\r\n\r\nexport function valOrDefault(arg, val) { return typeof arg !== 'undefined' ? arg : val; }\r\n\r\n/**\r\n * Converts a boolean to an integer\r\n * @param {boolean} val \r\n * @returns {int} 1 or 0\r\n */\r\nexport function boolToInt(val) { return val ? 1 : 0; }\r\n\r\n/**\r\n * Converts to boolean\r\n */\r\nexport function toBoolean(val) {\r\n    val = valOrDefault(val, false);\r\n\r\n    return val === true || val.toString().toLowerCase() === 'true';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is an Integer\r\n * @returns {boolean}\r\n */\r\nexport function isInt(n) { return n % 1 === 0; }\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @returns {boolean}\r\n */\r\nexport function isString(str) { return typeof str === 'string' || str instanceof String; }\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @returns {boolean}\r\n */\r\nexport function isFunction(value) { return typeof value === 'function'; }","/** @module type/datetime */\r\n\r\nimport { isInt, valOrDefault } from './type-manip.js';\r\n\r\n/**\r\n * Returns a value indicating the day of the week with monday = 0\r\n * @param {Date} date \r\n */\r\nexport function dayOfWeek(date) {\r\n    var d = date.getDay();\r\n    return d == 0 ? 6 : d - 1;\r\n}\r\n\r\n// Compare 2 times and returns\r\n//  1 if t1 > t2\r\n//  0 if t1 = t2\r\n// -1 if t1 < t2\r\nexport function compareTime(t1, t2) {\r\n    var arr1 = t1.split(':');\r\n    var arr2 = t2.split(':');\r\n\r\n    // hour comparison\r\n    if (+arr1[0] > +arr2[0])\r\n        return 1;\r\n    else if (+arr1[0] < +arr2[0])\r\n        return -1;\r\n    else {\r\n        // minute comparison\r\n        if (+arr1[1] > +arr2[1])\r\n            return 1;\r\n        else if (+arr1[1] < +arr2[1])\r\n            return -1;\r\n        else {\r\n            if (arr1.length == arr2.length && arr1.length == 3) {\r\n                // second comparison\r\n                if (+arr1[2] > +arr2[2])\r\n                    return 1;\r\n                else if (+arr1[2] < +arr2[2])\r\n                    return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function parseTime(n) {\r\n    var hh = +n | 0;\r\n    var mm = '00';\r\n    if (!isInt(+n))\r\n        mm = (n + '').split('.')[1] * 6;\r\n    return hh + ':' + mm;\r\n}\r\n\r\n// Returns a date using the format \"YYYY-mm-dd\"\r\nexport function shortDate(myDate) {\r\n    var d = new Date(myDate);\r\n    var dd = d.getDate();\r\n    var mm = d.getMonth() + 1; // January = 0\r\n    var yyyy = d.getFullYear();\r\n\r\n    if (dd < 10) dd = '0' + dd;\r\n    if (mm < 10) mm = '0' + mm;\r\n    d = yyyy + '-' + mm + '-' + dd;\r\n\r\n    return d;\r\n}\r\n\r\n// Returns a date and time using the format \"YYYY-mm-dd hh:MM\"\r\nexport function longDate(myDate) {\r\n    var d = new Date(myDate);\r\n    var hh = d.getHours();\r\n    var MM = d.getMinutes();\r\n\r\n    if (MM < 10) MM = '0' + MM;\r\n    d = shortDate(d) + ' ' + hh + ':' + MM;\r\n\r\n    return d;\r\n}\r\n\r\n// Convertie une date de string (YYYY-MM-DD) en format Date\r\nexport function parseDate(strDate) {\r\n    var arrDate = strDate.split('-');\r\n    return new Date(arrDate[0], arrDate[1] - 1, arrDate[2], 0, 0, 0, 0);\r\n}\r\n\r\n// Convertie une date de string (YYYY-MM-DD hh:mm) en format Date\r\nexport function parseDateTime(strDate) {\r\n    var arrDateTime = strDate.split(' ');\r\n    var arrTime = arrDateTime[1].split(':');\r\n    var d = parseDate(arrDateTime[0]).setHours(+arrTime[0], +arrTime[1]);\r\n    return new Date(d);\r\n}\r\n\r\nconst DICT = {\r\n    'en': {\r\n        'second': 'second(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'hour(s)',\r\n        'day': 'day(s)',\r\n        'week': 'week(s)',\r\n        'month': 'month(s)',\r\n        'year': 'year(s)',\r\n    },\r\n    'fr': {\r\n        'second': 'seconde(s)',\r\n        'minute': 'minute(s)',\r\n        'hour': 'heure(s)',\r\n        'day': 'jour(s)',\r\n        'week': 'semaine(s)',\r\n        'month': 'mois',\r\n        'year': 'année(s)',\r\n    },\r\n};\r\n\r\nconst trans = function translation(lang, key, isPlural) {\r\n    var value = DICT[lang][key];\r\n\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (isPlural) {\r\n        return value.replace(/\\(([a-z]+)\\)/g, '$1');\r\n    }\r\n\r\n    return value.replace(/\\([a-z]+\\)/g, '');\r\n};\r\n\r\nconst timeAgoResponse = function timeAgoResponseBuilder(time, unit, _lang) {\r\n    var lang = valOrDefault(_lang, 'en');\r\n    var isPlural = time === 1;\r\n    var msg = {\r\n        en: `${time} ${trans('en', unit, isPlural)} ago`,\r\n        fr: `il y a ${time} ${trans('fr', unit, isPlural)}`,\r\n    };\r\n\r\n    return msg[lang];\r\n};\r\n\r\nexport function timeAgo(time, callback) {\r\n    callback = valOrDefault(callback, timeAgoResponse);\r\n    const seconds = Math.floor((Date.now() - (new Date(time)).getTime()) / 1000);\r\n    const MINUTE = 60;\r\n    const HOUR = MINUTE * 60;\r\n    const DAY = HOUR * 24;\r\n    const WEEK = DAY * 7;\r\n    const MONTH = DAY * 30;\r\n    const YEAR = WEEK * 52;\r\n\r\n    if (seconds < MINUTE) {\r\n        return callback(seconds, 'second');\r\n    } else if (seconds < HOUR) {\r\n        return callback(~~(seconds / MINUTE), 'minute');\r\n    } else if (seconds < DAY) {\r\n        return callback(~~(seconds / HOUR), 'hour');\r\n    } else if (seconds < WEEK) {\r\n        return callback(~~(seconds / DAY), 'day');\r\n    } else if (seconds < MONTH) {\r\n        return callback(~~(seconds / WEEK), 'week');\r\n    } else if (seconds < YEAR) {\r\n        return callback(~~(seconds / MONTH), 'month');\r\n    } else {\r\n        return callback(~~(seconds / YEAR), 'year');\r\n    }\r\n}","/** @module type/object */\r\n\r\n/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\nexport const defProp = Object.defineProperty;\r\n\r\nexport const hasOwn = function (obj, key) { return hasOwnProperty.call(obj, key); };\r\n\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\nexport function cloneObject(obj) {\r\n    if (obj === null || typeof (obj) !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","/** @module type/string */\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} str string\r\n */\r\nexport function isNullOrWhiteSpace(str) { return (!str || str.length === 0 || /^\\s*$/.test(str)); }\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n */\r\nexport function capitalize(str) { return str.replace(/\\b\\w/, function (s) { return s.toUpperCase(); }); }\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n */\r\nexport function capitalizeFirstLetter(str) { \r\n    if(isNullOrWhiteSpace(str)){\r\n        return str;\r\n    }\r\n    return str.charAt(0).toUpperCase() + str.slice(1); \r\n}\r\n\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}\r\n\r\n/** @ignore */\r\nfunction compare(str1, str2) {\r\n    return str1.toUpperCase().indexOf(str2.toUpperCase()) > -1;\r\n}\r\n\r\n/** @ignore */\r\nfunction replacein(str, searchVal, newValue) {\r\n    return str.toLowerCase().replace(searchVal, newValue);\r\n}","/** @module type/array */\r\n\r\n/**\r\n * Inserts an item in an array at the specified index\r\n * @param {Object[]} arr array\r\n * @param {number} index \r\n * @param {object} item \r\n */\r\nexport function insert(arr, index, item) { arr.splice(index, 0, item); }\r\n\r\n/**\r\n * Returns last element of array.\r\n * @param {Object[]} arr array\r\n */\r\nexport function last(arr) {\r\n    if (Array.isArray(arr) && arr.length - 1) {\r\n        return arr[arr.length - 1];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the array is empty or not\r\n * @param {Object[]} arr array\r\n */\r\nexport function isEmpty(arr) { return !arr.length; }","/** @module type/iterable */\r\n\r\n/**\r\n * Returns the index or value of the first element in the object\r\n * @param {Object|Array} obj \r\n * @param {any} value \r\n */\r\nexport function find(obj, value) {\r\n    if (Array.isArray(obj)) {\r\n        let index = obj.indexOf(value);\r\n        if (index !== -1) return index;\r\n    } else {\r\n        for (const e of Object.keys(obj)) {\r\n            if (obj[e] === value || obj[e].val === value) {\r\n                return e;\r\n            }\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}"],"names":["valOrDefault","arg","val","isInt","n","shortDate","myDate","d","Date","dd","getDate","mm","getMonth","getFullYear","parseDate","strDate","arrDate","split","DICT","trans","lang","key","isPlural","value","undefined","replace","timeAgoResponse","time","unit","_lang","en","fr","hasOwnProperty","Object","prototype","isPrototypeOf","defProp","defineProperty","hasOwn","obj","call","isNullOrWhiteSpace","str","length","test","toString","toLowerCase","_typeof","String","arr","index","item","splice","Array","isArray","date","getDay","t1","t2","arr1","arr2","hh","getHours","MM","getMinutes","arrDateTime","arrTime","setHours","callback","seconds","Math","floor","now","getTime","DAY","HOUR","WEEK","MINUTE","indexOf","keys","e","child","parent","getPrototypeOf","cloneObject","temp","constructor","s","toUpperCase","charAt","slice","normalize"],"mappings":"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"}